{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "ServiceSpecCharacteristic.schema.json",
  "title": "ServiceSpecCharacteristic",
  "definitions": {
    "ServiceSpecCharacteristic": {
      "$id": "#ServiceSpecCharacteristic",
      "description": "This class represents the key features of this service specification. For example, bandwidth is a characteristic of many different types of services; if bandwidth is a relevant characteristic (e.g., from the point-of-view of a Customer obtaining this Service via a Product) then bandwidth would be a ServiceSpecCharacteristic for that particular Service.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
        },
        "description": {
          "type": "string",
          "description": "A narrative that explains in detail what the serviceSpecCharacteristic is"
        },
        "valueType": {
          "type": "string",
          "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
        },
        "configurable": {
          "type": "boolean",
          "description": "If true, the Boolean indicates that the serviceSpecCharacteristic is configurable"
        },
        "validFor": {
          "$ref": "../Common/TimePeriod.schema.json#TimePeriod",
          "description": "The period for which the serviceSpecCharacteristic is valid"
        },
        "@valueSchemaLocation": {
          "type": "string",
          "description": "This (optional) field provides a link to the schema describing the value type."
        },
        "minCardinality": {
          "type": "integer",
          "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
        },
        "maxCardinality": {
          "type": "integer",
          "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
        },
        "isUnique": {
          "type": "boolean",
          "description": "An indicator that specifies if a value is unique for the specification. Possible values are; \"unique while value is in effect\" and \"unique whether value is in effect or not\""
        },
        "regex": {
          "type": "string",
          "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
        },
        "extensible": {
          "type": "boolean",
          "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for an Entity."
        },
        "serviceSpecCharacteristicValue": {
          "type": "array",
          "description": "A list of service spec characteristic values (ServiceSpecCharacteristicValue [*]). A ServiceSpecCharacteristicValue object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a ServiceSpecCharacteristic object. The values of the attributes in the ServiceSpecCharacteristicValue object describe the values of the attributes that a corresponding ServiceSpecCharacteristic object can take on.",
          "items": {
            "$ref": "../Service/ServiceSpecCharacteristicValue.schema.json#ServiceSpecCharacteristicValue"
          }
        },
        "serviceSpecCharRelationship": {
          "type": "array",
          "description": "A list of service spec char relationships (ServiceSpecCharRelationship [*]). An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
          "items": {
            "$ref": "../Service/ServiceSpecCharRelationship.schema.json#ServiceSpecCharRelationship"
          }
        }
      },
      "allOf": [
        {
          "$ref": "../Common/Entity.schema.json#Entity"
        }
      ]
    }
  }
}
