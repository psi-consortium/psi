openapi: 3.0.1
info:
  title: Resource Catalog Management
  description: >-
    ### February 2023

    Resource Catalog API is one of Catalog Management API Family. Resource Catalog API goal is to
    provide a catalog of resources. 

    ### Operations

    Resource Catalog API performs the following operations on the resources :

    - Retrieve an entity or a collection of entities depending on filter criteria - Partial update
    of an entity (including updating rules) - Create an entity (including default values and
    creation rules) - Delete an entity - Manage notification of events
  version: 5.0.0
servers:
  - url: 'https://serverRoot/resourceCatalog/v5/'
tags:
  - name: resourceCatalog
    description: Operations for ResourceCatalog Resource
  - name: resourceCategory
    description: Operations for ResourceCategory Resource
  - name: resourceCandidate
    description: Operations for ResourceCandidate Resource
  - name: resourceSpecification
    description: Operations for ResourceSpecification Resource
  - name: importJob
    description: Operations for ImportJob Resource
  - name: exportJob
    description: Operations for ExportJob Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /exportJob:
    get:
      tags:
        - exportJob
      summary: List or find ExportJob objects
      description: List or find ExportJob objects
      operationId: listExportJob
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200ExportJobArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - exportJob
      summary: Creates a ExportJob
      description: This operation creates a ExportJob entity.
      operationId: createExportJob
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ExportJob_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201ExportJob'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/exportJob/{id}':
    get:
      tags:
        - exportJob
      summary: Retrieves a ExportJob by ID
      description: >-
        This operation retrieves a ExportJob entity. Attribute selection enabled for all first level
        attributes.
      operationId: retrieveExportJob
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200ExportJob_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - exportJob
      summary: Deletes a ExportJob
      description: This operation deletes a ExportJob entity.
      operationId: deleteExportJob
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /hub:
    post:
      operationId: createHub
      summary: Create a subscription (hub) to receive Events
      description: Sets the communication endpoint to receive Events.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    delete:
      operationId: hubDelete
      summary: Remove a subscription (hub) to receive Events
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
  /importJob:
    get:
      tags:
        - importJob
      summary: List or find ImportJob objects
      description: List or find ImportJob objects
      operationId: listImportJob
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200ImportJobArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - importJob
      summary: Creates a ImportJob
      description: This operation creates a ImportJob entity.
      operationId: createImportJob
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ImportJob_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201ImportJob'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/importJob/{id}':
    get:
      tags:
        - importJob
      summary: Retrieves a ImportJob by ID
      description: >-
        This operation retrieves a ImportJob entity. Attribute selection enabled for all first level
        attributes.
      operationId: retrieveImportJob
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200ImportJob_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - importJob
      summary: Deletes a ImportJob
      description: This operation deletes a ImportJob entity.
      operationId: deleteImportJob
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /listener/exportJobCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ExportJobCreateEvent
      description: Example of a client listener for receiving the notification ExportJobCreateEvent
      operationId: exportJobCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/ExportJobCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/exportJobDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ExportJobDeleteEvent
      description: Example of a client listener for receiving the notification ExportJobDeleteEvent
      operationId: exportJobDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/ExportJobDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/exportJobStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ExportJobStateChangeEvent
      description: Example of a client listener for receiving the notification ExportJobStateChangeEvent
      operationId: exportJobStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ExportJobStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/importJobCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ImportJobCreateEvent
      description: Example of a client listener for receiving the notification ImportJobCreateEvent
      operationId: importJobCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/ImportJobCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/importJobDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ImportJobDeleteEvent
      description: Example of a client listener for receiving the notification ImportJobDeleteEvent
      operationId: importJobDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/ImportJobDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/importJobStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ImportJobStateChangeEvent
      description: Example of a client listener for receiving the notification ImportJobStateChangeEvent
      operationId: importJobStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ImportJobStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/resourceCandidateAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ResourceCandidateAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        ResourceCandidateAttributeValueChangeEvent
      operationId: resourceCandidateAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ResourceCandidateAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/resourceCandidateCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ResourceCandidateCreateEvent
      description: Example of a client listener for receiving the notification ResourceCandidateCreateEvent
      operationId: resourceCandidateCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/ResourceCandidateCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/resourceCandidateDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ResourceCandidateDeleteEvent
      description: Example of a client listener for receiving the notification ResourceCandidateDeleteEvent
      operationId: resourceCandidateDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/ResourceCandidateDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/resourceCandidateStatusChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ResourceCandidateStatusChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        ResourceCandidateStatusChangeEvent
      operationId: resourceCandidateStatusChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ResourceCandidateStatusChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/resourceCatalogAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ResourceCatalogAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        ResourceCatalogAttributeValueChangeEvent
      operationId: resourceCatalogAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ResourceCatalogAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/resourceCatalogCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ResourceCatalogCreateEvent
      description: Example of a client listener for receiving the notification ResourceCatalogCreateEvent
      operationId: resourceCatalogCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/ResourceCatalogCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/resourceCatalogDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ResourceCatalogDeleteEvent
      description: Example of a client listener for receiving the notification ResourceCatalogDeleteEvent
      operationId: resourceCatalogDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/ResourceCatalogDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/resourceCatalogStatusChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ResourceCatalogStatusChangeEvent
      description: Example of a client listener for receiving the notification ResourceCatalogStatusChangeEvent
      operationId: resourceCatalogStatusChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ResourceCatalogStatusChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/resourceCategoryAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ResourceCategoryAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        ResourceCategoryAttributeValueChangeEvent
      operationId: resourceCategoryAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ResourceCategoryAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/resourceCategoryCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ResourceCategoryCreateEvent
      description: Example of a client listener for receiving the notification ResourceCategoryCreateEvent
      operationId: resourceCategoryCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/ResourceCategoryCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/resourceCategoryDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ResourceCategoryDeleteEvent
      description: Example of a client listener for receiving the notification ResourceCategoryDeleteEvent
      operationId: resourceCategoryDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/ResourceCategoryDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/resourceCategoryStatusChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ResourceCategoryStatusChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        ResourceCategoryStatusChangeEvent
      operationId: resourceCategoryStatusChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ResourceCategoryStatusChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/resourceSpecificationAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ResourceSpecificationAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        ResourceSpecificationAttributeValueChangeEvent
      operationId: resourceSpecificationAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ResourceSpecificationAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/resourceSpecificationCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ResourceSpecificationCreateEvent
      description: Example of a client listener for receiving the notification ResourceSpecificationCreateEvent
      operationId: resourceSpecificationCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/ResourceSpecificationCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/resourceSpecificationDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ResourceSpecificationDeleteEvent
      description: Example of a client listener for receiving the notification ResourceSpecificationDeleteEvent
      operationId: resourceSpecificationDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/ResourceSpecificationDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/resourceSpecificationStatusChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ResourceSpecificationStatusChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        ResourceSpecificationStatusChangeEvent
      operationId: resourceSpecificationStatusChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ResourceSpecificationStatusChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /resourceCandidate:
    get:
      tags:
        - resourceCandidate
      summary: List or find ResourceCandidate objects
      description: List or find ResourceCandidate objects
      operationId: listResourceCandidate
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200ResourceCandidateArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - resourceCandidate
      summary: Creates a ResourceCandidate
      description: This operation creates a ResourceCandidate entity.
      operationId: createResourceCandidate
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ResourceCandidate_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201ResourceCandidate'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/resourceCandidate/{id}':
    get:
      tags:
        - resourceCandidate
      summary: Retrieves a ResourceCandidate by ID
      description: >-
        This operation retrieves a ResourceCandidate entity. Attribute selection enabled for all
        first level attributes.
      operationId: retrieveResourceCandidate
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200ResourceCandidate_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - resourceCandidate
      summary: Updates partially a ResourceCandidate
      description: This operation updates partially a ResourceCandidate entity.
      operationId: patchResourceCandidate
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ResourceCandidate_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200ResourceCandidate_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - resourceCandidate
      summary: Deletes a ResourceCandidate
      description: This operation deletes a ResourceCandidate entity.
      operationId: deleteResourceCandidate
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /resourceCatalog:
    get:
      tags:
        - resourceCatalog
      summary: List or find ResourceCatalog objects
      description: List or find ResourceCatalog objects
      operationId: listResourceCatalog
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200ResourceCatalogArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - resourceCatalog
      summary: Creates a ResourceCatalog
      description: This operation creates a ResourceCatalog entity.
      operationId: createResourceCatalog
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ResourceCatalog_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201ResourceCatalog'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/resourceCatalog/{id}':
    get:
      tags:
        - resourceCatalog
      summary: Retrieves a ResourceCatalog by ID
      description: >-
        This operation retrieves a ResourceCatalog entity. Attribute selection enabled for all first
        level attributes.
      operationId: retrieveResourceCatalog
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200ResourceCatalog_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - resourceCatalog
      summary: Updates partially a ResourceCatalog
      description: This operation updates partially a ResourceCatalog entity.
      operationId: patchResourceCatalog
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ResourceCatalog_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200ResourceCatalog_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - resourceCatalog
      summary: Deletes a ResourceCatalog
      description: This operation deletes a ResourceCatalog entity.
      operationId: deleteResourceCatalog
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /resourceCategory:
    get:
      tags:
        - resourceCategory
      summary: List or find ResourceCategory objects
      description: List or find ResourceCategory objects
      operationId: listResourceCategory
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200ResourceCategoryArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - resourceCategory
      summary: Creates a ResourceCategory
      description: This operation creates a ResourceCategory entity.
      operationId: createResourceCategory
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ResourceCategory_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201ResourceCategory'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/resourceCategory/{id}':
    get:
      tags:
        - resourceCategory
      summary: Retrieves a ResourceCategory by ID
      description: >-
        This operation retrieves a ResourceCategory entity. Attribute selection enabled for all
        first level attributes.
      operationId: retrieveResourceCategory
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200ResourceCategory_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - resourceCategory
      summary: Updates partially a ResourceCategory
      description: This operation updates partially a ResourceCategory entity.
      operationId: patchResourceCategory
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ResourceCategory_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200ResourceCategory_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - resourceCategory
      summary: Deletes a ResourceCategory
      description: This operation deletes a ResourceCategory entity.
      operationId: deleteResourceCategory
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /resourceSpecification:
    get:
      tags:
        - resourceSpecification
      summary: List or find ResourceSpecification objects
      description: List or find ResourceSpecification objects
      operationId: listResourceSpecification
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200ResourceSpecificationArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - resourceSpecification
      summary: Creates a ResourceSpecification
      description: This operation creates a ResourceSpecification entity.
      operationId: createResourceSpecification
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ResourceSpecification_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201ResourceSpecification'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/resourceSpecification/{id}':
    get:
      tags:
        - resourceSpecification
      summary: Retrieves a ResourceSpecification by ID
      description: >-
        This operation retrieves a ResourceSpecification entity. Attribute selection enabled for all
        first level attributes.
      operationId: retrieveResourceSpecification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200ResourceSpecification_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - resourceSpecification
      summary: Updates partially a ResourceSpecification
      description: This operation updates partially a ResourceSpecification entity.
      operationId: patchResourceSpecification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ResourceSpecification_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200ResourceSpecification_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - resourceSpecification
      summary: Deletes a ResourceSpecification
      description: This operation deletes a ResourceSpecification entity.
      operationId: deleteResourceSpecification
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
components:
  schemas:
    Addressable:
      type: object
      description: Base schema for adressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    Addressable_FVO:
      type: object
      description: Base schema for adressable entities
      properties:
        id:
          type: string
          description: unique identifier
    Attachment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_FVO'
        - $ref: '#/components/schemas/AttachmentRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_MVO'
        - $ref: '#/components/schemas/AttachmentRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    AttachmentRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    Attachment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
          required:
            - attachmentType
            - mimeType
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
    Attachment_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
    BaseEvent_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent_FVO'
    BaseEvent_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent_MVO'
    Catalog:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: A collection of Catalog Items
          properties:
            description:
              type: string
              description: Description of this catalog
            catalogType:
              type: string
              description: 'Type of this Catalog, like Product, Service, Resource etc.'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            version:
              type: string
              description: Catalog version
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
              description: List of parties involved in this catalog
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status
            name:
              type: string
              description: Name of the catalog
      discriminator:
        propertyName: '@type'
        mapping:
          Catalog: '#/components/schemas/Catalog'
          ResourceCatalog: '#/components/schemas/ResourceCatalog'
    Catalog_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: A collection of Catalog Items
          properties:
            description:
              type: string
              description: Description of this catalog
            catalogType:
              type: string
              description: 'Type of this Catalog, like Product, Service, Resource etc.'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            version:
              type: string
              description: Catalog version
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
              description: List of parties involved in this catalog
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status
            name:
              type: string
              description: Name of the catalog
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Catalog: '#/components/schemas/Catalog_FVO'
          ResourceCatalog: '#/components/schemas/ResourceCatalog_FVO'
    Catalog_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: A collection of Catalog Items
          properties:
            description:
              type: string
              description: Description of this catalog
            catalogType:
              type: string
              description: 'Type of this Catalog, like Product, Service, Resource etc.'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            version:
              type: string
              description: Catalog version
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
              description: List of parties involved in this catalog
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status
            name:
              type: string
              description: Name of the catalog
      discriminator:
        propertyName: '@type'
        mapping:
          Catalog: '#/components/schemas/Catalog_MVO'
          ResourceCatalog: '#/components/schemas/ResourceCatalog_MVO'
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
    CharacteristicRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
    CharacteristicRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
    CharacteristicRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_MVO'
    CharacteristicSpecification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            id:
              type: string
              description: Unique ID for the characteristic
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristc. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification'
    CharacteristicSpecificationRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship'
    CharacteristicSpecificationRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
          required:
            - parentSpecificationId
            - name
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship_FVO'
    CharacteristicSpecificationRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
          required:
            - parentSpecificationId
            - name
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship_MVO'
    CharacteristicSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            id:
              type: string
              description: Unique ID for the characteristic
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristc. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship_FVO'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
          required:
            - name
            - valueType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification_FVO'
    CharacteristicSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            id:
              type: string
              description: Unique ID for the characteristic
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristc. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship_MVO'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
          required:
            - name
            - valueType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification_MVO'
    CharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            specification of a value (number or text or an object) that can be assigned to a
            Characteristic. This is an abstract base class, the actual value is in one of the
            strongly-typed subclasses
          properties:
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic value can take on, such as numeric, text and
                so forth
            isDefault:
              type: boolean
              description: >-
                If true, the Boolean Indicates if the value is the default value for a
                characteristic
            unitOfMeasure:
              type: string
              description: >-
                A length, surface, volume, dry measure, liquid measure, money, weight, time, and the
                like. In general, a determinate quantity or magnitude of the kind designated, taken
                as a standard of comparison for others of the same kind, in assigning to them
                numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueFrom:
              type: integer
              description: The low range value that a characteristic can take on
            valueTo:
              type: integer
              description: The upper range value that a characteristic can take on
            rangeInterval:
              type: string
              description: >-
                An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo
                attributes. If applicable, possible values are "open", "closed", "closedBottom" and
                "closedTop".
            regex:
              type: string
              description: A regular expression constraint for given value
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicValueSpecification: '#/components/schemas/CharacteristicValueSpecification'
    CharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            specification of a value (number or text or an object) that can be assigned to a
            Characteristic. This is an abstract base class, the actual value is in one of the
            strongly-typed subclasses
          properties:
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic value can take on, such as numeric, text and
                so forth
            isDefault:
              type: boolean
              description: >-
                If true, the Boolean Indicates if the value is the default value for a
                characteristic
            unitOfMeasure:
              type: string
              description: >-
                A length, surface, volume, dry measure, liquid measure, money, weight, time, and the
                like. In general, a determinate quantity or magnitude of the kind designated, taken
                as a standard of comparison for others of the same kind, in assigning to them
                numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueFrom:
              type: integer
              description: The low range value that a characteristic can take on
            valueTo:
              type: integer
              description: The upper range value that a characteristic can take on
            rangeInterval:
              type: string
              description: >-
                An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo
                attributes. If applicable, possible values are "open", "closed", "closedBottom" and
                "closedTop".
            regex:
              type: string
              description: A regular expression constraint for given value
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicValueSpecification: '#/components/schemas/CharacteristicValueSpecification_FVO'
    CharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            specification of a value (number or text or an object) that can be assigned to a
            Characteristic. This is an abstract base class, the actual value is in one of the
            strongly-typed subclasses
          properties:
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic value can take on, such as numeric, text and
                so forth
            isDefault:
              type: boolean
              description: >-
                If true, the Boolean Indicates if the value is the default value for a
                characteristic
            unitOfMeasure:
              type: string
              description: >-
                A length, surface, volume, dry measure, liquid measure, money, weight, time, and the
                like. In general, a determinate quantity or magnitude of the kind designated, taken
                as a standard of comparison for others of the same kind, in assigning to them
                numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueFrom:
              type: integer
              description: The low range value that a characteristic can take on
            valueTo:
              type: integer
              description: The upper range value that a characteristic can take on
            rangeInterval:
              type: string
              description: >-
                An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo
                attributes. If applicable, possible values are "open", "closed", "closedBottom" and
                "closedTop".
            regex:
              type: string
              description: A regular expression constraint for given value
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicValueSpecification: '#/components/schemas/CharacteristicValueSpecification_MVO'
    Characteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
    Characteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_MVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_MVO'
    ConnectionPointSpecificationRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Connection point specification reference. A connection point provides a service access
            point (SAP) for input and/or output of the resource function.
          properties:
            version:
              type: string
              description: Connection point specification version
      discriminator:
        propertyName: '@type'
        mapping:
          ConnectionPointSpecificationRef: '#/components/schemas/ConnectionPointSpecificationRef'
    ConnectionPointSpecificationRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Connection point specification reference. A connection point provides a service access
            point (SAP) for input and/or output of the resource function.
          properties:
            version:
              type: string
              description: Connection point specification version
      discriminator:
        propertyName: '@type'
        mapping:
          ConnectionPointSpecificationRef: '#/components/schemas/ConnectionPointSpecificationRef_FVO'
    ConnectionPointSpecificationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Connection point specification reference. A connection point provides a service access
            point (SAP) for input and/or output of the resource function.
          properties:
            version:
              type: string
              description: Connection point specification version
      discriminator:
        propertyName: '@type'
        mapping:
          ConnectionPointSpecificationRef: '#/components/schemas/ConnectionPointSpecificationRef_MVO'
    ConnectionSpecification:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: A specification for an edge in a resource graph.
          properties:
            name:
              description: Descriptive name for graph edge specification.
              type: string
            associationType:
              description: Association type.
              type: string
              enum:
                - pointtoPoint
                - pointtoMultipoint
            endpointSpecification:
              description: Specifications for resource graph vertices connected by this edge.
              type: array
              items:
                $ref: '#/components/schemas/EndpointSpecificationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ConnectionSpecification: '#/components/schemas/ConnectionSpecification'
    ConnectionSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: A specification for an edge in a resource graph.
          properties:
            name:
              description: Descriptive name for graph edge specification.
              type: string
            associationType:
              description: Association type.
              type: string
              enum:
                - pointtoPoint
                - pointtoMultipoint
            endpointSpecification:
              description: Specifications for resource graph vertices connected by this edge.
              type: array
              items:
                $ref: '#/components/schemas/EndpointSpecificationRef_FVO'
          required:
            - associationType
            - endpointSpecification
      discriminator:
        propertyName: '@type'
        mapping:
          ConnectionSpecification: '#/components/schemas/ConnectionSpecification_FVO'
    ConnectionSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: A specification for an edge in a resource graph.
          properties:
            name:
              description: Descriptive name for graph edge specification.
              type: string
            associationType:
              description: Association type.
              type: string
              enum:
                - pointtoPoint
                - pointtoMultipoint
            endpointSpecification:
              description: Specifications for resource graph vertices connected by this edge.
              type: array
              items:
                $ref: '#/components/schemas/EndpointSpecificationRef_MVO'
          required:
            - associationType
            - endpointSpecification
      discriminator:
        propertyName: '@type'
        mapping:
          ConnectionSpecification: '#/components/schemas/ConnectionSpecification_MVO'
    EndpointSpecificationRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: A specification for a vertex in a resource graph.
          properties:
            role:
              description: Role of the Resource Function.
              type: string
            isRoot:
              description: >-
                Directionality: true when endpoint is a source, false when a sink. If true for all
                endpoints connectivity is bidirectional. Default is true.
              type: boolean
              default: true
            connectionPointSpecification:
              $ref: '#/components/schemas/ConnectionPointSpecificationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          EndpointSpecificationRef: '#/components/schemas/EndpointSpecificationRef'
    EndpointSpecificationRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: A specification for a vertex in a resource graph.
          properties:
            role:
              description: Role of the Resource Function.
              type: string
            isRoot:
              description: >-
                Directionality: true when endpoint is a source, false when a sink. If true for all
                endpoints connectivity is bidirectional. Default is true.
              type: boolean
              default: true
            connectionPointSpecification:
              $ref: '#/components/schemas/ConnectionPointSpecificationRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          EndpointSpecificationRef: '#/components/schemas/EndpointSpecificationRef_FVO'
    EndpointSpecificationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: A specification for a vertex in a resource graph.
          properties:
            role:
              description: Role of the Resource Function.
              type: string
            isRoot:
              description: >-
                Directionality: true when endpoint is a source, false when a sink. If true for all
                endpoints connectivity is bidirectional. Default is true.
              type: boolean
              default: true
            connectionPointSpecification:
              $ref: '#/components/schemas/ConnectionPointSpecificationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          EndpointSpecificationRef: '#/components/schemas/EndpointSpecificationRef_MVO'
    Entity:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
    EntityRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntityRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Addressable_FVO'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    Entity_FVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Addressable_FVO'
    Entity_MVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
    Event_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef_FVO'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef_FVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
          required:
            - eventId
            - eventTime
            - eventType
            - event
    Event_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
          required:
            - eventId
            - eventTime
            - eventType
            - event
    ExportJob:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Represents a task used to export resources to a file
          properties:
            completionDate:
              type: string
              format: date-time
              description: Data at which the job was completed
            contentType:
              type: string
              description: The format of the exported data
            creationDate:
              type: string
              format: date-time
              description: Date at which the job was created
            errorLog:
              type: string
              description: >-
                Path to file or stream where errors encountered during the job processing can be
                written
            path:
              type: string
              description: >-
                URL of the root resource acting as the source for streaming content to the file
                specified by the export job
            query:
              type: string
              description: Used to scope the exported data
            status:
              $ref: '#/components/schemas/JobStateType'
            url:
              type: string
              format: uri
              description: URL of the file containing the data to be exported
            id:
              type: string
              description: unique identifier for export job
      discriminator:
        propertyName: '@type'
        mapping:
          ExportJob: '#/components/schemas/ExportJob'
    ExportJobCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ExportJobCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ExportJobCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ExportJobCreateEvent: '#/components/schemas/ExportJobCreateEvent'
    ExportJobCreateEventPayload:
      type: object
      description: ExportJobCreateEventPayload generic structure
      properties:
        exportJob:
          $ref: '#/components/schemas/ExportJob'
    ExportJobDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ExportJobDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ExportJobDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ExportJobDeleteEvent: '#/components/schemas/ExportJobDeleteEvent'
    ExportJobDeleteEventPayload:
      type: object
      description: ExportJobDeleteEventPayload generic structure
      properties:
        exportJob:
          $ref: '#/components/schemas/ExportJob'
    ExportJobStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ExportJobStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ExportJobStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ExportJobStateChangeEvent: '#/components/schemas/ExportJobStateChangeEvent'
    ExportJobStateChangeEventPayload:
      type: object
      description: ExportJobStateChangeEventPayload generic structure
      properties:
        exportJob:
          $ref: '#/components/schemas/ExportJob'
    ExportJob_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: Represents a task used to export resources to a file
          properties:
            completionDate:
              type: string
              format: date-time
              description: Data at which the job was completed
            contentType:
              type: string
              description: The format of the exported data
            creationDate:
              type: string
              format: date-time
              description: Date at which the job was created
            errorLog:
              type: string
              description: >-
                Path to file or stream where errors encountered during the job processing can be
                written
            path:
              type: string
              description: >-
                URL of the root resource acting as the source for streaming content to the file
                specified by the export job
            query:
              type: string
              description: Used to scope the exported data
            status:
              $ref: '#/components/schemas/JobStateType'
            url:
              type: string
              format: uri
              description: URL of the file containing the data to be exported
            id:
              type: string
              description: unique identifier for export job
          required:
            - url
      discriminator:
        propertyName: '@type'
        mapping:
          ExportJob: '#/components/schemas/ExportJob_FVO'
    ExportJob_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: Represents a task used to export resources to a file
          properties:
            completionDate:
              type: string
              format: date-time
              description: Data at which the job was completed
            contentType:
              type: string
              description: The format of the exported data
            creationDate:
              type: string
              format: date-time
              description: Date at which the job was created
            errorLog:
              type: string
              description: >-
                Path to file or stream where errors encountered during the job processing can be
                written
            path:
              type: string
              description: >-
                URL of the root resource acting as the source for streaming content to the file
                specified by the export job
            query:
              type: string
              description: Used to scope the exported data
            status:
              $ref: '#/components/schemas/JobStateType'
            url:
              type: string
              format: uri
              description: URL of the file containing the data to be exported
            id:
              type: string
              description: unique identifier for export job
      discriminator:
        propertyName: '@type'
        mapping:
          ExportJob: '#/components/schemas/ExportJob_MVO'
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    Extensible_FVO:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
    ExternalIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_FVO'
    ExternalIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_MVO'
    FeatureSpecification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Specification for an entity features
          properties:
            version:
              type: string
              description: Version of the feature specification
            id:
              description: feature identifier
              type: string
            isBundle:
              type: boolean
              description: A flag indicating if this is a feature group (true) or not (false)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            featureSpecRelationship:
              description: >-
                A dependency, exclusivity or aggratation relationship between/among feature
                specifications.
              type: array
              items:
                $ref: '#/components/schemas/FeatureSpecificationRelationship'
            policyConstraint:
              description: Reference to mangage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef'
            isEnabled:
              type: boolean
              description: A flag indicating if the feature is enabled (true) or not (false)
            featureSpecCharacteristic:
              description: This is a list of characteristics for a particular feature
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecification'
            name:
              description: This is the name for the feature.
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureSpecification: '#/components/schemas/FeatureSpecification'
    FeatureSpecificationRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Relationship between feature specifications
          properties:
            relationshipType:
              description: This is the type of the feature specification relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            featureId:
              description: Unique identifier of the target feature specification.
              type: string
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target feature
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target feature
            name:
              description: This is the name of the target feature specification.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureSpecificationRelationship: '#/components/schemas/FeatureSpecificationRelationship'
    FeatureSpecificationRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Relationship between feature specifications
          properties:
            relationshipType:
              description: This is the type of the feature specification relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            featureId:
              description: Unique identifier of the target feature specification.
              type: string
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target feature
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target feature
            name:
              description: This is the name of the target feature specification.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - relationshipType
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureSpecificationRelationship: '#/components/schemas/FeatureSpecificationRelationship_FVO'
    FeatureSpecificationRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Relationship between feature specifications
          properties:
            relationshipType:
              description: This is the type of the feature specification relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            featureId:
              description: Unique identifier of the target feature specification.
              type: string
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target feature
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target feature
            name:
              description: This is the name of the target feature specification.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - relationshipType
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureSpecificationRelationship: '#/components/schemas/FeatureSpecificationRelationship_MVO'
    FeatureSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Specification for an entity features
          properties:
            version:
              type: string
              description: Version of the feature specification
            id:
              description: feature identifier
              type: string
            isBundle:
              type: boolean
              description: A flag indicating if this is a feature group (true) or not (false)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            featureSpecRelationship:
              description: >-
                A dependency, exclusivity or aggratation relationship between/among feature
                specifications.
              type: array
              items:
                $ref: '#/components/schemas/FeatureSpecificationRelationship_FVO'
            policyConstraint:
              description: Reference to mangage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef_FVO'
            isEnabled:
              type: boolean
              description: A flag indicating if the feature is enabled (true) or not (false)
            featureSpecCharacteristic:
              description: This is a list of characteristics for a particular feature
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecification_FVO'
            name:
              description: This is the name for the feature.
              type: string
          required:
            - name
            - '@type'
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureSpecification: '#/components/schemas/FeatureSpecification_FVO'
    FeatureSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Specification for an entity features
          properties:
            version:
              type: string
              description: Version of the feature specification
            id:
              description: feature identifier
              type: string
            isBundle:
              type: boolean
              description: A flag indicating if this is a feature group (true) or not (false)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            featureSpecRelationship:
              description: >-
                A dependency, exclusivity or aggratation relationship between/among feature
                specifications.
              type: array
              items:
                $ref: '#/components/schemas/FeatureSpecificationRelationship_MVO'
            policyConstraint:
              description: Reference to mangage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef_MVO'
            isEnabled:
              type: boolean
              description: A flag indicating if the feature is enabled (true) or not (false)
            featureSpecCharacteristic:
              description: This is a list of characteristics for a particular feature
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecification_MVO'
            name:
              description: This is the name for the feature.
              type: string
          required:
            - name
            - '@type'
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureSpecification: '#/components/schemas/FeatureSpecification_MVO'
    ImportJob:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Represents a task used to import resources from a file
          properties:
            completionDate:
              type: string
              format: date-time
              description: Date at which the job was completed
            contentType:
              type: string
              description: Indicates the format of the imported data
            creationDate:
              type: string
              format: date-time
              description: Date at which the job was created
            errorLog:
              type: string
              description: >-
                Path to file or stream where errors encountered during the job processing can be
                written
            path:
              type: string
              description: >-
                URL of the root resource where the content of the file specified by the import job
                must be applied
            status:
              $ref: '#/components/schemas/JobStateType'
            url:
              type: string
              format: uri
              description: URL of the file containing the data to be imported
            id:
              type: string
              description: unique identifier for import job
      discriminator:
        propertyName: '@type'
        mapping:
          ImportJob: '#/components/schemas/ImportJob'
    ImportJobCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ImportJobCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ImportJobCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ImportJobCreateEvent: '#/components/schemas/ImportJobCreateEvent'
    ImportJobCreateEventPayload:
      type: object
      description: ImportJobCreateEventPayload generic structure
      properties:
        importJob:
          $ref: '#/components/schemas/ImportJob'
    ImportJobDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ImportJobDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ImportJobDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ImportJobDeleteEvent: '#/components/schemas/ImportJobDeleteEvent'
    ImportJobDeleteEventPayload:
      type: object
      description: ImportJobDeleteEventPayload generic structure
      properties:
        importJob:
          $ref: '#/components/schemas/ImportJob'
    ImportJobStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ImportJobStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ImportJobStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ImportJobStateChangeEvent: '#/components/schemas/ImportJobStateChangeEvent'
    ImportJobStateChangeEventPayload:
      type: object
      description: ImportJobStateChangeEventPayload generic structure
      properties:
        importJob:
          $ref: '#/components/schemas/ImportJob'
    ImportJob_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: Represents a task used to import resources from a file
          properties:
            completionDate:
              type: string
              format: date-time
              description: Date at which the job was completed
            contentType:
              type: string
              description: Indicates the format of the imported data
            creationDate:
              type: string
              format: date-time
              description: Date at which the job was created
            errorLog:
              type: string
              description: >-
                Path to file or stream where errors encountered during the job processing can be
                written
            path:
              type: string
              description: >-
                URL of the root resource where the content of the file specified by the import job
                must be applied
            status:
              $ref: '#/components/schemas/JobStateType'
            url:
              type: string
              format: uri
              description: URL of the file containing the data to be imported
            id:
              type: string
              description: unique identifier for import job
          required:
            - url
      discriminator:
        propertyName: '@type'
        mapping:
          ImportJob: '#/components/schemas/ImportJob_FVO'
    ImportJob_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: Represents a task used to import resources from a file
          properties:
            completionDate:
              type: string
              format: date-time
              description: Date at which the job was completed
            contentType:
              type: string
              description: Indicates the format of the imported data
            creationDate:
              type: string
              format: date-time
              description: Date at which the job was created
            errorLog:
              type: string
              description: >-
                Path to file or stream where errors encountered during the job processing can be
                written
            path:
              type: string
              description: >-
                URL of the root resource where the content of the file specified by the import job
                must be applied
            status:
              $ref: '#/components/schemas/JobStateType'
            url:
              type: string
              format: uri
              description: URL of the file containing the data to be imported
            id:
              type: string
              description: unique identifier for import job
      discriminator:
        propertyName: '@type'
        mapping:
          ImportJob: '#/components/schemas/ImportJob_MVO'
    IntentSpecificationRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentSpecificationRef: '#/components/schemas/IntentSpecificationRef'
    IntentSpecificationRef_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentSpecificationRef: '#/components/schemas/IntentSpecificationRef_FVO'
    IntentSpecificationRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentSpecificationRef: '#/components/schemas/IntentSpecificationRef_MVO'
    JobStateType:
      enum:
        - Not Started
        - Running
        - Succeeded
        - Failed
      type: string
      description: Valid values for the state of a batch job (e.g. catalog import)
    LogicalResourceSpecification:
      type: object
      description: >-
        This is a derived class of ResourceSpecification, and is used to define the invariant
        characteristics and behavior (attributes, methods, constraints, and relationships) of a
        LogicalResource.
      allOf:
        - $ref: '#/components/schemas/ResourceSpecification'
    PartyRef:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
    PartyRefOrPartyRoleRef:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRefOrPartyRoleRef_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_FVO'
        - $ref: '#/components/schemas/PartyRoleRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRefOrPartyRoleRef_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRef_FVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
    PartyRef_MVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
    PartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PhysicalResourceSpecification:
      allOf:
        - $ref: '#/components/schemas/ResourceSpecification'
        - type: object
          description: >-
            This is a derived class of ResourceSpecification, and is used to define the invariant
            characteristics and behavior (attributes, methods, constraints, and relationships) of a
            PhysicalResource.
          properties:
            model:
              type: string
              description: >-
                This is a string that represents a manufacturer-allocated number used to identify
                the general type and/or category of the hardware item. This, in combination with the
                Part and the Vendor, identify different types of hardware items. The SerialNumber
                can then be used to differentiate between different instances of the same type of
                hardware item. This is an optional attribute.
            part:
              type: string
              description: >-
                This is a string that defines a manufacturer-allocated part number assigned by the
                organization that manufactures the hardware item. This, in combination with the
                Model and the Vendor, identify different types of hardware items. The SerialNumber
                can then be used to differentiate between different instances of the same type of
                hardware item. This is a REQUIRED attribute.
            sku:
              type: string
              description: >-
                This is a string that defines the manufacturer-allocated Stock Keeping Unit (SKU)
                number of the hardware item. This is an optional attribute.
            vendor:
              type: string
              description: >-
                This is a string that defines the name of the manufacturer. This, in combination
                with the Model and the Part, identify different types of hardware items. The
                SerialNumber can then be used to differentiate between different instances of the
                same type of hardware item. This is a REQUIRED attribute for a physical resource.
    PolicyRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef'
    PolicyRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef_FVO'
    PolicyRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef_MVO'
    Quantity:
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          default: 1
          description: Numeric value in a given unit
        units:
          type: string
          description: Unit
    RelatedPartyRefOrPartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
    RelatedPartyRefOrPartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_FVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
    RelatedPartyRefOrPartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
    ResourceCandidate:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            ResourceCandidate is an entity that makes a resource specification available to a
            catalog. A ResourceCandidate and its associated resource specification may be published
            - made visible - in any number of resource catalogs, or in none.
          properties:
            description:
              type: string
              description: Description of this REST resource
            version:
              type: string
              description: the version of resource candidate
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of the resource candidate.
            category:
              type: array
              items:
                $ref: '#/components/schemas/ResourceCategoryRef'
              description: The categories in which this candidate is exposed
            resourceSpecification:
              $ref: '#/components/schemas/ResourceSpecificationRef'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCandidate: '#/components/schemas/ResourceCandidate'
    ResourceCandidateAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ResourceCandidateAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ResourceCandidateAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCandidateAttributeValueChangeEvent: '#/components/schemas/ResourceCandidateAttributeValueChangeEvent'
    ResourceCandidateAttributeValueChangeEventPayload:
      type: object
      description: ResourceCandidateAttributeValueChangeEventPayload generic structure
      properties:
        resourceCandidate:
          $ref: '#/components/schemas/ResourceCandidate'
    ResourceCandidateCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ResourceCandidateCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ResourceCandidateCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCandidateCreateEvent: '#/components/schemas/ResourceCandidateCreateEvent'
    ResourceCandidateCreateEventPayload:
      type: object
      description: ResourceCandidateCreateEventPayload generic structure
      properties:
        resourceCandidate:
          $ref: '#/components/schemas/ResourceCandidate'
    ResourceCandidateDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ResourceCandidateDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ResourceCandidateDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCandidateDeleteEvent: '#/components/schemas/ResourceCandidateDeleteEvent'
    ResourceCandidateDeleteEventPayload:
      type: object
      description: ResourceCandidateDeleteEventPayload generic structure
      properties:
        resourceCandidate:
          $ref: '#/components/schemas/ResourceCandidate'
    ResourceCandidateRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ResourceCandidate is an entity that makes a resource specification available to a
            catalog. A ResourceCandidate and its associated resource specification may be published
            - made visible - in any number of resource catalogs, or in none.
          properties:
            version:
              type: string
              description: the version of resource candidate
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCandidateRef: '#/components/schemas/ResourceCandidateRef'
    ResourceCandidateRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            ResourceCandidate is an entity that makes a resource specification available to a
            catalog. A ResourceCandidate and its associated resource specification may be published
            - made visible - in any number of resource catalogs, or in none.
          properties:
            version:
              type: string
              description: the version of resource candidate
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCandidateRef: '#/components/schemas/ResourceCandidateRef_FVO'
    ResourceCandidateRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ResourceCandidate is an entity that makes a resource specification available to a
            catalog. A ResourceCandidate and its associated resource specification may be published
            - made visible - in any number of resource catalogs, or in none.
          properties:
            version:
              type: string
              description: the version of resource candidate
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCandidateRef: '#/components/schemas/ResourceCandidateRef_MVO'
    ResourceCandidateStatusChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ResourceCandidateStatusChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ResourceCandidateStatusChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCandidateStatusChangeEvent: '#/components/schemas/ResourceCandidateStatusChangeEvent'
    ResourceCandidateStatusChangeEventPayload:
      type: object
      description: ResourceCandidateStatusChangeEventPayload generic structure
      properties:
        resourceCandidate:
          $ref: '#/components/schemas/ResourceCandidate'
    ResourceCandidate_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            ResourceCandidate is an entity that makes a resource specification available to a
            catalog. A ResourceCandidate and its associated resource specification may be published
            - made visible - in any number of resource catalogs, or in none.
          properties:
            description:
              type: string
              description: Description of this REST resource
            version:
              type: string
              description: the version of resource candidate
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of the resource candidate.
            category:
              type: array
              items:
                $ref: '#/components/schemas/ResourceCategoryRef_FVO'
              description: The categories in which this candidate is exposed
            resourceSpecification:
              $ref: '#/components/schemas/ResourceSpecificationRef_FVO'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCandidate: '#/components/schemas/ResourceCandidate_FVO'
    ResourceCandidate_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            ResourceCandidate is an entity that makes a resource specification available to a
            catalog. A ResourceCandidate and its associated resource specification may be published
            - made visible - in any number of resource catalogs, or in none.
          properties:
            description:
              type: string
              description: Description of this REST resource
            version:
              type: string
              description: the version of resource candidate
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of the resource candidate.
            category:
              type: array
              items:
                $ref: '#/components/schemas/ResourceCategoryRef_MVO'
              description: The categories in which this candidate is exposed
            resourceSpecification:
              $ref: '#/components/schemas/ResourceSpecificationRef_MVO'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCandidate: '#/components/schemas/ResourceCandidate_MVO'
    ResourceCatalog:
      allOf:
        - $ref: '#/components/schemas/Catalog'
        - type: object
          description: >-
            The root entity for resource catalog management.

            A resource catalog is a group of resource specifications made available through resource
            candidates that an organization provides to the consumers (internal consumers like its
            employees or B2B customers or B2C customers).
          properties:
            category:
              type: array
              items:
                $ref: '#/components/schemas/ResourceCategoryRef'
              description: List of root categories contained in this catalog
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
    ResourceCatalogAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ResourceCatalogAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ResourceCatalogAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCatalogAttributeValueChangeEvent: '#/components/schemas/ResourceCatalogAttributeValueChangeEvent'
    ResourceCatalogAttributeValueChangeEventPayload:
      type: object
      description: ResourceCatalogAttributeValueChangeEventPayload generic structure
      properties:
        resourceCatalog:
          $ref: '#/components/schemas/ResourceCatalog'
    ResourceCatalogCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ResourceCatalogCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ResourceCatalogCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCatalogCreateEvent: '#/components/schemas/ResourceCatalogCreateEvent'
    ResourceCatalogCreateEventPayload:
      type: object
      description: ResourceCatalogCreateEventPayload generic structure
      properties:
        resourceCatalog:
          $ref: '#/components/schemas/ResourceCatalog'
    ResourceCatalogDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ResourceCatalogDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ResourceCatalogDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCatalogDeleteEvent: '#/components/schemas/ResourceCatalogDeleteEvent'
    ResourceCatalogDeleteEventPayload:
      type: object
      description: ResourceCatalogDeleteEventPayload generic structure
      properties:
        resourceCatalog:
          $ref: '#/components/schemas/ResourceCatalog'
    ResourceCatalogStatusChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ResourceCatalogStatusChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ResourceCatalogStatusChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCatalogStatusChangeEvent: '#/components/schemas/ResourceCatalogStatusChangeEvent'
    ResourceCatalogStatusChangeEventPayload:
      type: object
      description: ResourceCatalogStatusChangeEventPayload generic structure
      properties:
        resourceCatalog:
          $ref: '#/components/schemas/ResourceCatalog'
    ResourceCatalog_FVO:
      allOf:
        - $ref: '#/components/schemas/Catalog_FVO'
        - type: object
          description: >-
            The root entity for resource catalog management.

            A resource catalog is a group of resource specifications made available through resource
            candidates that an organization provides to the consumers (internal consumers like its
            employees or B2B customers or B2C customers).
          properties:
            category:
              type: array
              items:
                $ref: '#/components/schemas/ResourceCategoryRef_FVO'
              description: List of root categories contained in this catalog
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
          required:
            - name
    ResourceCatalog_MVO:
      allOf:
        - $ref: '#/components/schemas/Catalog_MVO'
        - type: object
          description: >-
            The root entity for resource catalog management.

            A resource catalog is a group of resource specifications made available through resource
            candidates that an organization provides to the consumers (internal consumers like its
            employees or B2B customers or B2C customers).
          properties:
            category:
              type: array
              items:
                $ref: '#/components/schemas/ResourceCategoryRef_MVO'
              description: List of root categories contained in this catalog
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
    ResourceCategory:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The (resource) category resource is used to group resource candidates in logical
            containers. Categories can contain other categories.
          properties:
            description:
              type: string
              description: Description of the category
            name:
              type: string
              description: The name of the Category
            version:
              type: string
              description: Category version
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update
            parentId:
              type: string
              description: Unique identifier of the parent category
            isRoot:
              type: boolean
              description: 'If true, this Boolean indicates that the category is a root of categories'
            category:
              type: array
              items:
                $ref: '#/components/schemas/ResourceCategoryRef'
              description: >-
                The category resource is used to group product offerings, service and resource
                candidates in logical containers. Categories can contain other (sub-)categories
                and/or product offerings.
            resourceSpecification:
              type: array
              items:
                $ref: '#/components/schemas/ResourceSpecificationRef'
              description: List of resource specifications accessible via this category
            resourceCandidate:
              type: array
              items:
                $ref: '#/components/schemas/ResourceCandidateRef'
              description: List of resource candidates accessible via this category
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
              description: List of parties involved in this category
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCategory: '#/components/schemas/ResourceCategory'
    ResourceCategoryAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ResourceCategoryAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ResourceCategoryAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCategoryAttributeValueChangeEvent: '#/components/schemas/ResourceCategoryAttributeValueChangeEvent'
    ResourceCategoryAttributeValueChangeEventPayload:
      type: object
      description: ResourceCategoryAttributeValueChangeEventPayload generic structure
      properties:
        resourceCategory:
          $ref: '#/components/schemas/ResourceCategory'
    ResourceCategoryCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ResourceCategoryCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ResourceCategoryCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCategoryCreateEvent: '#/components/schemas/ResourceCategoryCreateEvent'
    ResourceCategoryCreateEventPayload:
      type: object
      description: ResourceCategoryCreateEventPayload generic structure
      properties:
        resourceCategory:
          $ref: '#/components/schemas/ResourceCategory'
    ResourceCategoryDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ResourceCategoryDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ResourceCategoryDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCategoryDeleteEvent: '#/components/schemas/ResourceCategoryDeleteEvent'
    ResourceCategoryDeleteEventPayload:
      type: object
      description: ResourceCategoryDeleteEventPayload generic structure
      properties:
        resourceCategory:
          $ref: '#/components/schemas/ResourceCategory'
    ResourceCategoryRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            The (resource) category resource is used to group resource candidates in logical
            containers. Categories can contain other categories.
          properties:
            version:
              type: string
              description: Category version
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCategoryRef: '#/components/schemas/ResourceCategoryRef'
    ResourceCategoryRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            The (resource) category resource is used to group resource candidates in logical
            containers. Categories can contain other categories.
          properties:
            version:
              type: string
              description: Category version
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCategoryRef: '#/components/schemas/ResourceCategoryRef_FVO'
    ResourceCategoryRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            The (resource) category resource is used to group resource candidates in logical
            containers. Categories can contain other categories.
          properties:
            version:
              type: string
              description: Category version
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCategoryRef: '#/components/schemas/ResourceCategoryRef_MVO'
    ResourceCategoryStatusChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ResourceCategoryStatusChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ResourceCategoryStatusChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCategoryStatusChangeEvent: '#/components/schemas/ResourceCategoryStatusChangeEvent'
    ResourceCategoryStatusChangeEventPayload:
      type: object
      description: ResourceCategoryStatusChangeEventPayload generic structure
      properties:
        resourceCategory:
          $ref: '#/components/schemas/ResourceCategory'
    ResourceCategory_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            The (resource) category resource is used to group resource candidates in logical
            containers. Categories can contain other categories.
          properties:
            description:
              type: string
              description: Description of the category
            name:
              type: string
              description: The name of the Category
            version:
              type: string
              description: Category version
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update
            parentId:
              type: string
              description: Unique identifier of the parent category
            isRoot:
              type: boolean
              description: 'If true, this Boolean indicates that the category is a root of categories'
            category:
              type: array
              items:
                $ref: '#/components/schemas/ResourceCategoryRef_FVO'
              description: >-
                The category resource is used to group product offerings, service and resource
                candidates in logical containers. Categories can contain other (sub-)categories
                and/or product offerings.
            resourceSpecification:
              type: array
              items:
                $ref: '#/components/schemas/ResourceSpecificationRef_FVO'
              description: List of resource specifications accessible via this category
            resourceCandidate:
              type: array
              items:
                $ref: '#/components/schemas/ResourceCandidateRef_FVO'
              description: List of resource candidates accessible via this category
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
              description: List of parties involved in this category
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCategory: '#/components/schemas/ResourceCategory_FVO'
    ResourceCategory_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            The (resource) category resource is used to group resource candidates in logical
            containers. Categories can contain other categories.
          properties:
            description:
              type: string
              description: Description of the category
            name:
              type: string
              description: The name of the Category
            version:
              type: string
              description: Category version
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update
            parentId:
              type: string
              description: Unique identifier of the parent category
            isRoot:
              type: boolean
              description: 'If true, this Boolean indicates that the category is a root of categories'
            category:
              type: array
              items:
                $ref: '#/components/schemas/ResourceCategoryRef_MVO'
              description: >-
                The category resource is used to group product offerings, service and resource
                candidates in logical containers. Categories can contain other (sub-)categories
                and/or product offerings.
            resourceSpecification:
              type: array
              items:
                $ref: '#/components/schemas/ResourceSpecificationRef_MVO'
              description: List of resource specifications accessible via this category
            resourceCandidate:
              type: array
              items:
                $ref: '#/components/schemas/ResourceCandidateRef_MVO'
              description: List of resource candidates accessible via this category
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
              description: List of parties involved in this category
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceCategory: '#/components/schemas/ResourceCategory_MVO'
    ResourceFunctionSpecification:
      allOf:
        - $ref: '#/components/schemas/LogicalResourceSpecification'
        - type: object
          description: >-
            Specifies a function as a behavior to transform inputs of any nature into outputs of any
            nature independently from the way it is provided, for example a Medium to Large
            Enterprise Firewall.
          properties:
            connectionPointSpecification:
              type: array
              description: >-
                External connection point specifications. These are the service access points (SAP)
                where inputs and outputs of the function are available.
              items:
                $ref: '#/components/schemas/ConnectionPointSpecificationRef'
            connectivitySpecification:
              type: array
              description: Internal connectivity potential specifications.
              items:
                $ref: '#/components/schemas/ResourceGraphSpecification'
    ResourceGraphSpecification:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Resource graph specification.
          properties:
            name:
              description: Descriptive name for the resource graph specification.
              type: string
            description:
              description: Description of the resource graph specification.
              type: string
            graphSpecificationRelationship:
              description: Relationships to other resource graph specifications.
              type: array
              items:
                $ref: '#/components/schemas/ResourceGraphSpecificationRelationship'
            connectionSpecification:
              description: Resource graph edge specifications.
              type: array
              items:
                $ref: '#/components/schemas/ConnectionSpecification'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceGraphSpecification: '#/components/schemas/ResourceGraphSpecification'
    ResourceGraphSpecificationRef:
      type: object
      description: Resource graph specification reference.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceGraphSpecificationRef: '#/components/schemas/ResourceGraphSpecificationRef'
    ResourceGraphSpecificationRef_FVO:
      type: object
      description: Resource graph specification reference.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceGraphSpecificationRef: '#/components/schemas/ResourceGraphSpecificationRef_FVO'
    ResourceGraphSpecificationRef_MVO:
      type: object
      description: Resource graph specification reference.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceGraphSpecificationRef: '#/components/schemas/ResourceGraphSpecificationRef_MVO'
    ResourceGraphSpecificationRelationship:
      type: object
      description: Describes link between resource graph specifications.
      properties:
        relationshipType:
          description: Semantic of the relationship.
          type: string
          enum:
            - adjacency
            - connectivity
        resourceGraph:
          $ref: '#/components/schemas/ResourceGraphSpecificationRef'
    ResourceGraphSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: Resource graph specification.
          properties:
            name:
              description: Descriptive name for the resource graph specification.
              type: string
            description:
              description: Description of the resource graph specification.
              type: string
            graphSpecificationRelationship:
              description: Relationships to other resource graph specifications.
              type: array
              items:
                $ref: '#/components/schemas/ResourceGraphSpecificationRelationship'
            connectionSpecification:
              description: Resource graph edge specifications.
              type: array
              items:
                $ref: '#/components/schemas/ConnectionSpecification_FVO'
          required:
            - connectionSpecification
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceGraphSpecification: '#/components/schemas/ResourceGraphSpecification_FVO'
    ResourceGraphSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: Resource graph specification.
          properties:
            name:
              description: Descriptive name for the resource graph specification.
              type: string
            description:
              description: Description of the resource graph specification.
              type: string
            graphSpecificationRelationship:
              description: Relationships to other resource graph specifications.
              type: array
              items:
                $ref: '#/components/schemas/ResourceGraphSpecificationRelationship'
            connectionSpecification:
              description: Resource graph edge specifications.
              type: array
              items:
                $ref: '#/components/schemas/ConnectionSpecification_MVO'
          required:
            - connectionSpecification
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceGraphSpecification: '#/components/schemas/ResourceGraphSpecification_MVO'
    ResourceSpecification:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Resources are physical or non-physical components (or some combination of these) within
            an enterprise's infrastructure or inventory. They are typically consumed or used by
            services (for example a physical port assigned to a service) or contribute to the
            realization of a Product (for example, a SIM card). They can be drawn from the
            Application, Computing and Network domains, and include, for example, Network Elements,
            software, IT systems, content and information, and technology components.

            A ResourceSpecification is a base class that represents a generic means for implementing
            a particular type of Resource. In essence, a ResourceSpecification defines the common
            attributes and relationships of a set of related Resources, while Resource defines a
            specific instance that is based on a particular ResourceSpecification.
          properties:
            description:
              type: string
              description: Description of this REST resource
            version:
              type: string
              description: Resource Specification version
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                A flag indicates that if this resource specification is a bundled specification
                (true) or single (false).
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of the resource specification
            name:
              type: string
              description: Name given to this REST resource
            category:
              type: string
              description: >-
                Category of the target resource like NetworkConnectivity, PhysicalLinks, Generic,
                L2Network and so on.
            targetResourceSchema:
              $ref: '#/components/schemas/TargetResourceSchema'
            featureSpecification:
              type: array
              description: A list of Features for this specification.
              items:
                $ref: '#/components/schemas/FeatureSpecification'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
              description: >-
                Complements the description of an element (for instance a resource) through video,
                pictures ...
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
              description: A related party defines party or party role linked to a specific entity.
            resourceSpecCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecification'
              description: >-
                A characteristic quality or distinctive feature of a ResourceSpecification.  The
                characteristic can be take on a discrete value, such as color, can take on a range
                of values, (for example, sensitivity of 100-240 mV), or can be derived from a
                formula (for example, usage time (hrs) = 30 - talk time *3). Certain
                characteristics, such as color, may be configured during the ordering or some other
                process.
            resourceSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/ResourceSpecificationRelationship'
              description: >-
                A migration, substitution, dependency or exclusivity relationship between/among
                resource specifications.
            intentSpecification:
              $ref: '#/components/schemas/IntentSpecificationRef'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceSpecification: '#/components/schemas/ResourceSpecification'
          PhysicalResourceSpecification: '#/components/schemas/PhysicalResourceSpecification'
          LogicalResourceSpecification: '#/components/schemas/LogicalResourceSpecification'
          ResourceFunctionSpecification: '#/components/schemas/ResourceFunctionSpecification'
    ResourceSpecificationAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ResourceSpecificationAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ResourceSpecificationAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceSpecificationAttributeValueChangeEvent: '#/components/schemas/ResourceSpecificationAttributeValueChangeEvent'
    ResourceSpecificationAttributeValueChangeEventPayload:
      type: object
      description: ResourceSpecificationAttributeValueChangeEventPayload generic structure
      properties:
        resourceSpecification:
          $ref: '#/components/schemas/ResourceSpecification'
    ResourceSpecificationCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ResourceSpecificationCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ResourceSpecificationCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceSpecificationCreateEvent: '#/components/schemas/ResourceSpecificationCreateEvent'
    ResourceSpecificationCreateEventPayload:
      type: object
      description: ResourceSpecificationCreateEventPayload generic structure
      properties:
        resourceSpecification:
          $ref: '#/components/schemas/ResourceSpecification'
    ResourceSpecificationDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ResourceSpecificationDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ResourceSpecificationDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceSpecificationDeleteEvent: '#/components/schemas/ResourceSpecificationDeleteEvent'
    ResourceSpecificationDeleteEventPayload:
      type: object
      description: ResourceSpecificationDeleteEventPayload generic structure
      properties:
        resourceSpecification:
          $ref: '#/components/schemas/ResourceSpecification'
    ResourceSpecificationRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Resources are physical or non-physical components (or some combination of these) within
            an enterprise's infrastructure or inventory. They are typically consumed or used by
            services (for example a physical port assigned to a service) or contribute to the
            realization of a Product (for example, a SIM card). They can be drawn from the
            Application, Computing and Network domains, and include, for example, Network Elements,
            software, IT systems, content and information, and technology components.

            A ResourceSpecification is an abstract base class for representing a generic means for
            implementing a particular type of Resource. In essence, a ResourceSpecification defines
            the common attributes and relationships of a set of related Resources, while Resource
            defines a specific instance that is based on a particular ResourceSpecification.
          properties:
            version:
              type: string
              description: Resource Specification version
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceSpecificationRef: '#/components/schemas/ResourceSpecificationRef'
    ResourceSpecificationRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Resources are physical or non-physical components (or some combination of these) within
            an enterprise's infrastructure or inventory. They are typically consumed or used by
            services (for example a physical port assigned to a service) or contribute to the
            realization of a Product (for example, a SIM card). They can be drawn from the
            Application, Computing and Network domains, and include, for example, Network Elements,
            software, IT systems, content and information, and technology components.

            A ResourceSpecification is an abstract base class for representing a generic means for
            implementing a particular type of Resource. In essence, a ResourceSpecification defines
            the common attributes and relationships of a set of related Resources, while Resource
            defines a specific instance that is based on a particular ResourceSpecification.
          properties:
            version:
              type: string
              description: Resource Specification version
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceSpecificationRef: '#/components/schemas/ResourceSpecificationRef_FVO'
    ResourceSpecificationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Resources are physical or non-physical components (or some combination of these) within
            an enterprise's infrastructure or inventory. They are typically consumed or used by
            services (for example a physical port assigned to a service) or contribute to the
            realization of a Product (for example, a SIM card). They can be drawn from the
            Application, Computing and Network domains, and include, for example, Network Elements,
            software, IT systems, content and information, and technology components.

            A ResourceSpecification is an abstract base class for representing a generic means for
            implementing a particular type of Resource. In essence, a ResourceSpecification defines
            the common attributes and relationships of a set of related Resources, while Resource
            defines a specific instance that is based on a particular ResourceSpecification.
          properties:
            version:
              type: string
              description: Resource Specification version
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceSpecificationRef: '#/components/schemas/ResourceSpecificationRef_MVO'
    ResourceSpecificationRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A migration, substitution, dependency or exclusivity relationship between/among resource
            specifications.
          properties:
            relationshipType:
              type: string
              description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
            role:
              type: string
              description: The association role for this resource specification
            id:
              type: string
              description: Unique identifier of target ResourceSpecification
            href:
              type: string
              format: uri
              description: Reference of the target ResourceSpecification
            name:
              type: string
              description: The name given to the target resource specification instance
            defaultQuantity:
              type: integer
              description: >-
                The default number of the related resource that should be instantiated, for example
                a rack would typically have 4 cards, although it could support more.
            maximumQuantity:
              type: integer
              description: >-
                The maximum number of the related resource that should be instantiated, for example
                a rack supports a maximum of 16 cards
            minimumQuantity:
              type: integer
              description: >-
                The minimum number of the related resource that should be instantiated, for example
                a rack must have at least 1 card
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecification'
              description: >-
                A characteristic that refines the relationship. For example, consider the
                relationship between a slot and a card. For a half-height card it is important to
                know the position at which the card is inserted, so a characteristic Position might
                be defined on the relationship to allow capturing of this in the inventory
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceSpecificationRelationship: '#/components/schemas/ResourceSpecificationRelationship'
    ResourceSpecificationRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            A migration, substitution, dependency or exclusivity relationship between/among resource
            specifications.
          properties:
            relationshipType:
              type: string
              description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
            role:
              type: string
              description: The association role for this resource specification
            id:
              type: string
              description: Unique identifier of target ResourceSpecification
            href:
              type: string
              format: uri
              description: Reference of the target ResourceSpecification
            name:
              type: string
              description: The name given to the target resource specification instance
            defaultQuantity:
              type: integer
              description: >-
                The default number of the related resource that should be instantiated, for example
                a rack would typically have 4 cards, although it could support more.
            maximumQuantity:
              type: integer
              description: >-
                The maximum number of the related resource that should be instantiated, for example
                a rack supports a maximum of 16 cards
            minimumQuantity:
              type: integer
              description: >-
                The minimum number of the related resource that should be instantiated, for example
                a rack must have at least 1 card
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecification_FVO'
              description: >-
                A characteristic that refines the relationship. For example, consider the
                relationship between a slot and a card. For a half-height card it is important to
                know the position at which the card is inserted, so a characteristic Position might
                be defined on the relationship to allow capturing of this in the inventory
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceSpecificationRelationship: '#/components/schemas/ResourceSpecificationRelationship_FVO'
    ResourceSpecificationRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A migration, substitution, dependency or exclusivity relationship between/among resource
            specifications.
          properties:
            relationshipType:
              type: string
              description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
            role:
              type: string
              description: The association role for this resource specification
            id:
              type: string
              description: Unique identifier of target ResourceSpecification
            href:
              type: string
              format: uri
              description: Reference of the target ResourceSpecification
            name:
              type: string
              description: The name given to the target resource specification instance
            defaultQuantity:
              type: integer
              description: >-
                The default number of the related resource that should be instantiated, for example
                a rack would typically have 4 cards, although it could support more.
            maximumQuantity:
              type: integer
              description: >-
                The maximum number of the related resource that should be instantiated, for example
                a rack supports a maximum of 16 cards
            minimumQuantity:
              type: integer
              description: >-
                The minimum number of the related resource that should be instantiated, for example
                a rack must have at least 1 card
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecification_MVO'
              description: >-
                A characteristic that refines the relationship. For example, consider the
                relationship between a slot and a card. For a half-height card it is important to
                know the position at which the card is inserted, so a characteristic Position might
                be defined on the relationship to allow capturing of this in the inventory
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceSpecificationRelationship: '#/components/schemas/ResourceSpecificationRelationship_MVO'
    ResourceSpecificationStatusChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ResourceSpecificationStatusChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ResourceSpecificationStatusChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceSpecificationStatusChangeEvent: '#/components/schemas/ResourceSpecificationStatusChangeEvent'
    ResourceSpecificationStatusChangeEventPayload:
      type: object
      description: ResourceSpecificationStatusChangeEventPayload generic structure
      properties:
        resourceSpecification:
          $ref: '#/components/schemas/ResourceSpecification'
    ResourceSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Resources are physical or non-physical components (or some combination of these) within
            an enterprise's infrastructure or inventory. They are typically consumed or used by
            services (for example a physical port assigned to a service) or contribute to the
            realization of a Product (for example, a SIM card). They can be drawn from the
            Application, Computing and Network domains, and include, for example, Network Elements,
            software, IT systems, content and information, and technology components.

            A ResourceSpecification is a base class that represents a generic means for implementing
            a particular type of Resource. In essence, a ResourceSpecification defines the common
            attributes and relationships of a set of related Resources, while Resource defines a
            specific instance that is based on a particular ResourceSpecification.
          properties:
            description:
              type: string
              description: Description of this REST resource
            version:
              type: string
              description: Resource Specification version
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                A flag indicates that if this resource specification is a bundled specification
                (true) or single (false).
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of the resource specification
            name:
              type: string
              description: Name given to this REST resource
            category:
              type: string
              description: >-
                Category of the target resource like NetworkConnectivity, PhysicalLinks, Generic,
                L2Network and so on.
            targetResourceSchema:
              $ref: '#/components/schemas/TargetResourceSchema_FVO'
            featureSpecification:
              type: array
              description: A list of Features for this specification.
              items:
                $ref: '#/components/schemas/FeatureSpecification_FVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
              description: >-
                Complements the description of an element (for instance a resource) through video,
                pictures ...
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
              description: A related party defines party or party role linked to a specific entity.
            resourceSpecCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecification_FVO'
              description: >-
                A characteristic quality or distinctive feature of a ResourceSpecification.  The
                characteristic can be take on a discrete value, such as color, can take on a range
                of values, (for example, sensitivity of 100-240 mV), or can be derived from a
                formula (for example, usage time (hrs) = 30 - talk time *3). Certain
                characteristics, such as color, may be configured during the ordering or some other
                process.
            resourceSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/ResourceSpecificationRelationship_FVO'
              description: >-
                A migration, substitution, dependency or exclusivity relationship between/among
                resource specifications.
            intentSpecification:
              $ref: '#/components/schemas/IntentSpecificationRef_FVO'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceSpecification: '#/components/schemas/ResourceSpecification_FVO'
    ResourceSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Resources are physical or non-physical components (or some combination of these) within
            an enterprise's infrastructure or inventory. They are typically consumed or used by
            services (for example a physical port assigned to a service) or contribute to the
            realization of a Product (for example, a SIM card). They can be drawn from the
            Application, Computing and Network domains, and include, for example, Network Elements,
            software, IT systems, content and information, and technology components.

            A ResourceSpecification is a base class that represents a generic means for implementing
            a particular type of Resource. In essence, a ResourceSpecification defines the common
            attributes and relationships of a set of related Resources, while Resource defines a
            specific instance that is based on a particular ResourceSpecification.
          properties:
            description:
              type: string
              description: Description of this REST resource
            version:
              type: string
              description: Resource Specification version
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                A flag indicates that if this resource specification is a bundled specification
                (true) or single (false).
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of the resource specification
            name:
              type: string
              description: Name given to this REST resource
            category:
              type: string
              description: >-
                Category of the target resource like NetworkConnectivity, PhysicalLinks, Generic,
                L2Network and so on.
            targetResourceSchema:
              $ref: '#/components/schemas/TargetResourceSchema_MVO'
            featureSpecification:
              type: array
              description: A list of Features for this specification.
              items:
                $ref: '#/components/schemas/FeatureSpecification_MVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
              description: >-
                Complements the description of an element (for instance a resource) through video,
                pictures ...
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
              description: A related party defines party or party role linked to a specific entity.
            resourceSpecCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecification_MVO'
              description: >-
                A characteristic quality or distinctive feature of a ResourceSpecification.  The
                characteristic can be take on a discrete value, such as color, can take on a range
                of values, (for example, sensitivity of 100-240 mV), or can be derived from a
                formula (for example, usage time (hrs) = 30 - talk time *3). Certain
                characteristics, such as color, may be configured during the ordering or some other
                process.
            resourceSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/ResourceSpecificationRelationship_MVO'
              description: >-
                A migration, substitution, dependency or exclusivity relationship between/among
                resource specifications.
            intentSpecification:
              $ref: '#/components/schemas/IntentSpecificationRef_MVO'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceSpecification: '#/components/schemas/ResourceSpecification_MVO'
    TargetResourceSchema:
      type: object
      description: >-
        The reference object to the schema and type of target resource which is described by
        resource specification
      properties:
        '@type':
          type: string
          description: Class type of the target resource
        '@schemaLocation':
          type: string
          format: uri
          description: This field provides a link to the schema describing the target resource
    TargetResourceSchema_FVO:
      type: object
      description: >-
        The reference object to the schema and type of target resource which is described by
        resource specification
      properties:
        '@type':
          type: string
          description: Class type of the target resource
        '@schemaLocation':
          type: string
          format: uri
          description: This field provides a link to the schema describing the target resource
      required:
        - '@type'
        - '@schemaLocation'
    TargetResourceSchema_MVO:
      type: object
      description: >-
        The reference object to the schema and type of target resource which is described by
        resource specification
      properties:
        '@type':
          type: string
          description: Class type of the target resource
        '@schemaLocation':
          type: string
          format: uri
          description: This field provides a link to the schema describing the target resource
    TimePeriod:
      type: object
      description: 'A period of time, either as a deadline (endDateTime only) a startDateTime only, or both'
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    Hub_FVO:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - callback
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - properties:
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
    Hub:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      allOf:
        - $ref: '#/components/schemas/Entity'
        - properties:
            id:
              type: string
              description: Id of the listener
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
          required:
            - callback
    JsonPatch:
      type: object
      description: A JSONPatch document as defined by RFC 6902
      required:
        - op
        - path
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON-Pointer
        value:
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    JsonPatchOperations:
      description: JSONPatch Operations document as defined by RFC 6902
      type: array
      items:
        $ref: '#/components/schemas/JsonPatch'
  parameters:
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Resource
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      schema:
        type: integer
  requestBodies:
    ResourceCatalog_FVO:
      description: The ResourceCatalog to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCatalog_FVO'
          examples:
            ResourceCatalog_Create_example:
              $ref: '#/components/examples/ResourceCatalog_Create_example_request'
      required: true
    ResourceCatalog_MVO:
      description: The ResourceCatalog to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCatalog_MVO'
          examples:
            ResourceCatalog_Update_example_JSON_:
              $ref: '#/components/examples/ResourceCatalog_Update_example_JSON__request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ResourceCatalog_MVO'
          examples:
            ResourceCatalog_Update_example_Merge_:
              $ref: '#/components/examples/ResourceCatalog_Update_example_Merge__request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            ResourceCatalog_Update_example_JSON-PATCH_:
              $ref: '#/components/examples/ResourceCatalog_Update_example_JSON-PATCH__request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            ResourceCatalog_Update_example_JSON-PATCH-QUERY_:
              $ref: '#/components/examples/ResourceCatalog_Update_example_JSON-PATCH-QUERY__request'
      required: true
    ResourceCatalogCreateEvent:
      description: ResourceCatalog create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCatalogCreateEvent'
          examples:
            ResourceCatalog-Create:
              $ref: '#/components/examples/ResourceCatalog-Create_request'
      required: true
    ResourceCatalogAttributeValueChangeEvent:
      description: ResourceCatalog attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCatalogAttributeValueChangeEvent'
          examples:
            ResourceCatalog-AttributeValueChange:
              $ref: '#/components/examples/ResourceCatalog-AttributeValueChange_request'
      required: true
    ResourceCatalogStatusChangeEvent:
      description: ResourceCatalog statusChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCatalogStatusChangeEvent'
          examples:
            ResourceCatalog-StatusChange:
              $ref: '#/components/examples/ResourceCatalog-StatusChange_request'
      required: true
    ResourceCatalogDeleteEvent:
      description: ResourceCatalog delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCatalogDeleteEvent'
          examples:
            ResourceCatalog-Delete:
              $ref: '#/components/examples/ResourceCatalog-Delete_request'
      required: true
    ResourceCategory_FVO:
      description: The ResourceCategory to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCategory_FVO'
          examples:
            Resource_category_create_example:
              $ref: '#/components/examples/Resource_category_create_example_request'
      required: true
    ResourceCategory_MVO:
      description: The ResourceCategory to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCategory_MVO'
          examples:
            ResourceCategory_Update_example_JSON_:
              $ref: '#/components/examples/ResourceCategory_Update_example_JSON__request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ResourceCategory_MVO'
          examples:
            ResourceCategory_Update_example_Merge_:
              $ref: '#/components/examples/ResourceCategory_Update_example_Merge__request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            ResourceCategory_Update_example_JSON-PATCH_:
              $ref: '#/components/examples/ResourceCategory_Update_example_JSON-PATCH__request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            ResourceCategory_Update_example_JSON-PATCH-QUERY_:
              $ref: '#/components/examples/ResourceCategory_Update_example_JSON-PATCH-QUERY__request'
      required: true
    ResourceCategoryCreateEvent:
      description: ResourceCategory create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCategoryCreateEvent'
          examples:
            ResourceCategory-Create:
              $ref: '#/components/examples/ResourceCategory-Create_request'
      required: true
    ResourceCategoryAttributeValueChangeEvent:
      description: ResourceCategory attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCategoryAttributeValueChangeEvent'
          examples:
            ResourceCategory-AttributeValueChange:
              $ref: '#/components/examples/ResourceCategory-AttributeValueChange_request'
      required: true
    ResourceCategoryStatusChangeEvent:
      description: ResourceCategory statusChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCategoryStatusChangeEvent'
          examples:
            ResourceCategory-StatusChange:
              $ref: '#/components/examples/ResourceCategory-StatusChange_request'
      required: true
    ResourceCategoryDeleteEvent:
      description: ResourceCategory delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCategoryDeleteEvent'
          examples:
            ResourceCategory-Delete:
              $ref: '#/components/examples/ResourceCategory-Delete_request'
      required: true
    ResourceCandidate_FVO:
      description: The ResourceCandidate to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCandidate_FVO'
          examples:
            Resource_candidate_create_example:
              $ref: '#/components/examples/Resource_candidate_create_example_request'
      required: true
    ResourceCandidate_MVO:
      description: The ResourceCandidate to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCandidate_MVO'
          examples:
            ResourceCandidate_Update_example_JSON_:
              $ref: '#/components/examples/ResourceCandidate_Update_example_JSON__request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ResourceCandidate_MVO'
          examples:
            ResourceCandidate_Update_example_Merge_:
              $ref: '#/components/examples/ResourceCandidate_Update_example_Merge__request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            ResourceCandidate_Update_example_JSON-PATCH_:
              $ref: '#/components/examples/ResourceCandidate_Update_example_JSON-PATCH__request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            ResourceCandidate_Update_example_JSON-PATCH-QUERY_:
              $ref: '#/components/examples/ResourceCandidate_Update_example_JSON-PATCH-QUERY__request'
      required: true
    ResourceCandidateCreateEvent:
      description: ResourceCandidate create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCandidateCreateEvent'
          examples:
            ResourceCandidate-Create:
              $ref: '#/components/examples/ResourceCandidate-Create_request'
      required: true
    ResourceCandidateAttributeValueChangeEvent:
      description: ResourceCandidate attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCandidateAttributeValueChangeEvent'
          examples:
            ResourceCandidate-AttributeValueChange:
              $ref: '#/components/examples/ResourceCandidate-AttributeValueChange_request'
      required: true
    ResourceCandidateStatusChangeEvent:
      description: ResourceCandidate statusChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCandidateStatusChangeEvent'
          examples:
            ResourceCandidate-StatusChange:
              $ref: '#/components/examples/ResourceCandidate-StatusChange_request'
      required: true
    ResourceCandidateDeleteEvent:
      description: ResourceCandidate delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCandidateDeleteEvent'
          examples:
            ResourceCandidate-Delete:
              $ref: '#/components/examples/ResourceCandidate-Delete_request'
      required: true
    ResourceSpecification_FVO:
      description: The ResourceSpecification to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceSpecification_FVO'
          examples:
            ResourceSpecification_create_example_1_characteristic_bnased:
              $ref: >-
                #/components/examples/ResourceSpecification_create_example_1_characteristic_bnased_request
            ResourceSpecification_create_example_2_schema_based:
              $ref: '#/components/examples/ResourceSpecification_create_example_2_schema_based_request'
            ResourceSpecification_create_example_3_with_intent_specification:
              $ref: >-
                #/components/examples/ResourceSpecification_create_example_3_with_intent_specification_request
      required: true
    ResourceSpecification_MVO:
      description: The ResourceSpecification to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceSpecification_MVO'
          examples:
            ResourceSpecification_Update_example_JSON_:
              $ref: '#/components/examples/ResourceSpecification_Update_example_JSON__request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ResourceSpecification_MVO'
          examples:
            ResourceSpecification_Update_example_Merge_:
              $ref: '#/components/examples/ResourceSpecification_Update_example_Merge__request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            ResourceSpecification_Update_example_JSON-PATCH_:
              $ref: '#/components/examples/ResourceSpecification_Update_example_JSON-PATCH__request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            ResourceSpecification_Update_example_JSON-PATCH-QUERY_:
              $ref: '#/components/examples/ResourceSpecification_Update_example_JSON-PATCH-QUERY__request'
      required: true
    ResourceSpecificationCreateEvent:
      description: ResourceSpecification create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceSpecificationCreateEvent'
          examples:
            ResourceSpecification-Create:
              $ref: '#/components/examples/ResourceSpecification-Create_request'
      required: true
    ResourceSpecificationAttributeValueChangeEvent:
      description: ResourceSpecification attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceSpecificationAttributeValueChangeEvent'
          examples:
            ResourceSpecification-AttributeValueChange:
              $ref: '#/components/examples/ResourceSpecification-AttributeValueChange_request'
      required: true
    ResourceSpecificationStatusChangeEvent:
      description: ResourceSpecification statusChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceSpecificationStatusChangeEvent'
          examples:
            ResourceSpecification-StatusChange:
              $ref: '#/components/examples/ResourceSpecification-StatusChange_request'
      required: true
    ResourceSpecificationDeleteEvent:
      description: ResourceSpecification delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceSpecificationDeleteEvent'
          examples:
            ResourceSpecification-Delete:
              $ref: '#/components/examples/ResourceSpecification-Delete_request'
      required: true
    ImportJob_FVO:
      description: The ImportJob to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImportJob_FVO'
          examples:
            ImportJob_create_example:
              $ref: '#/components/examples/ImportJob_create_example_request'
      required: true
    ImportJobCreateEvent:
      description: ImportJob create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImportJobCreateEvent'
          examples:
            ImportJob-Create:
              $ref: '#/components/examples/ImportJob-Create_request'
      required: true
    ImportJobStateChangeEvent:
      description: ImportJob stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImportJobStateChangeEvent'
          examples:
            ImportJob-StateChange:
              $ref: '#/components/examples/ImportJob-StateChange_request'
      required: true
    ImportJobDeleteEvent:
      description: ImportJob delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImportJobDeleteEvent'
          examples:
            ImportJob-Delete:
              $ref: '#/components/examples/ImportJob-Delete_request'
      required: true
    ExportJob_FVO:
      description: The ExportJob to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExportJob_FVO'
          examples:
            ExportJob_create_example:
              $ref: '#/components/examples/ExportJob_create_example_request'
      required: true
    ExportJobCreateEvent:
      description: ExportJob create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExportJobCreateEvent'
          examples:
            ExportJob-Create:
              $ref: '#/components/examples/ExportJob-Create_request'
      required: true
    ExportJobStateChangeEvent:
      description: ExportJob stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExportJobStateChangeEvent'
          examples:
            ExportJob-StateChange:
              $ref: '#/components/examples/ExportJob-StateChange_request'
      required: true
    ExportJobDeleteEvent:
      description: ExportJob delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExportJobDeleteEvent'
          examples:
            ExportJob-Delete:
              $ref: '#/components/examples/ExportJob-Delete_request'
      required: true
    Hub_FVO:
      description: Data containing the callback endpoint to deliver the information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
      required: true
  responses:
    '200':
      description: OK
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    200ResourceCatalogArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResourceCatalog'
          examples:
            ResourceCatalog_list_example:
              $ref: '#/components/examples/ResourceCatalog_list_example_response'
    200ResourceCatalog_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCatalog'
          examples:
            ResourceCatalog_retrieve_example:
              $ref: '#/components/examples/ResourceCatalog_retrieve_example_response'
    200ResourceCatalog_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCatalog'
          examples:
            ResourceCatalog_Update_example_JSON_:
              $ref: '#/components/examples/ResourceCatalog_Update_example_JSON__response'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ResourceCatalog'
          examples:
            ResourceCatalog_Update_example_Merge_:
              $ref: '#/components/examples/ResourceCatalog_Update_example_Merge__response'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResourceCatalog'
              - type: array
                items:
                  $ref: '#/components/schemas/ResourceCatalog'
              - type: string
                nullable: true
          examples:
            ResourceCatalog_Update_example_JSON-PATCH_:
              $ref: '#/components/examples/ResourceCatalog_Update_example_JSON-PATCH__response'
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResourceCatalog'
              - type: array
                items:
                  $ref: '#/components/schemas/ResourceCatalog'
              - type: string
                nullable: true
          examples:
            ResourceCatalog_Update_example_JSON-PATCH-QUERY_:
              $ref: '#/components/examples/ResourceCatalog_Update_example_JSON-PATCH-QUERY__response'
    201ResourceCatalog:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCatalog'
          examples:
            ResourceCatalog_Create_example:
              $ref: '#/components/examples/ResourceCatalog_Create_example_response'
    200ResourceCategoryArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResourceCategory'
          examples:
            ResourceCategory_list_example:
              $ref: '#/components/examples/ResourceCategory_list_example_response'
    200ResourceCategory_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCategory'
          examples:
            ResourceCategory_retrieve_example:
              $ref: '#/components/examples/ResourceCategory_retrieve_example_response'
    200ResourceCategory_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCategory'
          examples:
            ResourceCategory_Update_example_JSON_:
              $ref: '#/components/examples/ResourceCategory_Update_example_JSON__response'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ResourceCategory'
          examples:
            ResourceCategory_Update_example_Merge_:
              $ref: '#/components/examples/ResourceCategory_Update_example_Merge__response'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResourceCategory'
              - type: array
                items:
                  $ref: '#/components/schemas/ResourceCategory'
              - type: string
                nullable: true
          examples:
            ResourceCategory_Update_example_JSON-PATCH_:
              $ref: '#/components/examples/ResourceCategory_Update_example_JSON-PATCH__response'
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResourceCategory'
              - type: array
                items:
                  $ref: '#/components/schemas/ResourceCategory'
              - type: string
                nullable: true
          examples:
            ResourceCategory_Update_example_JSON-PATCH-QUERY_:
              $ref: '#/components/examples/ResourceCategory_Update_example_JSON-PATCH-QUERY__response'
    201ResourceCategory:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCategory'
          examples:
            Resource_category_create_example:
              $ref: '#/components/examples/Resource_category_create_example_response'
    200ResourceCandidateArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResourceCandidate'
          examples:
            ResourceCandidate_list_example:
              $ref: '#/components/examples/ResourceCandidate_list_example_response'
    200ResourceCandidate_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCandidate'
          examples:
            ResourceCandidate_retrieve_example:
              $ref: '#/components/examples/ResourceCandidate_retrieve_example_response'
    200ResourceCandidate_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCandidate'
          examples:
            ResourceCandidate_Update_example_JSON_:
              $ref: '#/components/examples/ResourceCandidate_Update_example_JSON__response'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ResourceCandidate'
          examples:
            ResourceCandidate_Update_example_Merge_:
              $ref: '#/components/examples/ResourceCandidate_Update_example_Merge__response'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResourceCandidate'
              - type: array
                items:
                  $ref: '#/components/schemas/ResourceCandidate'
              - type: string
                nullable: true
          examples:
            ResourceCandidate_Update_example_JSON-PATCH_:
              $ref: '#/components/examples/ResourceCandidate_Update_example_JSON-PATCH__response'
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResourceCandidate'
              - type: array
                items:
                  $ref: '#/components/schemas/ResourceCandidate'
              - type: string
                nullable: true
          examples:
            ResourceCandidate_Update_example_JSON-PATCH-QUERY_:
              $ref: '#/components/examples/ResourceCandidate_Update_example_JSON-PATCH-QUERY__response'
    201ResourceCandidate:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCandidate'
          examples:
            Resource_candidate_create_example:
              $ref: '#/components/examples/Resource_candidate_create_example_response'
    200ResourceSpecificationArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResourceSpecification'
          examples:
            ResourceSpecification_list_example:
              $ref: '#/components/examples/ResourceSpecification_list_example_response'
    200ResourceSpecification_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceSpecification'
          examples:
            ResourceSpecification_retrieve_example:
              $ref: '#/components/examples/ResourceSpecification_retrieve_example_response'
    200ResourceSpecification_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceSpecification'
          examples:
            ResourceSpecification_Update_example_JSON_:
              $ref: '#/components/examples/ResourceSpecification_Update_example_JSON__response'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ResourceSpecification'
          examples:
            ResourceSpecification_Update_example_Merge_:
              $ref: '#/components/examples/ResourceSpecification_Update_example_Merge__response'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResourceSpecification'
              - type: array
                items:
                  $ref: '#/components/schemas/ResourceSpecification'
              - type: string
                nullable: true
          examples:
            ResourceSpecification_Update_example_JSON-PATCH_:
              $ref: '#/components/examples/ResourceSpecification_Update_example_JSON-PATCH__response'
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResourceSpecification'
              - type: array
                items:
                  $ref: '#/components/schemas/ResourceSpecification'
              - type: string
                nullable: true
          examples:
            ResourceSpecification_Update_example_JSON-PATCH-QUERY_:
              $ref: >-
                #/components/examples/ResourceSpecification_Update_example_JSON-PATCH-QUERY__response
    201ResourceSpecification:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceSpecification'
          examples:
            ResourceSpecification_create_example_1_characteristic_bnased:
              $ref: >-
                #/components/examples/ResourceSpecification_create_example_1_characteristic_bnased_response
            ResourceSpecification_create_example_2_schema_based:
              $ref: '#/components/examples/ResourceSpecification_create_example_2_schema_based_response'
            ResourceSpecification_create_example_3_with_intent_specification:
              $ref: >-
                #/components/examples/ResourceSpecification_create_example_3_with_intent_specification_response
    200ImportJobArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ImportJob'
          examples:
            ImportJob_list_example:
              $ref: '#/components/examples/ImportJob_list_example_response'
    200ImportJob_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImportJob'
          examples:
            ImportJob_example:
              $ref: '#/components/examples/ImportJob_example_response'
    200ImportJob_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImportJob'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ImportJob'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ImportJob'
              - type: array
                items:
                  $ref: '#/components/schemas/ImportJob'
              - type: string
                nullable: true
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ImportJob'
              - type: array
                items:
                  $ref: '#/components/schemas/ImportJob'
              - type: string
                nullable: true
    201ImportJob:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImportJob'
          examples:
            ImportJob_create_example:
              $ref: '#/components/examples/ImportJob_create_example_response'
    200ExportJobArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ExportJob'
          examples:
            ExportJob_list_example:
              $ref: '#/components/examples/ExportJob_list_example_response'
    200ExportJob_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExportJob'
          examples:
            ExportJob_retrieve_example:
              $ref: '#/components/examples/ExportJob_retrieve_example_response'
    200ExportJob_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExportJob'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ExportJob'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ExportJob'
              - type: array
                items:
                  $ref: '#/components/schemas/ExportJob'
              - type: string
                nullable: true
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ExportJob'
              - type: array
                items:
                  $ref: '#/components/schemas/ExportJob'
              - type: string
                nullable: true
    201ExportJob:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExportJob'
          examples:
            ExportJob_create_example:
              $ref: '#/components/examples/ExportJob_create_example_response'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Hub:
      description: Notified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      schema:
        type: integer
    X-Result-Count:
      description: Actual number of items returned in the response body
      schema:
        type: integer
  securitySchemes: {}
  examples:
    ResourceCatalog_list_example_response:
      value:
        - id: '5574'
          href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/5574'
          name: Cloud Resource Catalog
          description: This resource catalog points to entities in the area of cloud management
          '@type': ResourceCatalog
          version: '1.0'
          validFor:
            startDateTime: '2022-08-10T00:00:00.000Z'
            endDateTime: '2023-03-07T00:00:00.000Z'
          lastUpdate: '2021-08-09T00:00:00.000Z'
          lifecycleStatus: Active
          relatedParty:
            - role: Supplier
              '@type': RelatedPartyRefOrPartyRoleRef
              partyOrPartyRole:
                id: '5858'
                href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5858'
                name: Gustave Flaubert
                '@referredType': Supplier
                '@type': PartyRoleRef
          category:
            - id: '8121'
              href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/8121'
              version: '1.0'
              name: Secure Home
              '@type': ResourceCategoryRef
        - id: '5578'
          href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/5578'
          name: Router Catalog
          description: This resource catalog points to entities in the area of routers
          '@type': ResourceCatalog
          version: '1.0'
          validFor:
            startDateTime: '2020-08-10T00:00:00.000Z'
            endDateTime: '2023-03-07T00:00:00.000Z'
          lastUpdate: '2021-09-01T00:00:00.000Z'
          lifecycleStatus: Active
          relatedParty:
            - role: Supplier
              '@type': RelatedPartyRefOrPartyRoleRef
              partyOrPartyRole:
                id: '5855'
                href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5855'
                name: Nokia Networks
                '@referredType': Supplier
                '@type': PartyRoleRef
          category:
            - id: '8121'
              href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/8121'
              version: '1.0'
              name: Routers
              '@type': ResourceCategoryRef
      description: Here's an example of a request for retrieving multiple catalogs.
    ResourceCatalog_retrieve_example_response:
      value:
        id: '5574'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/5574'
        name: Cloud Resource Catalog
        description: This resource catalog points to entities in the area of cloud management
        '@type': ResourceCatalog
        version: '1.0'
        validFor:
          startDateTime: '2022-08-10T00:00:00.000Z'
          endDateTime: '2023-03-07T00:00:00.000Z'
        lastUpdate: '2021-08-09T00:00:00.000Z'
        lifecycleStatus: Active
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '5858'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5858'
              name: Gustave Flaubert
              '@referredType': Supplier
              '@type': PartyRoleRef
        category:
          - id: '8121'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/8121'
            version: '1.0'
            name: Secure Home
            '@type': ResourceCategoryRef
      description: Here's an example of a request for retrieving a specific catalog.
    ResourceCategory_list_example_response:
      value:
        - id: '8121'
          href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/8121'
          name: Network Logical Resources
          description: >-
            This resource category groups together logical resources that are implemented in the
            network
          '@type': ResourceCategory
          version: '1.0'
          validFor:
            startDateTime: '2017-08-11T00:00:00.000Z'
            endDateTime: '2018-03-07T00:00:00.000Z'
          lifecycleStatus: Active
          lastUpdate: '2017-08-09T00:00:00.000Z'
          isRoot: true
          category:
            - id: '5982'
              href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/5982'
              version: '3.2'
              name: IoT
              '@type': ResourceCategoryRef
          resourceCandidate:
            - id: '5298'
              href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/5298'
              version: '1.0'
              name: Elastic Storage
              '@type': ResourceCandidateRef
            - id: '7479'
              href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7479'
              version: '3.2'
              name: Virtual Storage Medium
              '@type': ResourceCandidateRef
          resourceSpecification:
            - id: '42'
              href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
              version: '3.0'
              name: Virtual Storage Medium
              '@type': ResourceSpecificationRef
              '@referredType': ResourceSpecification
          relatedParty:
            - role: Employee
              '@type': RelatedPartyRefOrPartyRoleRef
              partyOrPartyRole:
                id: '4434'
                href: 'https://mycsp.com:8080/tmf-api/partytRole/v5/employee/4434'
                name: Jimmy Doe
                '@referredType': Employee
                '@type': PartyRoleRef
        - id: '8123'
          href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/8121'
          name: Network Physical Resources
          description: >-
            This resource category groups together physical resources that are implemented in the
            network
          '@type': ResourceCategory
          version: '1.0'
          validFor:
            startDateTime: '2017-08-11T00:00:00.000Z'
            endDateTime: '2018-03-07T00:00:00.000Z'
          lifecycleStatus: Active
          lastUpdate: '2017-08-09T00:00:00.000Z'
          isRoot: true
          category:
            - id: '5588'
              href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/5588'
              version: '3.2'
              name: Router
              '@type': ResourceCategoryRef
          resourceCandidate:
            - id: '3421'
              href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/3421'
              version: '1.0'
              name: Nokia Router
              '@type': ResourceCandidateRef
            - id: '2431'
              href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/2431'
              version: '3.2'
              name: Ericsson Router
              '@type': ResourceCandidateRef
          relatedParty:
            - role: Employee
              '@type': RelatedPartyRefOrPartyRoleRef
              partyOrPartyRole:
                id: '4434'
                href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/employee/4434'
                name: Jimmy Doe
                '@referredType': Employee
                '@type': PartyRoleRef
      description: Here's an example of a request for retrieving all the root categories.
    ResourceCategory_retrieve_example_response:
      value:
        id: '8121'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/8121'
        name: Network Logical Resources
        description: >-
          This resource category groups together logical resources that are implemented in the
          network
        '@type': ResourceCategory
        version: '1.0'
        validFor:
          startDateTime: '2017-08-11T00:00:00.000Z'
          endDateTime: '2018-03-07T00:00:00.000Z'
        lifecycleStatus: Active
        lastUpdate: '2017-08-09T00:00:00.000Z'
        isRoot: true
        category:
          - id: '5982'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/5982'
            version: '3.2'
            name: IoT
            '@type': ResourceCategoryRef
        resourceCandidate:
          - id: '5298'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/5298'
            version: '1.0'
            name: Elastic Storage
            '@type': ResourceCandidateRef
          - id: '7479'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7479'
            version: '3.2'
            name: Virtual Storage Medium
            '@type': ResourceCandidateRef
        resourceSpecification:
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
            version: '3.0'
            name: Virtual Storage Medium
            '@type': ResourceSpecificationRef
            '@referredType': ResourceSpecification
        relatedParty:
          - role: Employee
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '4434'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/employee/4434'
              name: Jimmy Doe
              '@referredType': Employee
              '@type': PartyRoleRef
      description: Here's an example of a request for retrieving a specific category.
    ResourceCandidate_list_example_response:
      value:
        - id: '7479'
          href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7479'
          name: Virtual Storage Medium
          description: >-
            This resource candidate makes the virtual storage medium specification available in the
            cloud catalog
          '@type': ResourceCandidate
          version: '2.1'
          validFor:
            startDateTime: '2017-08-12T00:00:00.000Z'
            endDateTime: '2018-03-07T00:00:00.000Z'
          lastUpdate: '2017-08-09T00:00:00.000Z'
          lifecycleStatus: Active
          category:
            - id: '5355'
              href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/5355'
              version: '1.1'
              name: Cloud Resources
              '@type': ResourceCategoryRef
          resourceSpecification:
            id: '42'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
            version: '3.0'
            name: Virtual Storage Medium
            '@type': ResourceSpecificationRef
            '@referredType': ResourceSpecification
        - id: '7991'
          href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7991'
          name: Router
          description: This resource candidate makes the Nokia Router available in the hardware catalog
          '@type': ResourceCandidate
          version: '2.1'
          validFor:
            startDateTime: '2017-08-12T00:00:00.000Z'
            endDateTime: '2019-12-31T00:00:00.000Z'
          lastUpdate: '2018-08-09T00:00:00.000Z'
          lifecycleStatus: Active
          category:
            - id: '53116'
              href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/53116'
              version: '1.1'
              name: Routers
              '@type': ResourceCategoryRef
          resourceSpecification:
            id: '32'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/32'
            version: '3.0'
            name: NokiaRouter
            '@type': ResourceSpecificationRef
            '@referredType': PhysicalResourceSpecification
      description: Here's an example of a request for retrieving multiple candidates.
    ResourceCandidate_retrieve_example_response:
      value:
        id: '7479'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7479'
        name: Virtual Storage Medium
        description: >-
          This resource candidate makes the virtual storage medium specification available in the
          cloud catalog
        '@type': ResourceCandidate
        version: '2.1'
        validFor:
          startDateTime: '2017-08-12T00:00:00.000Z'
          endDateTime: '2018-03-07T00:00:00.000Z'
        lastUpdate: '2017-08-09T00:00:00.000Z'
        lifecycleStatus: Active
        category:
          - id: '5355'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/5355'
            version: '1.1'
            name: Cloud Resources
            '@type': ResourceCategoryRef
        resourceSpecification:
          id: '42'
          href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
          version: '3.0'
          name: Virtual Storage Medium
          '@type': ResourceSpecificationRef
          '@referredType': ResourceSpecification
      description: Here's an example of a request for retrieving a specific candidate.
    ResourceSpecification_list_example_response:
      value:
        - id: '42'
          href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
          name: Virtual Storage Medium
          description: This resource specification defines the virtual storage medium
          '@type': ResourceSpecification
          '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecification.schema.json'
          version: '3.2'
          validFor:
            startDateTime: '2017-08-12T00:00:00.000Z'
            endDateTime: '2018-03-07T00:00:00.000Z'
          lastUpdate: '2017-08-09T00:00:00.000Z'
          lifecycleStatus: Active
          isBundle: false
          category: Cloud resource
          attachment:
            - id: '25552'
              href: 'https://mycsp.com:8080/tmf-api/document/v5/attachment/25552'
              name: Configuration Instructions
              mimeType: application/pdf
              url: 'https://mycsp.com:7070/docloader?docnum=9567457677'
              '@type': Attachment
          relatedParty:
            - role: Supplier
              '@type': RelatedPartyRefOrPartyRoleRef
              partyOrPartyRole:
                id: '5858'
                href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5858'
                name: Gustave Flaubert
                '@referredType': Supplier
                '@type': PartyRoleRef
          resourceSpecCharacteristic:
            - name: Maximum Allowed Storage
              description: 'The storage limit in the virtual storage medium, '
              valueType: integer
              configurable: true
              minCardinality: 1
              maxCardinality: 1
              isUnique: true
              '@type': CharacteristicSpecification
              characteristicValueSpecification:
                - value: 1024000
                  '@type': IntegerCharacteristicValueSpecification
                - value: 2048000
                  '@type': IntegerCharacteristicValueSpecification
          resourceSpecRelationship:
            - id: '556788'
              href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/556788'
              name: Underlying Physical Disk
              relationshipType: dependency
              '@type': ResourceSpecificationRelationship
          targetResourceSchema:
            '@type': VirtualStorage
            '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/VirtualStorage.schema.json'
        - id: '43'
          href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/43'
          name: Nokia 7750 SR-s Service Router
          description: This resource specification defines an IP router provided by Nokia
          '@type': PhysicalResourceSpecification
          '@baseType': ResourceSpecification
          '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/PhysicalResourceSpecification.schema.json'
          version: '3.2'
          validFor:
            startDateTime: '2017-08-12T00:00:00.000Z'
            endDateTime: '2018-03-07T00:00:00.000Z'
          lastUpdate: '2017-08-09T00:00:00.000Z'
          lifecycleStatus: Active
          isBundle: false
          category: Router resource
          attachment:
            - id: '25553'
              href: 'https://mycsp.com:8080/tmf-api/document/v5/attachment/25553'
              name: Data Sheet
              mimeType: application/pdf
              url: 'https://onestore.nokia.com/asset/205421'
              '@type': Attachment
          relatedParty:
            - role: Supplier
              '@type': RelatedPartyRefOrPartyRoleRef
              partyOrPartyRole:
                id: '5855'
                href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5855'
                name: Nokia Networks
                '@referredType': Supplier
                '@type': PartyRoleRef
          resourceSpecCharacteristic:
            - name: Power Supply Option
              description: The type of power supply that can be chosen
              valueType: string
              configurable: true
              minCardinality: 1
              maxCardinality: 1
              isUnique: true
              '@type': CharacteristicSpecification
              characteristicValueSpecification:
                - value: AC/HVDC
                  '@type': StringCharacteristicValueSpecification
                - value: LVDC
                  '@type': StringCharacteristicValueSpecification
          resourceSpecRelationship:
            - id: '556234'
              href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/556234'
              name: SR OS Operating System
              relationshipType: dependency
              '@type': ResourceSpecificationRelationship
          targetResourceSchema:
            '@type': NokiaRouter
            '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/NokiaRouter.schema.json'
          model: 7750 SR
          part: 2s
          sku: 3HE09264AA
          vendor: Nokia Networks
      description: Here's an example of a request for retrieving multiple resource specifications.
    ResourceSpecification_retrieve_example_response:
      value:
        id: '42'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
        name: Virtual Storage Medium
        description: This resource specification defines the virtual storage medium
        '@type': ResourceSpecification
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecification.schema.json'
        version: '3.2'
        validFor:
          startDateTime: '2017-08-12T00:00:00.000Z'
          endDateTime: '2018-03-07T00:00:00.000Z'
        lastUpdate: '2017-08-09T00:00:00.000Z'
        lifecycleStatus: Active
        isBundle: false
        category: Cloud resource
        attachment:
          - id: '25552'
            href: 'https://mycsp.com:8080/tmf-api/document/v5/attachment/25552'
            name: Configuration Instructions
            mimeType: application/pdf
            url: 'https://mycsp.com:7070/docloader?docnum=9567457677'
            '@type': Attachment
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '5858'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5858'
              name: Gustave Flaubert
              '@referredType': Supplier
              '@type': PartyRoleRef
        resourceSpecCharacteristic:
          - name: Maximum Allowed Storage
            description: 'The storage limit in the virtual storage medium, '
            valueType: integer
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            isUnique: true
            '@type': CharacteristicSpecification
            characteristicValueSpecification:
              - value: 1024000
                '@type': IntegerCharacteristicValueSpecification
              - value: 2048000
                '@type': IntegerCharacteristicValueSpecification
        resourceSpecRelationship:
          - id: '556788'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/556788'
            name: Underlying Physical Disk
            relationshipType: dependency
            '@type': ResourceSpecificationRelationship
        targetResourceSchema:
          '@type': VirtualStorage
          '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/VirtualStorage.schema.json'
      description: Here's an example of a request for retrieving a specific specification.
    ImportJob_list_example_response:
      value:
        - id: '7497'
          href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/importJob/7497'
          contentType: application/json
          creationDate: '2023-06-17T00:00:00.000Z'
          completionDate: '2023-06-17T00:05:00.000Z'
          path: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/3830'
          status: Succeeded
          url: 'https://my-platform/daily/job/NHCFD6'
          errorLog: 'http://my-platform/logging/errors.log'
          '@type': ImportJob
        - id: '7498'
          href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/importJob/7498'
          contentType: application/json
          creationDate: '2023-06-17T00:00:00.000Z'
          path: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/3830'
          status: Running
          url: 'https://my-platform/daily/job/NHCFD6'
          errorLog: 'http://my-platform/logging/errors.log'
          '@type': ImportJob
      description: Here's an example of a request for retrieving multiple import jobs.
    ImportJob_example_response:
      value:
        id: '7497'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/importJob/7497'
        contentType: application/json
        creationDate: '2023-06-17T00:00:00.000Z'
        completionDate: '2023-06-17T00:05:00.000Z'
        path: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/3830'
        status: Succeeded
        url: 'https://my-platform/daily/job/NHCFD6'
        errorLog: 'http://my-platform/logging/errors.log'
        '@type': ImportJob
      description: Here's an example of a request for retrieving a specific import job.
    ExportJob_list_example_response:
      value:
        - id: '1866'
          href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/exportJob/1866'
          contentType: application/json
          creationDate: '2023-06-17T00:00:00.000Z'
          path: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/Catalog/3830'
          query: category.id=7757
          status: Running
          url: 'https://my-platform/daily/job/EHCFD6'
          errorLog: 'http://my-platform/logging/errors.log'
          '@type': ExportJob
        - id: '5431'
          href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/exportJob/5431'
          contentType: application/json
          creationDate: '2023-06-17T00:00:00.000Z'
          completionDate: '2023-06-17T00:05:00.000Z'
          path: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/3830'
          query: category.id=7753
          status: Succeeded
          url: 'https://my-platform/daily/job/EHCFD6'
          errorLog: 'http://my-platform/logging/errors.log'
          '@type': ExportJob
      description: Here's an example of a request for retrieving multiple export jobs.
    ExportJob_retrieve_example_response:
      value:
        id: '1866'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/exportJob/71866'
        contentType: application/json
        creationDate: '2023-06-17T00:00:00.000Z'
        path: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/3830'
        query: category.id=7757
        status: Running
        url: 'https://my-platform/daily/job/EHCFD6'
        errorLog: 'http://my-platform/logging/errors.log'
        '@type': ImportJob
      description: Here's an example of a request for retrieving a specific export job.
    ResourceCatalog_Create_example_request:
      value:
        name: Cloud Resource Catalog
        description: This resource catalog points to entities in the area of cloud management
        '@type': ResourceCatalog
      description: Here is an example of a request for creating a ResourceCatalog.
    ResourceCatalog_Create_example_response:
      value:
        id: '5574'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/5574'
        name: Cloud Resource Catalog
        description: This resource catalog points to entities in the area of cloud management
        lastUpdate: '2021-08-27T00:00:00.000Z'
        lifecycleStatus: Tentative
        '@type': ResourceCatalog
      description: Here is an example of a response for creating a ResourceCatalog.
    Resource_category_create_example_request:
      value:
        name: Network Logical Resources
        description: >-
          This resource category groups together logical resources that are implemented in the
          network
        '@type': ResourceCategory
      description: Here is an example of a request for creating a resource category.
    Resource_category_create_example_response:
      value:
        id: '8121'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/8121'
        name: Network Logical Resources
        description: >-
          This resource category groups together logical resources that are implemented in the
          network
        '@type': ResourceCategory
        version: '1.0'
        validFor:
          startDateTime: '2017-08-11T00:00:00.000Z'
          endDateTime: '2018-03-07T00:00:00.000Z'
        lifecycleStatus: Tentative
        lastUpdate: '2017-08-09T00:00:00.000Z'
      description: Here is an example of a response for creating a resource category.
    Resource_candidate_create_example_request:
      value:
        name: Virtual Storage Medium
        description: >-
          This resource candidate makes the virtual storage medium specification available in the
          cloud catalog
        version: '2.1'
        '@type': ResourceCandidate
      description: Here is an example of a request for creating a resource candidate.
    Resource_candidate_create_example_response:
      value:
        id: '7479'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7479'
        name: Virtual Storage Medium
        description: >-
          This resource candidate makes the virtual storage medium specification available in the
          cloud catalog
        lastUpdate: '2017-08-09T00:00:00.000Z'
        lifecycleStatus: Active
        version: '2.1'
        '@type': ResourceCandidate
      description: Here is an example of a response for creating a resource candidate.
    ResourceSpecification_create_example_1_characteristic_bnased_request:
      value:
        name: Virtual Storage Medium
        description: This resource specification defines the virtual storage medium
        '@type': ResourceSpecification
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecification.schema.json'
        version: '1.0'
        validFor:
          startDateTime: '2017-08-12T00:00:00.000Z'
          endDateTime: '2018-03-07T00:00:00.000Z'
        isBundle: false
        category: Cloud resource
        attachment:
          - id: '25552'
            href: 'https://mycsp.com:8080/tmf-api/document/v5/attachment/25552'
            name: Configuration Instructions
            mimeType: application/pdf
            url: 'https://mycsp.com:7070/docloader?docnum=9567457677'
            '@type': Attachment
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '5858'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5858'
              name: Gustave Flaubert
              '@referredType': Supplier
              '@type': PartyRoleRef
        resourceSpecCharacteristic:
          - name: Maximum Allowed Storage
            description: 'The storage limit in the virtual storage medium, '
            valueType: integer
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            isUnique: true
            '@type': CharacteristicSpecification
            characteristicValueSpecification:
              - value: 1024000
                '@type': IntegerCharacteristicValueSpecification
              - value: 2048000
                '@type': IntegerCharacteristicValueSpecification
        resourceSpecRelationship:
          - id: '556788'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/556788'
            name: Underlying Physical Disk
            relationshipType: dependency
            '@type': ResourceSpecificationRelationship
      description: >-
        Here's an example of a request for creating a specification. This example shows a
        characteristic-based implementation.
    ResourceSpecification_create_example_1_characteristic_bnased_response:
      value:
        id: '42'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
        name: Virtual Storage Medium
        description: This resource specification defines the virtual storage medium
        '@type': ResourceSpecification
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecification.schema.json'
        version: '1.0'
        validFor:
          startDateTime: '2017-08-12T00:00:00.000Z'
          endDateTime: '2018-03-07T00:00:00.000Z'
        lastUpdate: '2017-08-09T00:00:00.000Z'
        lifecycleStatus: Tentative
        isBundle: false
        category: Cloud resource
        attachment:
          - id: '25552'
            href: 'https://mycsp.com:8080/tmf-api/document/v5/attachment/25552'
            name: Configuration Instructions
            mimeType: application/pdf
            url: 'https://mycsp.com:7070/docloader?docnum=9567457677'
            '@type': Attachment
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '5858'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5858'
              name: Gustave Flaubert
              '@referredType': Supplier
              '@type': PartyRoleRef
        resourceSpecCharacteristic:
          - name: Maximum Allowed Storage
            description: 'The storage limit in the virtual storage medium, '
            valueType: integer
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            isUnique: true
            '@type': CharacteristicSpecification
            characteristicValueSpecification:
              - value: 1024000
                '@type': IntegerCharacteristicValueSpecification
              - value: 2048000
                '@type': IntegerCharacteristicValueSpecification
        resourceSpecRelationship:
          - id: '556788'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/556788'
            name: Underlying Physical Disk
            relationshipType: dependency
            '@type': ResourceSpecificationRelationship
      description: Response message
    ResourceSpecification_create_example_2_schema_based_request:
      value:
        name: Virtual Storage Medium
        description: This resource specification defines the virtual storage medium
        '@type': ResourceSpecification
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecification.schema.json'
        version: '1.0'
        validFor:
          startDateTime: '2017-08-12T00:00:00.000Z'
          endDateTime: '2018-03-07T00:00:00.000Z'
        isBundle: false
        category: Cloud resource
        attachment:
          - id: '25552'
            href: 'https://mycsp.com:8080/tmf-api/document/v5/attachment/25552'
            name: Configuration Instructions
            mimeType: application/pdf
            url: 'https://mycsp.com:7070/docloader?docnum=9567457677'
            '@type': Attachment
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '5858'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5858'
              name: Gustave Flaubert
              '@referredType': Supplier
              '@type': PartyRoleRef
        resourceSpecRelationship:
          - id: '556788'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/556788'
            name: Underlying Physical Disk
            relationshipType: dependency
            '@type': ResourceSpecificationRelationship
        targetResourceSchema:
          '@type': VirtualStorage
          '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/VirtualStorage.schema.json'
      description: >-
        Here's an example of a request for creating a specification. This example shows a
        schema-based implementation.
    ResourceSpecification_create_example_2_schema_based_response:
      value:
        id: '42'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
        name: Virtual Storage Medium
        description: This resource specification defines the virtual storage medium
        '@type': ResourceSpecification
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecification.schema.json'
        version: '1.0'
        validFor:
          startDateTime: '2017-08-12T00:00:00.000Z'
          endDateTime: '2018-03-07T00:00:00.000Z'
        lastUpdate: '2017-08-09T00:00:00.000Z'
        lifecycleStatus: Tentative
        isBundle: false
        category: Cloud resource
        attachment:
          - id: '25552'
            href: 'https://mycsp.com:8080/tmf-api/document/v5/attachment/25552'
            name: Configuration Instructions
            mimeType: application/pdf
            url: 'https://mycsp.com:7070/docloader?docnum=9567457677'
            '@type': Attachment
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '5858'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5858'
              name: Gustave Flaubert
              '@referredType': Supplier
              '@type': PartyRoleRef
        resourceSpecRelationship:
          - id: '556788'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/556788'
            name: Underlying Physical Disk
            relationshipType: dependency
            '@type': ResourceSpecificationRelationship
        targetResourceSchema:
          '@type': VirtualStorage
          '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/VirtualStorage.schema.json'
      description: Response message
    ResourceSpecification_create_example_3_with_intent_specification_request:
      value:
        name: Virtual Storage Medium
        description: This resource specification defines the virtual storage medium
        '@type': ResourceSpecification
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecification.schema.json'
        version: '1.0'
        validFor:
          startDateTime: '2017-08-12T00:00:00.000Z'
          endDateTime: '2018-03-07T00:00:00.000Z'
        isBundle: false
        category: Cloud resource
        attachment:
          - id: '25552'
            href: 'https://mycsp.com:8080/tmf-api/document/v5/attachment/25552'
            name: Configuration Instructions
            mimeType: application/pdf
            url: 'https://mycsp.com:7070/docloader?docnum=9567457677'
            '@type': Attachment
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '5858'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5858'
              name: Gustave Flaubert
              '@referredType': Supplier
              '@type': PartyRoleRef
        resourceSpecRelationship:
          - id: '556788'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/556788'
            name: Underlying Physical Disk
            relationshipType: dependency
            '@type': ResourceSpecificationRelationship
        targetResourceSchema:
          '@type': VirtualStorage
          '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/VirtualStorage.schema.json'
        intentSpecification:
          '@type': IntentSpecificationRef
          id: EventLiveBroadcast_IntentSpec
          href: >-
            https://mycsp.com:8080/tmf-api/intent/v5/intentSpecification/EventLiveBroadcast_IntentSpec
          name: EventLiveBroadcastIntentSpec
          '@referredType': IntentSpecification
      description: >-
        Here's an example of a request for creating a specification. This example shows a
        schema-based implementation.
    ResourceSpecification_create_example_3_with_intent_specification_response:
      value:
        id: '42'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
        name: Virtual Storage Medium
        description: This resource specification defines the virtual storage medium
        '@type': ResourceSpecification
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecification.schema.json'
        version: '1.0'
        validFor:
          startDateTime: '2017-08-12T00:00:00.000Z'
          endDateTime: '2018-03-07T00:00:00.000Z'
        lastUpdate: '2017-08-09T00:00:00.000Z'
        lifecycleStatus: Tentative
        isBundle: false
        category: Cloud resource
        attachment:
          - id: '25552'
            href: 'https://mycsp.com:8080/tmf-api/document/v5/attachment/25552'
            name: Configuration Instructions
            mimeType: application/pdf
            url: 'https://mycsp.com:7070/docloader?docnum=9567457677'
            '@type': Attachment
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '5858'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5858'
              name: Gustave Flaubert
              '@referredType': Supplier
              '@type': PartyRoleRef
        resourceSpecRelationship:
          - id: '556788'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/556788'
            name: Underlying Physical Disk
            relationshipType: dependency
            '@type': ResourceSpecificationRelationship
        targetResourceSchema:
          '@type': VirtualStorage
          '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/VirtualStorage.schema.json'
        intentSpecification:
          '@type': IntentSpecificationRef
          id: EventLiveBroadcast_IntentSpec
          href: >-
            https://mycsp.com:8080/tmf-api/intent/v5/IntentSpecification/EventLiveBroadcast_IntentSpec
          name: EventLiveBroadcastIntentSpec
          '@referredType': IntentSpecification
      description: Response message
    ImportJob_create_example_request:
      value:
        contentType: application/json
        path: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/3830'
        url: 'https://my-platform/daily/job/NHCFD6'
        '@type': ImportJob
      description: Here is an example of a request for creating an import job.
    ImportJob_create_example_response:
      value:
        id: '7497'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/importJob/7497'
        contentType: application/json
        creationDate: '2023-06-17T00:00:00.000Z'
        path: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/3830'
        status: Running
        url: 'https://my-platform/daily/job/NHCFD6'
        errorLog: 'http://my-platform/logging/errors.log'
        '@type': ImportJob
      description: Here is an example of a response for creating an import job.
    ExportJob_create_example_request:
      value:
        contentType: application/json
        path: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/3830'
        query: category.id=7757
        url: 'https://my-platform/daily/job/EHCFD6'
        errorLog: 'http://my-platform/logging/errors.log'
        '@type': ExportJob
      description: Here is an example of a request for creating an export job.
    ExportJob_create_example_response:
      value:
        id: '1866'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/exportJob/1866'
        contentType: application/json
        creationDate: '2023-06-17T00:00:00.000Z'
        path: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/Catalog/3830'
        query: category.id=7757
        status: Running
        url: 'https://my-platform/daily/job/EHCFD6'
        errorLog: 'http://my-platform/logging/errors.log'
        '@type': ExportJob
      description: Here is an example of a response for creating an export job.
    ResourceCatalog_Update_example_Merge__request:
      value:
        '@type': ResourceCatalog
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '6001'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/6001'
              name: John Doe
              '@referredType': Supplier
              '@type': PartyRoleRef
      description: Here is an example of a request for patching a ResourceCatalog.
    ResourceCatalog_Update_example_Merge__response:
      value:
        id: '5574'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/5574'
        name: Cloud Resource Catalog
        description: This resource catalog points to entities in the area of cloud management
        '@type': ResourceCatalog
        version: '1.0'
        validFor:
          startDateTime: '2022-08-23T00:00:22.920Z'
          endDateTime: '2023-03-25T00:00:22.920Z'
        lastUpdate: '2023-03-24T00:00:22.920Z'
        lifecycleStatus: Active
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '6001'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/6001'
              name: John Doe
              '@referredType': Supplier
              '@type': PartyRoleRef
        category:
          - id: '4569'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/4569'
            version: '1.0'
            name: Secure Home
            '@type': ResourceCategoryRef
      description: Here is an example of a response for patching a ResourceCatalog.
    ResourceCatalog_Update_example_JSON__request:
      value:
        '@type': ResourceCatalog
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '6001'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/6001'
              name: John Doe
              '@referredType': Supplier
              '@type': PartyRoleRef
      description: Here is an example of a request for patching a ResourceCatalog.
    ResourceCatalog_Update_example_JSON__response:
      value:
        id: '5574'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/5574'
        name: Cloud Resource Catalog
        description: This resource catalog points to entities in the area of cloud management
        '@type': ResourceCatalog
        version: '1.0'
        validFor:
          startDateTime: '2022-08-23T00:00:22.920Z'
          endDateTime: '2023-03-25T00:00:22.920Z'
        lastUpdate: '2023-03-24T00:00:22.920Z'
        lifecycleStatus: Active
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '6001'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/6001'
              name: John Doe
              '@referredType': Supplier
              '@type': PartyRoleRef
        category:
          - id: '4569'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/4569'
            version: '1.0'
            name: Secure Home
            '@type': ResourceCategoryRef
      description: Here is an example of a response for patching a ResourceCatalog.
    ResourceCatalog_Update_example_JSON-PATCH__request:
      value:
        - op: replace
          path: /relatedParty
          relatedParty:
            - role: Supplier
              '@type': RelatedPartyRefOrPartyRoleRef
              partyOrPartyRole:
                id: '6001'
                href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/6001'
                name: John Doe
                '@referredType': Supplier
                '@type': PartyRoleRef
      description: Here is an example of a request for patching a ResourceCatalog.
    ResourceCatalog_Update_example_JSON-PATCH__response:
      value:
        id: '5574'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/5574'
        name: Cloud Resource Catalog
        description: This resource catalog points to entities in the area of cloud management
        '@type': ResourceCatalog
        version: '2.0'
        validFor:
          startDateTime: '2022-03-25T00:00:00.000Z'
          endDateTime: '2023-09-25T00:00:00.000Z'
        lastUpdate: '2023-03-24T00:00:22.920Z'
        lifecycleStatus: Active
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '6001'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/6001'
              name: John Doe
              '@referredType': Supplier
              '@type': PartyRoleRef
        category:
          - id: '4569'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/4569'
            version: '1.0'
            name: Secure Home
      description: Here is an example of a response for patching a ResourceCatalog.
    ResourceCatalog_Update_example_JSON-PATCH-QUERY__request:
      value:
        - op: replace
          path: /relatedParty/role?partyOrPartyRole.name='Gustave Flaubert'
          value: Owner
      description: Here is an example of a request for patching a ResourceCatalog.
    ResourceCatalog_Update_example_JSON-PATCH-QUERY__response:
      value:
        id: '5574'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/5574'
        name: Cloud Resource Catalog
        description: This resource catalog points to entities in the area of cloud management
        '@type': ResourceCatalog
        version: '1.0'
        validFor:
          startDateTime: '2022-08-23T00:00:22.920Z'
          endDateTime: '2023-03-25T00:00:22.920Z'
        lastUpdate: '2023-03-24T00:00:22.920Z'
        lifecycleStatus: Active
        relatedParty:
          - role: Owner
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '5858'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5858'
              name: Gustave Flaubert
              '@referredType': Owner
              '@type': PartyRoleRef
        category:
          - id: '4569'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/4569'
            version: '1.0'
            name: Secure Home
            '@type': ResourceCategoryRef
      description: Here is an example of a response for patching a ResourceCatalog.
    ResourceCategory_Update_example_Merge__request:
      value:
        '@type': ResourceCategory
        version: '2.0'
        validFor:
          startDateTime: '2022-08-23T00:00:22.920Z'
          endDateTime: '2023-03-25T00:00:22.920Z'
      description: Here is an example of a request for patching a ResourceCategory.
    ResourceCategory_Update_example_Merge__response:
      value:
        id: '8121'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/8121'
        name: Network Logical Resources
        description: >-
          This resource category groups together logical resources that are implemented in the
          network
        '@type': ResourceCategory
        version: '2.0'
        validFor:
          startDateTime: '2022-08-23T00:00:22.920Z'
          endDateTime: '2023-03-25T00:00:22.920Z'
        lifecycleStatus: Active
        lastUpdate: '2023-03-24T00:00:22.920Z'
        isRoot: true
        relatedParty:
          - role: Employee
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '4434'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/employee/4434'
              name: Jimmy Doe
              '@referredType': Employee
              '@type': PartyRoleRef
        category:
          - id: '5982'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/5982'
            version: '3.2'
            name: IoT
            '@type': ResourceCategoryRef
        resourceCandidate:
          - id: '5298'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/5298'
            version: '1.0'
            name: Elastic Storage
            '@type': ResourceCandidateRef
          - id: '7479'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7479'
            version: '3.2'
            name: Virtual Storage Medium
            '@type': ResourceCandidateRef
        resourceSpecification:
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
            version: '3.0'
            name: Virtual Storage Medium
            '@type': ResourceSpecificationRef
            '@referredType': ResourceSpecification
      description: Here is an example of a response for patching a ResourceCategory.
    ResourceCategory_Update_example_JSON__request:
      value:
        '@type': ResourceCategory
        version: '2.0'
        validFor:
          startDateTime: '2022-08-23T00:00:22.920Z'
          endDateTime: '2023-03-25T00:00:22.920Z'
      description: Here is an example of a request for patching a ResourceCategory.
    ResourceCategory_Update_example_JSON__response:
      value:
        id: '8121'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/8121'
        name: Network Logical Resources
        description: >-
          This resource category groups together logical resources that are implemented in the
          network
        '@type': ResourceCategory
        version: '2.0'
        validFor:
          startDateTime: '2022-08-23T00:00:22.920Z'
          endDateTime: '2023-03-25T00:00:22.920Z'
        lifecycleStatus: Active
        lastUpdate: '2023-03-24T00:00:22.920Z'
        isRoot: true
        relatedParty:
          - role: Employee
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '4434'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/employee/4434'
              name: Jimmy Doe
              '@referredType': Employee
              '@type': PartyRoleRef
        category:
          - id: '5982'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/5982'
            version: '3.2'
            name: IoT
            '@type': ResourceCategoryRef
        resourceCandidate:
          - id: '5298'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/5298'
            version: '1.0'
            name: Elastic Storage
            '@type': ResourceCandidateRef
          - id: '7479'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7479'
            version: '3.2'
            name: Virtual Storage Medium
            '@type': ResourceCandidateRef
        resourceSpecification:
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
            version: '3.0'
            name: Virtual Storage Medium
            '@type': ResourceSpecificationRef
            '@referredType': ResourceSpecification
      description: Here is an example of a response for patching a ResourceCategory.
    ResourceCategory_Update_example_JSON-PATCH__request:
      value:
        - op: replace
          path: /version
          value: '2.0'
        - op: replace
          path: /validFor/startDateTime
          value: '2022-08-23T00:00:22.920Z'
        - op: replace
          path: /validFor/endDateTime
          value: '2023-11-25T00:00:22.920Z'
      description: Here is an example of a request for patching a ResourceCategory.
    ResourceCategory_Update_example_JSON-PATCH__response:
      value:
        id: '8121'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/8121'
        name: Network Logical Resources
        description: >-
          This resource category groups together logical resources that are implemented in the
          network
        '@type': ResourceCategory
        version: '2.0'
        validFor:
          startDateTime: '2022-08-23T00:00:22.920Z'
          endDateTime: '2023-11-25T00:00:22.920Z'
        lifecycleStatus: Active
        lastUpdate: '2023-06-22T00:00:22.920Z'
        isRoot: true
        relatedParty:
          - role: Employee
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '4434'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/employee/4434'
              name: Jimmy Doe
              '@referredType': Employee
              '@type': PartyRoleRef
        category:
          - id: '5982'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/5982'
            version: '3.2'
            name: IoT
            '@type': ResourceCategoryRef
        resourceCandidate:
          - id: '5298'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/5298'
            version: '1.0'
            name: Elastic Storage
            '@type': ResourceCandidateRef
          - id: '7479'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7479'
            version: '3.2'
            name: Virtual Storage Medium
            '@type': ResourceCandidateRef
        resourceSpecification:
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
            version: '3.0'
            name: Virtual Storage Medium
            '@type': ResourceSpecificationRef
            '@referredType': ResourceSpecification
      description: Here is an example of a response for patching a ResourceCategory.
    ResourceCategory_Update_example_JSON-PATCH-QUERY__request:
      value:
        - op: replace
          path: /lifecycleStatus?version='1.0'
          value: Retired
      description: Here is an example of a request for patching a ResourceCategory.
    ResourceCategory_Update_example_JSON-PATCH-QUERY__response:
      value:
        id: '8121'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/8121'
        name: Network Logical Resources
        description: >-
          This resource category groups together logical resources that are implemented in the
          network
        '@type': ResourceCategory
        version: '1.0'
        validFor:
          startDateTime: '2022-08-23T00:00:22.920Z'
          endDateTime: '2023-03-25T00:00:22.920Z'
        lifecycleStatus: Retired
        lastUpdate: '2023-03-24T00:00:22.920Z'
        isRoot: true
        relatedParty:
          - role: Employee
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '4434'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/employee/4434'
              name: Jimmy Doe
              '@referredType': Employee
              '@type': PartyRoleRef
        category:
          - id: '5982'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/5982'
            version: '3.2'
            name: IoT
            '@type': ResourceCategoryRef
        resourceCandidate:
          - id: '5298'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/5298'
            version: '1.0'
            name: Elastic Storage
            '@type': ResourceCandidateRef
          - id: '7479'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7479'
            version: '3.2'
            name: Virtual Storage Medium
            '@type': ResourceCandidateRef
        resourceSpecification:
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
            version: '3.0'
            name: Virtual Storage Medium
            '@type': ResourceSpecificationRef
            '@referredType': ResourceSpecification
      description: Here is an example of a response for patching a ResourceCategory.
    ResourceCandidate_Update_example_Merge__request:
      value:
        '@type': ResourceCandidate
        version: '3.3'
        lifecycleStatus: Launched
      description: Here is an example of a request for patching a ResourceCandidate.
    ResourceCandidate_Update_example_Merge__response:
      value:
        id: '7479'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7479'
        name: Virtual Storage Medium
        description: >-
          This resource candidate makes the virtual storage medium specification available in the
          cloud catalog
        '@type': ResourceCandidate
        version: '3.3'
        validFor:
          startDateTime: '2022-08-23T00:00:22.920Z'
          endDateTime: '2023-03-25T00:00:22.920Z'
        lastUpdate: '2023-06-22T00:00:22.920Z'
        lifecycleStatus: Launched
        category:
          - id: '5355'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/5355'
            version: '1.1'
            name: Cloud Resources
            '@type': ResourceCategoryRef
        resourceSpecification:
          id: '42'
          href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
          version: '3.0'
          name: Virtual Storage Medium
          '@type': ResourceSpecificationRef
          '@referredType': ResourceSpecification
      description: Here is an example of a response for patching a ResourceCandidate.
    ResourceCandidate_Update_example_JSON__request:
      value:
        '@type': ResourceCandidate
        version: '3.3'
        lifecycleStatus: Launched
      description: Here is an example of a request for patching a ResourceCandidate.
    ResourceCandidate_Update_example_JSON__response:
      value:
        id: '7479'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7479'
        name: Virtual Storage Medium
        description: >-
          This resource candidate makes the virtual storage medium specification available in the
          cloud catalog
        '@type': ResourceCandidate
        version: '3.3'
        validFor:
          startDateTime: '2022-08-23T00:00:22.920Z'
          endDateTime: '2023-03-25T00:00:22.920Z'
        lastUpdate: '2023-06-22T00:00:22.920Z'
        lifecycleStatus: Launched
        category:
          - id: '5355'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/5355'
            version: '1.1'
            name: Cloud Resources
            '@type': ResourceCategoryRef
        resourceSpecification:
          id: '42'
          href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
          version: '3.0'
          name: Virtual Storage Medium
          '@type': ResourceSpecificationRef
          '@referredType': ResourceSpecification
      description: Here is an example of a response for patching a ResourceCandidate.
    ResourceCandidate_Update_example_JSON-PATCH__request:
      value:
        - op: replace
          path: /version
          value: '3.3'
        - op: replace
          path: /lifecycleStatus
          value: Launched
      description: Here is an example of a request for patching a ResourceCandidate.
    ResourceCandidate_Update_example_JSON-PATCH__response:
      value:
        id: '7479'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7479'
        name: Virtual Storage Medium
        description: >-
          This resource candidate makes the virtual storage medium specification available in the
          cloud catalog
        '@type': ResourceCandidate
        version: '3.3'
        validFor:
          startDateTime: '2022-08-23T00:00:22.920Z'
          endDateTime: '2023-03-25T00:00:22.920Z'
        lastUpdate: '2023-06-22T00:00:22.920Z'
        lifecycleStatus: Launched
        category:
          - id: '5355'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/5355'
            version: '1.1'
            name: Cloud Resources
            '@type': ResourceCategoryRef
        resourceSpecification:
          id: '42'
          href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
          version: '3.0'
          name: Virtual Storage Medium
          '@type': ResourceSpecificationRef
          '@referredType': ResourceSpecification
      description: Here is an example of a response for patching a ResourceCandidate.
    ResourceCandidate_Update_example_JSON-PATCH-QUERY__request:
      value:
        - op: replace
          path: /version?lifecycleStatus='Active'
          value: '3.3'
      description: Here is an example of a request for patching a ResourceCandidate.
    ResourceCandidate_Update_example_JSON-PATCH-QUERY__response:
      value:
        id: '7479'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7479'
        name: Virtual Storage Medium
        description: >-
          This resource candidate makes the virtual storage medium specification available in the
          cloud catalog
        '@type': ResourceCandidate
        version: '3.3'
        validFor:
          startDateTime: '2022-08-23T00:00:22.920Z'
          endDateTime: '2023-03-25T00:00:22.920Z'
        lastUpdate: '2023-06-22T00:00:22.920Z'
        lifecycleStatus: Active
        category:
          - id: '5355'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/5355'
            version: '1.1'
            name: Cloud Resources
            '@type': ResourceCategoryRef
        resourceSpecification:
          id: '42'
          href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
          version: '3.0'
          name: Virtual Storage Medium
          '@type': ResourceSpecificationRef
          '@referredType': ResourceSpecification
      description: Here is an example of a response for patching a ResourceCandidate.
    ResourceSpecification_Update_example_Merge__request:
      value:
        '@type': ResourceSpecification
        version: '4.0'
        validFor:
          startDateTime: '2022-03-23T00:00:00.000Z'
          endDateTime: '2023-09-25T00:00:00.000Z'
      description: Here is an example of a request for patching a ResourceSpecification.
    ResourceSpecification_Update_example_Merge__response:
      value:
        id: '42'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
        name: Virtual Storage Medium
        description: This resource specification defines the virtual storage medium
        '@type': ResourceSpecification
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecification.schema.json'
        version: '4.0'
        validFor:
          startDateTime: '2022-03-23T00:00:00.000Z'
          endDateTime: '2023-09-25T00:00:00.000Z'
        lastUpdate: '2019-03-20T00:00:00.000Z'
        lifecycleStatus: Active
        isBundle: false
        category: Cloud resource
        attachment:
          - id: '25552'
            href: 'https://mycsp.com:8080/tmf-api/document/v5/attachment/25552'
            name: Configuration Instructions
            mimeType: application/pdf
            url: 'https://mycsp.com:7070/docloader?docnum=9567457677'
            '@type': Attachment
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '5858'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5858'
              name: Gustave Flaubert
              '@referredType': Supplier
              '@type': PartyRoleRef
        resourceSpecCharacteristic:
          - name: Maximum Allowed Storage
            description: 'The storage limit in the virtual storage medium, '
            valueType: integer
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            isUnique: true
            '@type': CharacteristicSpecification
            resourceSpecCharacteristicValue:
              - value: 1024000
                '@type': IntegerCharacteristicValueSpecification
              - value: 2048000
                '@type': IntegerCharacteristicValueSpecification
        resourceSpecRelationship:
          - id: '556788'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/556788'
            name: Underlying Physical Disk
            relationshipType: dependency
            '@type': ResourceSpecificationRelationship
        targetResourceSchema:
          '@type': VirtualStorage
          '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/VirtualStorage.schema.json'
      description: Here is an example of a response for patching a ResourceSpecification.
    ResourceSpecification_Update_example_JSON__request:
      value:
        '@type': ResourceSpecification
        version: '4.0'
        validFor:
          startDateTime: '2022-03-23T00:00:00.000Z'
          endDateTime: '2023-09-25T00:00:00.000Z'
      description: Here is an example of a request for patching a ResourceSpecification.
    ResourceSpecification_Update_example_JSON__response:
      value:
        id: '42'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
        name: Virtual Storage Medium
        description: This resource specification defines the virtual storage medium
        '@type': ResourceSpecification
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecification.schema.json'
        version: '4.0'
        validFor:
          startDateTime: '2022-03-23T00:00:00.000Z'
          endDateTime: '2023-09-25T00:00:00.000Z'
        lastUpdate: '2019-03-20T00:00:00.000Z'
        lifecycleStatus: Active
        isBundle: false
        category: Cloud resource
        attachment:
          - id: '25552'
            href: 'https://mycsp.com:8080/tmf-api/document/v5/attachment/25552'
            name: Configuration Instructions
            mimeType: application/pdf
            url: 'https://mycsp.com:7070/docloader?docnum=9567457677'
            '@type': Attachment
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '5858'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5858'
              name: Gustave Flaubert
              '@referredType': Supplier
              '@type': PartyRoleRef
        resourceSpecCharacteristic:
          - name: Maximum Allowed Storage
            description: 'The storage limit in the virtual storage medium, '
            valueType: integer
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            isUnique: true
            '@type': CharacteristicSpecification
            resourceSpecCharacteristicValue:
              - value: 1024000
                '@type': IntegerCharacteristicValueSpecification
              - value: 2048000
                '@type': IntegerCharacteristicValueSpecification
        resourceSpecRelationship:
          - id: '556788'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/556788'
            name: Underlying Physical Disk
            relationshipType: dependency
            '@type': ResourceSpecificationRelationship
        targetResourceSchema:
          '@type': VirtualStorage
          '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/VirtualStorage.schema.json'
      description: Here is an example of a response for patching a ResourceSpecification.
    ResourceSpecification_Update_example_JSON-PATCH__request:
      value:
        - op: replace
          /path: lifecycleStatus
          value: Retired
        - op: replace
          /path: isBundle
          value: 'true'
      description: Here is an example of a request for patching a ResourceSpecification.
    ResourceSpecification_Update_example_JSON-PATCH__response:
      value:
        id: '42'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
        name: Virtual Storage Medium
        description: This resource specification defines the virtual storage medium
        '@type': ResourceSpecification
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecification.schema.json'
        version: '4.0'
        validFor:
          startDateTime: '2019-03-23T00:00:00.000Z'
          endDateTime: '2020-09-25T00:00:00.000Z'
        lastUpdate: '2020-03-20T00:00:00.000Z'
        lifecycleStatus: Retired
        isBundle: true
        category: Cloud resource
        attachment:
          - id: '25552'
            href: 'https://mycsp.com:8080/tmf-api/document/v5/attachment/25552'
            name: Configuration Instructions
            mimeType: application/pdf
            url: 'https://mycsp.com:7070/docloader?docnum=9567457677'
            '@type': Attachment
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '5858'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5858'
              name: Gustave Flaubert
              '@referredType': Supplier
              '@type': PartyRoleRef
        resourceSpecCharacteristic:
          - name: Maximum Allowed Storage
            description: 'The storage limit in the virtual storage medium, '
            valueType: integer
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            isUnique: true
            '@type': CharacteristicSpecification
            resourceSpecCharacteristicValue:
              - value: 1024000
                '@type': IntegerCharacteristicValueSpecification
              - value: 2048000
                '@type': IntegerCharacteristicValueSpecification
        resourceSpecRelationship:
          - id: '556788'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/556788'
            name: Underlying Physical Disk
            relationshipType: dependency
            '@type': ResourceSpecificationRelationship
        targetResourceSchema:
          '@type': VirtualStorage
          '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/VirtualStorage.schema.json'
      description: Here is an example of a response for patching a ResourceSpecification.
    ResourceSpecification_Update_example_JSON-PATCH-QUERY__request:
      value:
        - op: replace
          path: /lifecycleStatus?lifecycleStatus='Active'
          value: Retired
      description: Here is an example of a request for patching a ResourceSpecification.
    ResourceSpecification_Update_example_JSON-PATCH-QUERY__response:
      value:
        id: '42'
        href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
        name: Virtual Storage Medium
        description: This resource specification defines the virtual storage medium
        '@type': ResourceSpecification
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecification.schema.json'
        version: '4.0'
        validFor:
          startDateTime: '2019-03-23T00:00:00.000Z'
          endDateTime: '2020-09-25T00:00:00.000Z'
        lastUpdate: '2019-03-20T00:00:00.000Z'
        lifecycleStatus: Retired
        isBundle: false
        category: Cloud resource
        attachment:
          - id: '25552'
            href: 'https://mycsp.com:8080/tmf-api/document/v5/attachment/25552'
            name: Configuration Instructions
            mimeType: application/pdf
            url: 'https://mycsp.com:7070/docloader?docnum=9567457677'
            '@type': Attachment
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '5858'
              href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5858'
              name: Gustave Flaubert
              '@referredType': Supplier
              '@type': PartyRoleRef
        resourceSpecCharacteristic:
          - name: Maximum Allowed Storage
            description: 'The storage limit in the virtual storage medium, '
            valueType: integer
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            isUnique: true
            '@type': CharacteristicSpecification
            resourceSpecCharacteristicValue:
              - value: 1024000
                '@type': IntegerCharacteristicValueSpecification
              - value: 2048000
                '@type': IntegerCharacteristicValueSpecification
        resourceSpecRelationship:
          - id: '556788'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/556788'
            name: Underlying Physical Disk
            relationshipType: dependency
            '@type': ResourceSpecificationRelationship
        targetResourceSchema:
          '@type': VirtualStorage
          '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/VirtualStorage.schema.json'
      description: Here is an example of a response for patching a ResourceSpecification.
    ResourceCatalog-Create_request:
      value:
        correlationId: 7dd133ee-6c9a
        description: ResourceCatalogCreateEvent illustration
        domain: Commercial
        eventId: 4876-8fbb-4d44dc98fd57
        eventTime: '2017-08-27T00:00:00.000Z'
        eventType: ResourceCatalogCreateEvent
        priority: '4'
        timeOcurred: '2017-08-27T00:00:00.000Z'
        title: ResourceCatalogCreateEvent
        event:
          resourceCatalog:
            id: '5574'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/5574'
            name: Cloud Resource Catalog
            description: This resource catalog points to entities in the area of cloud management
            lastUpdate: '2017-08-27T00:00:00.000Z'
            lifecycleStatus: In study
            '@type': ResourceCatalog
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ResourceCatalogCreateEvent
      description: Message example for ResourceCatalogCreateEvent event
    ResourceCatalog-AttributeValueChange_request:
      value:
        correlationId: e76a7eed-8d38
        description: ResourceCatalogAttributeValueChangeEvent illustration
        domain: Commercial
        eventId: 4de3-bca3-816b64d9cb29
        eventTime: '2022-08-25T12:19:03.381Z'
        eventType: ResourceCatalogAttributeValueChangeEvent
        priority: '1'
        timeOcurred: '2022-08-25T12:18:57.706Z'
        title: ResourceCatalogAttributeValueChangeEvent
        event:
          resourceCatalog:
            id: '5574'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/5574'
            description: This resource catalog points to entities in the business area of cloud management
            '@type': ResourceCatalog
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ResourceCatalogAttributeValueChangeEvent
      description: Message example for ResourceCatalogAttributeValueChangeEvent event
    ResourceCatalog-StatusChange_request:
      value:
        correlationId: 8a0f2551-8e5d
        description: ResourceCatalogStatusChangeEvent illustration
        domain: Commercial
        eventId: 415c-be02-41dee60b5bda
        eventTime: '2022-08-25T12:19:03.462Z'
        eventType: ResourceCatalogStatusChangeEvent
        priority: '3'
        timeOcurred: '2022-08-25T12:19:03.157Z'
        title: ResourceCatalogStatusChangeEvent
        event:
          resourceCatalog:
            id: '5574'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/5574'
            lifecycleStatus: In design
            '@type': ResourceCatalog
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ResourceCatalogStatusChangeEvent
      description: Message example for ResourceCatalogStatusChangeEvent event
    ResourceCatalog-Delete_request:
      value:
        correlationId: 81467a0f-5401
        description: ResourceCatalogDeleteEvent illustration
        domain: Commercial
        eventId: 4882-98a5-de479c8028d0
        eventTime: '2022-08-25T12:19:03.392Z'
        eventType: ResourceCatalogDeleteEvent
        priority: '4'
        timeOcurred: '2022-08-25T12:19:02.018Z'
        title: ResourceCatalogDeleteEvent
        event:
          resourceCatalog:
            id: '5574'
            '@type': ResourceCatalog
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ResourceCatalogDeleteEvent
      description: Message example for ResourceCatalogDeleteEvent event
    ResourceCategory-Create_request:
      value:
        correlationId: 7dd133ee-6c9a
        description: ResourceCategoryCreateEvent illustration
        domain: Commercial
        eventId: 4876-8fbb-4d44dc98fd57
        eventTime: '2022-08-25T12:19:03.452Z'
        eventType: ResourceCategoryCreateEvent
        priority: '4'
        timeOcurred: '2022-08-25T12:18:59.969Z'
        title: ResourceCategoryCreateEvent
        event:
          resourceCategory:
            id: '8121'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/8121'
            name: Network Logical Resources
            description: >-
              This resource category groups together logical resources that are implemented in the
              network
            '@type': ResourceCategory
            version: '1.0'
            validFor:
              startDateTime: '2017-08-11T00:00:00.000Z'
              endDateTime: '2018-03-07T00:00:00.000Z'
            lifecycleStatus: In study
            lastUpdate: '2017-08-09T00:00:00.000Z'
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ResourceCategoryCreateEvent
      description: Message example for ResourceCategoryCreateEvent event
    ResourceCategory-AttributeValueChange_request:
      value:
        correlationId: e76a7eed-8d38
        description: ResourceCategoryAttributeValueChangeEvent illustration
        domain: Commercial
        eventId: 4de3-bca3-816b64d9cb29
        eventTime: '2022-08-25T12:19:03.381Z'
        eventType: ResourceCategoryAttributeValueChangeEvent
        priority: '1'
        timeOcurred: '2022-08-25T12:18:57.706Z'
        title: ResourceCategoryAttributeValueChangeEvent
        event:
          resourceCategory:
            id: '8121'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/8121'
            '@type': ResourceCategory
            version: '1.1'
            validFor:
              startDateTime: '2018-03-07T00:00:00.000Z'
              endDateTime: '2019-03-07T00:00:00.000Z'
        '@baseType': Event
        '@type': ResourceCategoryAttributeValueChangeEvent
      description: Message example for ResourceCategoryAttributeValueChangeEvent event
    ResourceCategory-StatusChange_request:
      value:
        correlationId: 8a0f2551-8e5d
        description: ResourceCategoryStatusChangeEvent illustration
        domain: Commercial
        eventId: 415c-be02-41dee60b5bda
        eventTime: '2022-08-25T12:19:03.462Z'
        eventType: ResourceCategoryStatusChangeEvent
        priority: '3'
        timeOcurred: '2022-08-25T12:19:03.157Z'
        title: ResourceCategoryStatusChangeEvent
        event:
          resourceCategory:
            id: '8121'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCategory/8121'
            '@type': ResourceCategory
            lifecycleStatus: In design
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ResourceCategoryStatusChangeEvent
      description: Message example for ResourceCategoryStatusChangeEvent event
    ResourceCategory-Delete_request:
      value:
        correlationId: 81467a0f-5401
        description: ResourceCategoryDeleteEvent illustration
        domain: Commercial
        eventId: 4882-98a5-de479c8028d0
        eventTime: '2022-08-25T12:19:03.392Z'
        eventType: ResourceCategoryDeleteEvent
        priority: '4'
        timeOcurred: '2022-08-25T12:19:02.018Z'
        title: ResourceCategoryDeleteEvent
        event:
          resourceCategory:
            id: '8121'
            '@type': ResourceCategory
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ResourceCategoryDeleteEvent
      description: Message example for ResourceCategoryDeleteEvent event
    ResourceCandidate-Create_request:
      value:
        correlationId: 7dd133ee-6c9a
        description: ResourceCandidateCreateEvent illustration
        domain: Commercial
        eventId: 4876-8fbb-4d44dc98fd57
        eventTime: '2017-08-09T00:00:00.000Z'
        eventType: ResourceCandidateCreateEvent
        priority: '4'
        timeOcurred: '2017-08-09T00:00:00.000Z'
        title: ResourceCandidateCreateEvent
        event:
          resourceCandidate:
            id: '7479'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7479'
            name: Virtual Storage Medium
            description: >-
              This resource candidate makes the virtual storage medium specification available in
              the cloud catalog
            lastUpdate: '2017-08-09T00:00:00.000Z'
            lifecycleStatus: Active
            '@type': ResourceCandidate
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ResourceCandidateCreateEvent
      description: Message example for ResourceCandidateCreateEvent event
    ResourceCandidate-AttributeValueChange_request:
      value:
        correlationId: e76a7eed-8d38
        description: ResourceCandidateAttributeValueChangeEvent illustration
        domain: Commercial
        eventId: 4de3-bca3-816b64d9cb29
        eventTime: '2017-09-09T00:00:00.000Z'
        eventType: ResourceCandidateAttributeValueChangeEvent
        priority: '1'
        timeOcurred: '2017-09-09T00:00:00.000Z'
        title: ResourceCandidateAttributeValueChangeEvent
        event:
          resourceCandidate:
            id: '7479'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7479'
            name: Virtual Storage Medium Sized
            lastUpdate: '2017-09-09T00:00:00.000Z'
            '@type': ResourceCandidate
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ResourceCandidateAttributeValueChangeEvent
      description: Message example for ResourceCandidateAttributeValueChangeEvent event
    ResourceCandidate-StatusChange_request:
      value:
        correlationId: 8a0f2551-8e5d
        description: ResourceCandidateStatusChangeEvent illustration
        domain: Commercial
        eventId: 415c-be02-41dee60b5bda
        eventTime: '2022-08-25T12:19:03.462Z'
        eventType: ResourceCandidateStatusChangeEvent
        priority: '3'
        timeOcurred: '2022-08-25T12:19:03.157Z'
        title: ResourceCandidateStatusChangeEvent
        event:
          resourceCandidate:
            id: '7479'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7479'
            lifecycleStatus: Active
            '@type': ResourceCandidate
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ResourceCandidateStatusChangeEvent
      description: Message example for ResourceCandidateStatusChangeEvent event
    ResourceCandidate-Delete_request:
      value:
        correlationId: 81467a0f-5401
        description: ResourceCandidateDeleteEvent illustration
        domain: Commercial
        eventId: 4882-98a5-de479c8028d0
        eventTime: '2022-08-25T12:19:03.392Z'
        eventType: ResourceCandidateDeleteEvent
        priority: '4'
        timeOcurred: '2022-08-25T12:19:02.018Z'
        title: ResourceCandidateDeleteEvent
        event:
          resourceCandidate:
            id: '7479'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCandidate/7479'
            '@type': ResourceCandidate
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ResourceCandidateDeleteEvent
      description: Message example for ResourceCandidateDeleteEvent event
    ResourceSpecification-Create_request:
      value:
        correlationId: 7dd133ee-6c9a
        description: ResourceSpecificationCreateEvent illustration
        domain: Commercial
        eventId: 4876-8fbb-4d44dc98fd57
        eventTime: '2022-08-25T12:19:03.452Z'
        eventType: ResourceSpecificationCreateEvent
        priority: '4'
        timeOcurred: '2022-08-25T12:18:59.969Z'
        title: ResourceSpecificationCreateEvent
        event:
          resourceSpecification:
            id: '42'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
            name: Virtual Storage Medium
            description: This resource specification defines the virtual storage medium
            '@type': ResourceSpecification
            '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecification.schema.json'
            version: '1.0'
            validFor:
              startDateTime: '2017-08-12T00:00:00.000Z'
              endDateTime: '2018-03-07T00:00:00.000Z'
            lastUpdate: '2017-08-09T00:00:00.000Z'
            lifecycleStatus: Tentative
            isBundle: false
            category: Cloud resource
            attachment:
              - id: '25552'
                href: 'https://mycsp.com:8080/tmf-api/document/v5/attachment/25552'
                name: Configuration Instructions
                mimeType: application/pdf
                url: 'https://mycsp.com:7070/docloader?docnum=9567457677'
                '@type': Attachment
            relatedParty:
              - role: Supplier
                '@type': RelatedPartyRefOrPartyRoleRef
                partyOrPartyRole:
                  id: '5858'
                  href: 'https://mycsp.com:8080/tmf-api/partyRole/v5/supplier/5858'
                  name: Gustave Flaubert
                  '@referredType': Supplier
                  '@type': PartyRoleRef
            resourceSpecCharacteristic:
              - name: Maximum Allowed Storage
                description: 'The storage limit in the virtual storage medium, '
                valueType: integer
                configurable: true
                minCardinality: 1
                maxCardinality: 1
                isUnique: true
                '@type': CharacteristicSpecification
                characteristicValueSpecification:
                  - value: 1024000
                    '@type': IntegerCharacteristicValueSpecification
                  - value: 2048000
                    '@type': IntegerCharacteristicValueSpecification
            resourceSpecRelationship:
              - id: '556788'
                href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/556788'
                name: Underlying Physical Disk
                relationshipType: dependency
                '@type': ResourceSpecificationRelationship
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ResourceSpecificationCreateEvent
      description: Message example for ResourceSpecificationCreateEvent event
    ResourceSpecification-AttributeValueChange_request:
      value:
        correlationId: e76a7eed-8d38
        description: ResourceSpecificationAttributeValueChangeEvent illustration
        domain: Commercial
        eventId: 4de3-bca3-816b64d9cb29
        eventTime: '2022-08-25T12:19:03.381Z'
        eventType: ResourceSpecificationAttributeValueChangeEvent
        priority: '1'
        timeOcurred: '2022-08-25T12:18:57.706Z'
        title: ResourceSpecificationAttributeValueChangeEvent
        event:
          resourceSpecification:
            id: '42'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
            '@type': ResourceSpecification
            resourceSpecCharacteristic:
              - isUnique: false
                '@type': CharacteristicSpecification
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ResourceSpecificationAttributeValueChangeEvent
      description: Message example for ResourceSpecificationAttributeValueChangeEvent event
    ResourceSpecification-StatusChange_request:
      value:
        correlationId: 8a0f2551-8e5d
        description: ResourceSpecificationStatusChangeEvent illustration
        domain: Commercial
        eventId: 415c-be02-41dee60b5bda
        eventTime: '2022-08-25T12:19:03.462Z'
        eventType: ResourceSpecificationStatusChangeEvent
        priority: '3'
        timeOcurred: '2022-08-25T12:19:03.157Z'
        title: ResourceSpecificationStatusChangeEvent
        event:
          resourceSpecification:
            id: '42'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceSpecification/42'
            '@type': ResourceSpecification
            lifecycleStatus: Active
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ResourceSpecificationStatusChangeEvent
      description: Message example for ResourceSpecificationStatusChangeEvent event
    ResourceSpecification-Delete_request:
      value:
        correlationId: 81467a0f-5401
        description: ResourceSpecificationDeleteEvent illustration
        domain: Commercial
        eventId: 4882-98a5-de479c8028d0
        eventTime: '2022-08-25T12:19:03.392Z'
        eventType: ResourceSpecificationDeleteEvent
        priority: '4'
        timeOcurred: '2022-08-25T12:19:02.018Z'
        title: ResourceSpecificationDeleteEvent
        event:
          resourceSpecification:
            id: '42'
            '@type': ResourceSpecification
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ResourceSpecificationDeleteEvent
      description: Message example for ResourceSpecificationDeleteEvent event
    ImportJob-Create_request:
      value:
        correlationId: 7dd133ee-6c9a
        description: ExportJobCreateEvent illustration
        domain: Commercial
        eventId: 4876-8fbb-4d44dc98fd57
        eventTime: '2022-08-25T12:19:03.452Z'
        eventType: ExportJobCreateEvent
        priority: '4'
        timeOcurred: '2022-08-25T12:18:59.969Z'
        title: ExportJobCreateEvent
        event:
          importJob:
            id: '5439'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/5439'
            contentType: application/json
            creationDate: '2018-08-27T00:00:00.000Z'
            path: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/3830'
            query: category.id=7757
            status: Running
            url: 'https://my-platform/daily/job/EHCFD6'
            errorLog: 'http://my-platform/logging/errors.log'
            '@type': ImportJob
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ImportJobCreateEvent
      description: Message example for ImportJobCreateEvent event
    ImportJob-StateChange_request:
      value:
        correlationId: 8a0f2551-8e5d
        description: ImportJobStateChangeEvent illustration
        domain: Commercial
        eventId: 415c-be02-41dee60b5bda
        eventTime: '2022-08-25T12:19:03.462Z'
        eventType: ImportJobStateChangeEvent
        priority: '3'
        timeOcurred: '2022-08-25T12:19:03.157Z'
        title: ImportJobStateChangeEvent
        event:
          importJob:
            status: Succeeded
            url: 'https://my-platform/daily/job/EHCFD6'
            errorLog: 'http://my-platform/logging/errors.log'
            '@type': ImportJob
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ImportJobStateChangeEvent
      description: Message example for ImportJobStateChangeEvent event
    ImportJob-Delete_request:
      value:
        correlationId: 8a0f2551-8e5d
        description: ImportJobDeleteEvent illustration
        domain: Commercial
        eventId: 415c-be02-41dee60b5bda
        eventTime: '2022-08-25T12:19:03.462Z'
        eventType: ImportJobDeleteEvent
        priority: '3'
        timeOcurred: '2022-08-25T12:19:03.157Z'
        title: ImportJobDeleteEvent
        event:
          importJob:
            id: '5435'
            '@type': ImportJob
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ImportJobDeleteEvent
      description: Message example for ImportJobDeleteEvent event
    ExportJob-Create_request:
      value:
        correlationId: 7dd133ee-6c9a
        description: ExportJobCreateEvent illustration
        domain: Commercial
        eventId: 4876-8fbb-4d44dc98fd57
        eventTime: '2022-08-25T12:19:03.452Z'
        eventType: ExportJobCreateEvent
        priority: '4'
        timeOcurred: '2022-08-25T12:18:59.969Z'
        title: ExportJobCreateEvent
        event:
          importJob:
            id: '5439'
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/5439'
            contentType: application/json
            creationDate: '2018-08-27T00:00:00.000Z'
            path: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/resourceCatalog/3830'
            query: category.id=7757
            status: Running
            url: 'https://my-platform/daily/job/EHCFD6'
            errorLog: 'http://my-platform/logging/errors.log'
            '@type': ImportJob
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ImportJobCreateEvent
      description: Message example for ExportJobCreateEvent event
    ExportJob-StateChange_request:
      value:
        correlationId: 8a0f2551-8e5d
        description: ExportJobStateChangeEvent illustration
        domain: Commercial
        eventId: 415c-be02-41dee60b5bda
        eventTime: '2022-08-25T12:19:03.462Z'
        eventType: ExportJobStateChangeEvent
        priority: '3'
        timeOcurred: '2022-08-25T12:19:03.157Z'
        title: ExportJobStateChangeEvent
        event:
          exportJob:
            status: Succeeded
            href: 'https://mycsp.com:8080/tmf-api/resourceCatalog/v5/exportJob/5435'
            id: '5435'
            '@type': ExportJob
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ExportJobStateChangeEvent
      description: Message example for ExportJobStateChangeEvent event
    ExportJob-Delete_request:
      value:
        correlationId: 8a0f2551-8e5d
        description: ImportJobDeleteEvent illustration
        domain: Commercial
        eventId: 415c-be02-41dee60b5bda
        eventTime: '2022-08-25T12:19:03.462Z'
        eventType: ImportJobDeleteEvent
        priority: '3'
        timeOcurred: '2022-08-25T12:19:03.157Z'
        title: ImportJobDeleteEvent
        event:
          importJob:
            id: '5435'
            '@type': ImportJob
        reportingSystem:
          id: '335'
          name: APP-179
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '853'
          name: APP-30
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ImportJobDeleteEvent
      description: Message example for ExportJobDeleteEvent event
