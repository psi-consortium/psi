openapi: 3.0.1
info:
  title: Party Management
  description: >-
    TMF API Reference : TMF 632 - Party  Release: 22.5

    The party API provides standardized mechanism for party management such as creation, update,
    retrieval, deletion, and notification of events. Party can be an individual or an organization
    that has any kind of relation with the enterprise. Party is created to record individual or
    organization information before the assignment of any role.

    For example, within the context of a split billing mechanism, Party API allows creation of the
    individual or organization that will play the role of 3rd payer for a given offer and, then,
    allows consultation or update of his information.

    Resources - Party (abstract base class with concrete subclasses Individual and Organization)
    Party API performs the following operations: - Retrieve an organization or an individual -
    Retrieve a collection of organizations or individuals according to given criteria - Create a new
    organization or a new individual - Update an existing organization or an existing individual -
    Delete an existing organization or an existing individual - Notify events on organization or
    individual
  version: 5.0.0
servers:
  - url: 'https://serverRoot/partyManagement/v5/'
tags:
  - name: individual
    description: Operations for Individual Resource
  - name: organization
    description: Operations for Organization Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /hub:
    post:
      operationId: createHub
      summary: Create a subscription (hub) to receive Events
      description: Sets the communication endpoint to receive Events.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    delete:
      operationId: hubDelete
      summary: Remove a subscription (hub) to receive Events
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
  /individual:
    get:
      tags:
        - individual
      summary: List or find Individual objects
      description: List or find Individual objects
      operationId: listIndividual
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200IndividualArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - individual
      summary: Creates a Individual
      description: This operation creates a Individual entity.
      operationId: createIndividual
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/Individual_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201Individual'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/individual/{id}':
    get:
      tags:
        - individual
      summary: Retrieves a Individual by ID
      description: >-
        This operation retrieves a Individual entity. Attribute selection enabled for all first
        level attributes.
      operationId: retrieveIndividual
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200Individual_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - individual
      summary: Updates partially a Individual
      description: This operation updates partially a Individual entity.
      operationId: patchIndividual
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/Individual_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200Individual_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - individual
      summary: Deletes a Individual
      description: This operation deletes a Individual entity.
      operationId: deleteIndividual
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /listener/individualAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity IndividualAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        IndividualAttributeValueChangeEvent
      operationId: individualAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/IndividualAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/individualCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity IndividualCreateEvent
      description: Example of a client listener for receiving the notification IndividualCreateEvent
      operationId: individualCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/IndividualCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/individualDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity IndividualDeleteEvent
      description: Example of a client listener for receiving the notification IndividualDeleteEvent
      operationId: individualDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/IndividualDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/individualStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity IndividualStateChangeEvent
      description: Example of a client listener for receiving the notification IndividualStateChangeEvent
      operationId: individualStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/IndividualStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/organizationAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity OrganizationAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        OrganizationAttributeValueChangeEvent
      operationId: organizationAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/OrganizationAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/organizationCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity OrganizationCreateEvent
      description: Example of a client listener for receiving the notification OrganizationCreateEvent
      operationId: organizationCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/OrganizationCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/organizationDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity OrganizationDeleteEvent
      description: Example of a client listener for receiving the notification OrganizationDeleteEvent
      operationId: organizationDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/OrganizationDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/organizationStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity OrganizationStateChangeEvent
      description: Example of a client listener for receiving the notification OrganizationStateChangeEvent
      operationId: organizationStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/OrganizationStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /organization:
    get:
      tags:
        - organization
      summary: List or find Organization objects
      description: List or find Organization objects
      operationId: listOrganization
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200OrganizationArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - organization
      summary: Creates a Organization
      description: This operation creates a Organization entity.
      operationId: createOrganization
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/Organization_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201Organization'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/organization/{id}':
    get:
      tags:
        - organization
      summary: Retrieves a Organization by ID
      description: >-
        This operation retrieves a Organization entity. Attribute selection enabled for all first
        level attributes.
      operationId: retrieveOrganization
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200Organization_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - organization
      summary: Updates partially a Organization
      description: This operation updates partially a Organization entity.
      operationId: patchOrganization
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/Organization_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200Organization_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - organization
      summary: Deletes a Organization
      description: This operation deletes a Organization entity.
      operationId: deleteOrganization
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
components:
  schemas:
    AccountRef:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef'
    AccountRef_FVO:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef_FVO'
    AccountRef_MVO:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef_MVO'
    Addressable:
      type: object
      description: Base schema for adressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    Addressable_FVO:
      type: object
      description: Base schema for adressable entities
      properties:
        id:
          type: string
          description: unique identifier
    AgreementRef:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef'
    AgreementRef_FVO:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_FVO'
    AgreementRef_MVO:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_MVO'
    Attachment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_FVO'
        - $ref: '#/components/schemas/AttachmentRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_MVO'
        - $ref: '#/components/schemas/AttachmentRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    AttachmentRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    Attachment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
          required:
            - attachmentType
            - mimeType
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
    Attachment_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
    BaseEvent_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent_FVO'
    BaseEvent_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent_MVO'
    BooleanArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              items:
                type: boolean
    BooleanArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              items:
                type: boolean
          required:
            - value
    BooleanArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              items:
                type: boolean
          required:
            - value
    BooleanCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BooleanCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
          required:
            - value
    BooleanCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
          required:
            - value
    BusinessPartner:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    BusinessPartner_FVO:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    BusinessPartner_MVO:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
          StringCharacteristic: '#/components/schemas/StringCharacteristic'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic'
    CharacteristicRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
    CharacteristicRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
    CharacteristicRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_MVO'
    Characteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_FVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_FVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_FVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_FVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_FVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_FVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_FVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_FVO'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic_FVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_FVO'
    Characteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_MVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_MVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_MVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_MVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_MVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_MVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_MVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_MVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_MVO'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic_MVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_MVO'
    Consumer:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Consumer_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Consumer_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    ContactMedium:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Indicates the contact medium that could be used to contact the party.
          properties:
            id:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualifiy it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium'
          SocialContactMedium: '#/components/schemas/SocialContactMedium'
          PhoneContactMedium: '#/components/schemas/PhoneContactMedium'
          GeographicAddressContactMedium: '#/components/schemas/GeographicAddressContactMedium'
          FaxContactMedium: '#/components/schemas/FaxContactMedium'
          EmailContactMedium: '#/components/schemas/EmailContactMedium'
    ContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Indicates the contact medium that could be used to contact the party.
          properties:
            id:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualifiy it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_FVO'
          SocialContactMedium: '#/components/schemas/SocialContactMedium_FVO'
          PhoneContactMedium: '#/components/schemas/PhoneContactMedium_FVO'
          GeographicAddressContactMedium: '#/components/schemas/GeographicAddressContactMedium_FVO'
          FaxContactMedium: '#/components/schemas/FaxContactMedium_FVO'
          EmailContactMedium: '#/components/schemas/EmailContactMedium_FVO'
    ContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Indicates the contact medium that could be used to contact the party.
          properties:
            id:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualifiy it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_MVO'
          SocialContactMedium: '#/components/schemas/SocialContactMedium_MVO'
          PhoneContactMedium: '#/components/schemas/PhoneContactMedium_MVO'
          GeographicAddressContactMedium: '#/components/schemas/GeographicAddressContactMedium_MVO'
          FaxContactMedium: '#/components/schemas/FaxContactMedium_MVO'
          EmailContactMedium: '#/components/schemas/EmailContactMedium_MVO'
    CreditProfile:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile'
    CreditProfile_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile_FVO'
    CreditProfile_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile_MVO'
    Disability:
      type: object
      description: Lack or inadequate strength or ability.
      properties:
        disabilityCode:
          type: string
          description: Code of the disability
        disabilityName:
          type: string
          description: Name of the disability
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    EmailContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: >-
            Describes an email that could be used to contact a party (an individual or an
            organization)
          properties:
            emailAddress:
              type: string
              description: Full email address in standard format
    EmailContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_FVO'
        - type: object
          description: >-
            Describes an email that could be used to contact a party (an individual or an
            organization)
          properties:
            emailAddress:
              type: string
              description: Full email address in standard format
    EmailContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: >-
            Describes an email that could be used to contact a party (an individual or an
            organization)
          properties:
            emailAddress:
              type: string
              description: Full email address in standard format
    Entity:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
    EntityRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntityRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Addressable_FVO'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    Entity_FVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Addressable_FVO'
    Entity_MVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
    Event_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef_FVO'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef_FVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
          required:
            - eventId
            - eventTime
            - eventType
            - event
    Event_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
          required:
            - eventId
            - eventTime
            - eventType
            - event
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    Extensible_FVO:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
    ExternalIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_FVO'
    ExternalIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_MVO'
    FaxContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: Describes a fax that could be used to contact a party (an individual or an organization)
          properties:
            faxNumber:
              type: string
              description: The fax number of the contact
    FaxContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_FVO'
        - type: object
          description: Describes a fax that could be used to contact a party (an individual or an organization)
          properties:
            faxNumber:
              type: string
              description: The fax number of the contact
    FaxContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: Describes a fax that could be used to contact a party (an individual or an organization)
          properties:
            faxNumber:
              type: string
              description: The fax number of the contact
    FloatCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Float.
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
    FloatCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Float.
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
          required:
            - value
    FloatCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Float.
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
          required:
            - value
    GeographicAddressContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: >-
            Describes a geographical address that could be used to contact a party (an individual or
            an organization)
          properties:
            city:
              type: string
              description: The city
            country:
              type: string
              description: The country
            postCode:
              type: string
              description: Postcode
            stateOrProvince:
              type: string
              description: State or province
            street1:
              type: string
              description: Describes the street
            street2:
              type: string
              description: Complementary street description
            geographicAddress:
              $ref: '#/components/schemas/GeographicAddressRef'
    GeographicAddressContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_FVO'
        - type: object
          description: >-
            Describes a geographical address that could be used to contact a party (an individual or
            an organization)
          properties:
            city:
              type: string
              description: The city
            country:
              type: string
              description: The country
            postCode:
              type: string
              description: Postcode
            stateOrProvince:
              type: string
              description: State or province
            street1:
              type: string
              description: Describes the street
            street2:
              type: string
              description: Complementary street description
            geographicAddress:
              $ref: '#/components/schemas/GeographicAddressRef_FVO'
    GeographicAddressContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: >-
            Describes a geographical address that could be used to contact a party (an individual or
            an organization)
          properties:
            city:
              type: string
              description: The city
            country:
              type: string
              description: The country
            postCode:
              type: string
              description: Postcode
            stateOrProvince:
              type: string
              description: State or province
            street1:
              type: string
              description: Describes the street
            street2:
              type: string
              description: Complementary street description
            geographicAddress:
              $ref: '#/components/schemas/GeographicAddressRef_MVO'
    GeographicAddressRef:
      type: object
      description: Reference to a Geographic Address.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRef: '#/components/schemas/GeographicAddressRef'
    GeographicAddressRef_FVO:
      type: object
      description: Reference to a Geographic Address.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRef: '#/components/schemas/GeographicAddressRef_FVO'
    GeographicAddressRef_MVO:
      type: object
      description: Reference to a Geographic Address.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRef: '#/components/schemas/GeographicAddressRef_MVO'
    Individual:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    IndividualAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: IndividualAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/IndividualAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualAttributeValueChangeEvent: '#/components/schemas/IndividualAttributeValueChangeEvent'
    IndividualAttributeValueChangeEventPayload:
      type: object
      description: IndividualAttributeValueChangeEventPayload generic structure
      properties:
        individual:
          $ref: '#/components/schemas/Individual'
    IndividualCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: IndividualCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/IndividualCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualCreateEvent: '#/components/schemas/IndividualCreateEvent'
    IndividualCreateEventPayload:
      type: object
      description: IndividualCreateEventPayload generic structure
      properties:
        individual:
          $ref: '#/components/schemas/Individual'
    IndividualDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: IndividualDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/IndividualDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualDeleteEvent: '#/components/schemas/IndividualDeleteEvent'
    IndividualDeleteEventPayload:
      type: object
      description: IndividualDeleteEventPayload generic structure
      properties:
        individual:
          $ref: '#/components/schemas/Individual'
    IndividualIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification'
    IndividualIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_FVO'
    IndividualIdentification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_MVO'
    IndividualStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: IndividualStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/IndividualStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualStateChangeEvent: '#/components/schemas/IndividualStateChangeEvent'
    IndividualStateChangeEventPayload:
      type: object
      description: IndividualStateChangeEventPayload generic structure
      properties:
        individual:
          $ref: '#/components/schemas/Individual'
    IndividualStateType:
      enum:
        - initialized
        - validated
        - deceased
      type: string
      description: Valid values for the lifecycle state of the individual
    Individual_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification_FVO'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
          required:
            - givenName
            - familyName
    Individual_MVO:
      allOf:
        - $ref: '#/components/schemas/Party_MVO'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification_MVO'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    IntegerArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              items:
                type: integer
    IntegerArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              items:
                type: integer
          required:
            - value
    IntegerArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              items:
                type: integer
          required:
            - value
    IntegerCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
          required:
            - value
    IntegerCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
          required:
            - value
    LanguageAbility:
      type: object
      description: Ability of an individual to understand or converse in a language.
      properties:
        languageCode:
          type: string
          description: Language code (RFC 5646)
        languageName:
          type: string
          description: Language name
        isFavouriteLanguage:
          type: boolean
          description: >-
            A “true” value specifies whether the language is considered by the individual as his
            favourite one
        writingProficiency:
          type: string
          description: Writing proficiency evaluated for this language
        readingProficiency:
          type: string
          description: Reading proficiency evaluated for this language
        speakingProficiency:
          type: string
          description: Speaking proficiency evaluated for this language
        listeningProficiency:
          type: string
          description: Listening proficiency evaluated for this language
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    NumberArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              items:
                type: number
    NumberArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              items:
                type: number
          required:
            - value
    NumberArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              items:
                type: number
          required:
            - value
    NumberCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
          required:
            - value
    NumberCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
          required:
            - value
    ObjectArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              items:
                type: object
    ObjectArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              items:
                type: object
          required:
            - value
    ObjectArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              items:
                type: object
          required:
            - value
    ObjectCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
          required:
            - value
    ObjectCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
          required:
            - value
    Organization:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    OrganizationAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: OrganizationAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/OrganizationAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationAttributeValueChangeEvent: '#/components/schemas/OrganizationAttributeValueChangeEvent'
    OrganizationAttributeValueChangeEventPayload:
      type: object
      description: OrganizationAttributeValueChangeEventPayload generic structure
      properties:
        organization:
          $ref: '#/components/schemas/Organization'
    OrganizationChildRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship'
    OrganizationChildRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship_FVO'
    OrganizationChildRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship_MVO'
    OrganizationCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: OrganizationCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/OrganizationCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationCreateEvent: '#/components/schemas/OrganizationCreateEvent'
    OrganizationCreateEventPayload:
      type: object
      description: OrganizationCreateEventPayload generic structure
      properties:
        organization:
          $ref: '#/components/schemas/Organization'
    OrganizationDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: OrganizationDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/OrganizationDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationDeleteEvent: '#/components/schemas/OrganizationDeleteEvent'
    OrganizationDeleteEventPayload:
      type: object
      description: OrganizationDeleteEventPayload generic structure
      properties:
        organization:
          $ref: '#/components/schemas/Organization'
    OrganizationIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification'
    OrganizationIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_FVO'
    OrganizationIdentification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_MVO'
    OrganizationParentRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship'
    OrganizationParentRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship_FVO'
    OrganizationParentRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship_MVO'
    OrganizationRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef'
    OrganizationRef_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef_FVO'
    OrganizationRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef_MVO'
    OrganizationStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: OrganizationStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/OrganizationStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationStateChangeEvent: '#/components/schemas/OrganizationStateChangeEvent'
    OrganizationStateChangeEventPayload:
      type: object
      description: OrganizationStateChangeEventPayload generic structure
      properties:
        organization:
          $ref: '#/components/schemas/Organization'
    OrganizationStateType:
      enum:
        - initialized
        - validated
        - closed
      type: string
      description: Valid values for the lifecycle state of the organization
    Organization_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization_FVO'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification_FVO'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship_FVO'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship_FVO'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
          required:
            - name
    Organization_MVO:
      allOf:
        - $ref: '#/components/schemas/Party_MVO'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization_MVO'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification_MVO'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship_MVO'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship_MVO'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    OtherNameIndividual:
      type: object
      description: >-
        Keeps track of other names, for example the old name of a woman before marriage or an artist
        name.
      properties:
        title:
          type: string
          description: 'Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,....'
        aristocraticTitle:
          type: string
          description: 'e.g. Baron, Graf, Earl, etc.'
        generation:
          type: string
          description: 'e.g. Sr, Jr, etc.'
        givenName:
          type: string
          description: First name
        preferredGivenName:
          type: string
          description: >-
            Contains the chosen name by which the person prefers to be addressed. Note: This name
            may be a name other than a given name, such as a nickname
        familyNamePrefix:
          type: string
          description: Family name prefix
        familyName:
          type: string
          description: >-
            Contains the non-chosen or inherited name. Also known as last name in the Western
            context
        legalName:
          type: string
          description: Legal name or birth name (name one has for official purposes)
        middleName:
          type: string
          description: Middle name or initial
        fullName:
          type: string
          description: 'Full name flatten (first, middle, and last names)'
        formattedName:
          type: string
          description: >-
            . A fully formatted name in one string with all of its pieces in their proper place and
            all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese,
            Korean, etc.)
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    OtherNameOrganization:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Keeps track of other names, for example the old name of an organization.'
          properties:
            tradingName:
              type: string
              description: The name that the organization trades under
            nameType:
              type: string
              description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
            name:
              type: string
              description: Organization name (department name for example)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization'
    OtherNameOrganization_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: 'Keeps track of other names, for example the old name of an organization.'
          properties:
            tradingName:
              type: string
              description: The name that the organization trades under
            nameType:
              type: string
              description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
            name:
              type: string
              description: Organization name (department name for example)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization_FVO'
    OtherNameOrganization_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Keeps track of other names, for example the old name of an organization.'
          properties:
            tradingName:
              type: string
              description: The name that the organization trades under
            nameType:
              type: string
              description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
            name:
              type: string
              description: Organization name (department name for example)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization_MVO'
    Party:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party'
          Organization: '#/components/schemas/Organization'
          Individual: '#/components/schemas/Individual'
    PartyCreditProfile:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An individual might be evaluated for its worthiness and this evaluation might be based
            on a credit rating given by a credit agency.
          properties:
            creditAgencyName:
              type: string
              description: Name of the credit agency giving the score
            creditAgencyType:
              type: string
              description: Type of the credit agency giving the score
            ratingReference:
              type: string
              description: Reference corresponding to the credit rating
            ratingScore:
              type: integer
              format: int32
              description: >-
                A measure of a party's creditworthiness calculated on the basis of a combination of
                factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile'
    PartyCreditProfile_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            An individual might be evaluated for its worthiness and this evaluation might be based
            on a credit rating given by a credit agency.
          properties:
            creditAgencyName:
              type: string
              description: Name of the credit agency giving the score
            creditAgencyType:
              type: string
              description: Type of the credit agency giving the score
            ratingReference:
              type: string
              description: Reference corresponding to the credit rating
            ratingScore:
              type: integer
              format: int32
              description: >-
                A measure of a party's creditworthiness calculated on the basis of a combination of
                factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile_FVO'
    PartyCreditProfile_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            An individual might be evaluated for its worthiness and this evaluation might be based
            on a credit rating given by a credit agency.
          properties:
            creditAgencyName:
              type: string
              description: Name of the credit agency giving the score
            creditAgencyType:
              type: string
              description: Type of the credit agency giving the score
            ratingReference:
              type: string
              description: Reference corresponding to the credit rating
            ratingScore:
              type: integer
              format: int32
              description: >-
                A measure of a party's creditworthiness calculated on the basis of a combination of
                factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile_MVO'
    PartyOrPartyRole:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
        - $ref: '#/components/schemas/Individual'
        - $ref: '#/components/schemas/Organization'
        - $ref: '#/components/schemas/PartyRole'
        - $ref: '#/components/schemas/Supplier'
        - $ref: '#/components/schemas/BusinessPartner'
        - $ref: '#/components/schemas/Consumer'
        - $ref: '#/components/schemas/Producer'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
          Individual: '#/components/schemas/Individual'
          Organization: '#/components/schemas/Organization'
          PartyRole: '#/components/schemas/PartyRole'
          Supplier: '#/components/schemas/Supplier'
          BusinessPartner: '#/components/schemas/BusinessPartner'
          Consumer: '#/components/schemas/Consumer'
          Producer: '#/components/schemas/Producer'
    PartyOrPartyRole_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_FVO'
        - $ref: '#/components/schemas/PartyRoleRef_FVO'
        - $ref: '#/components/schemas/Individual_FVO'
        - $ref: '#/components/schemas/Organization_FVO'
        - $ref: '#/components/schemas/PartyRole_FVO'
        - $ref: '#/components/schemas/Supplier_FVO'
        - $ref: '#/components/schemas/BusinessPartner_FVO'
        - $ref: '#/components/schemas/Consumer_FVO'
        - $ref: '#/components/schemas/Producer_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
          Individual: '#/components/schemas/Individual_FVO'
          Organization: '#/components/schemas/Organization_FVO'
          PartyRole: '#/components/schemas/PartyRole_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          Producer: '#/components/schemas/Producer_FVO'
    PartyOrPartyRole_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
        - $ref: '#/components/schemas/Individual_MVO'
        - $ref: '#/components/schemas/Organization_MVO'
        - $ref: '#/components/schemas/PartyRole_MVO'
        - $ref: '#/components/schemas/Supplier_MVO'
        - $ref: '#/components/schemas/BusinessPartner_MVO'
        - $ref: '#/components/schemas/Consumer_MVO'
        - $ref: '#/components/schemas/Producer_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
          Individual: '#/components/schemas/Individual_MVO'
          Organization: '#/components/schemas/Organization_MVO'
          PartyRole: '#/components/schemas/PartyRole_MVO'
          Supplier: '#/components/schemas/Supplier_MVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_MVO'
          Consumer: '#/components/schemas/Consumer_MVO'
          Producer: '#/components/schemas/Producer_MVO'
    PartyRef:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
    PartyRefOrPartyRoleRef:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRef_FVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
    PartyRef_MVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
    PartyRole:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: Describes the characteristic of a party role.
            account:
              type: array
              items:
                $ref: '#/components/schemas/AccountRef'
            agreement:
              type: array
              items:
                $ref: '#/components/schemas/AgreementRef'
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium'
            paymentMethod:
              type: array
              items:
                $ref: '#/components/schemas/PaymentMethodRef'
            creditProfile:
              type: array
              items:
                $ref: '#/components/schemas/CreditProfile'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole'
          Supplier: '#/components/schemas/Supplier'
          Producer: '#/components/schemas/Producer'
          Consumer: '#/components/schemas/Consumer'
          BusinessPartner: '#/components/schemas/BusinessPartner'
    PartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRoleSpecificationRef:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef'
    PartyRoleSpecificationRef_FVO:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef_FVO'
    PartyRoleSpecificationRef_MVO:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef_MVO'
    PartyRole_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef_FVO'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef_FVO'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: Describes the characteristic of a party role.
            account:
              type: array
              items:
                $ref: '#/components/schemas/AccountRef_FVO'
            agreement:
              type: array
              items:
                $ref: '#/components/schemas/AgreementRef_FVO'
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_FVO'
            paymentMethod:
              type: array
              items:
                $ref: '#/components/schemas/PaymentMethodRef_FVO'
            creditProfile:
              type: array
              items:
                $ref: '#/components/schemas/CreditProfile_FVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - name
            - engagedParty
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
          Producer: '#/components/schemas/Producer_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
    PartyRole_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef_MVO'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef_MVO'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
              description: Describes the characteristic of a party role.
            account:
              type: array
              items:
                $ref: '#/components/schemas/AccountRef_MVO'
            agreement:
              type: array
              items:
                $ref: '#/components/schemas/AgreementRef_MVO'
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
            paymentMethod:
              type: array
              items:
                $ref: '#/components/schemas/PaymentMethodRef_MVO'
            creditProfile:
              type: array
              items:
                $ref: '#/components/schemas/CreditProfile_MVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - name
            - engagedParty
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole_MVO'
          Supplier: '#/components/schemas/Supplier_MVO'
          Producer: '#/components/schemas/Producer_MVO'
          Consumer: '#/components/schemas/Consumer_MVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_MVO'
    Party_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate_FVO'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile_FVO'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_FVO'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party_FVO'
          Organization: '#/components/schemas/Organization_FVO'
          Individual: '#/components/schemas/Individual_FVO'
    Party_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate_MVO'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile_MVO'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party_MVO'
          Organization: '#/components/schemas/Organization_MVO'
          Individual: '#/components/schemas/Individual_MVO'
    PaymentMethodRef:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef'
    PaymentMethodRef_FVO:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_FVO'
    PaymentMethodRef_MVO:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_MVO'
    PhoneContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: >-
            Describes a phone number that could be used to contact a party (an individual or an
            organization)
          properties:
            phoneNumber:
              type: string
              description: The phone number of the contact
    PhoneContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_FVO'
        - type: object
          description: >-
            Describes a phone number that could be used to contact a party (an individual or an
            organization)
          properties:
            phoneNumber:
              type: string
              description: The phone number of the contact
    PhoneContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: >-
            Describes a phone number that could be used to contact a party (an individual or an
            organization)
          properties:
            phoneNumber:
              type: string
              description: The phone number of the contact
    Producer:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Producer_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Producer_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    ProductRelationshipType:
      enum:
        - migratesTo
        - bundles
        - bundledBy
        - reliesOn
        - enables
        - requires
        - dependsOn
        - brings
      type: string
      description: >-
        Possible values for product relationship - This is informative information and
        implementation are free to use distinct.
    Quantity:
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          default: 1
          description: Numeric value in a given unit
        units:
          type: string
          description: Unit
    RelatedPartyOrPartyRole:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole'
    RelatedPartyOrPartyRole_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole_FVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
    RelatedPartyOrPartyRole_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole_MVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
    RelatedPartyRefOrPartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
    RelatedPartyRefOrPartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
    RelatedPartyRefOrPartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
    Skill:
      type: object
      description: >-
        Skills evaluated for an individual with a level and possibly with a limited validity when an
        obsolescence is defined (Ex: the first-aid certificate first level is limited to one year
        and an update training is required each year to keep the level).
      properties:
        skillCode:
          type: string
          description: Code of the skill
        skillName:
          type: string
          description: 'Name of the skill, such as Java language'
        evaluatedLevel:
          type: string
          description: Level of expertise in a skill evaluated for an individual
        comment:
          type: string
          description: A free text comment linked to the evaluation done
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    SocialContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: >-
            Describes a social media identifier that could be used to contact a party (an individual
            or an organization)
          properties:
            socialNetworkId:
              type: string
              description: Identifier as a member of a social network
    SocialContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_FVO'
        - type: object
          description: >-
            Describes a social media identifier that could be used to contact a party (an individual
            or an organization)
          properties:
            socialNetworkId:
              type: string
              description: Identifier as a member of a social network
    SocialContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: >-
            Describes a social media identifier that could be used to contact a party (an individual
            or an organization)
          properties:
            socialNetworkId:
              type: string
              description: Identifier as a member of a social network
    StringArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              items:
                type: string
    StringArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              items:
                type: string
          required:
            - value
    StringArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              items:
                type: string
          required:
            - value
    StringCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
          required:
            - value
    StringCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
          required:
            - value
    Supplier:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Supplier_FVO:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Supplier_MVO:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    TaxDefinition:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For
            example, there are many different types of tax (Federal Tax levied by the US Government,
            State Tax levied by the State of California, City Tax levied by the City of Los Angeles,
            etc.).
          properties:
            id:
              type: string
              description: Unique identifier of the tax.
            name:
              type: string
              description: Tax name.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            jurisdictionName:
              type: string
              description: Name of the jurisdiction that levies the tax
              example: USA
            jurisdictionLevel:
              type: string
              description: Level of the jurisdiction that levies the tax
              example: Country
            taxType:
              type: string
              description: Type of the tax.
              example: VAT
      discriminator:
        propertyName: '@type'
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition'
    TaxDefinition_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For
            example, there are many different types of tax (Federal Tax levied by the US Government,
            State Tax levied by the State of California, City Tax levied by the City of Los Angeles,
            etc.).
          properties:
            id:
              type: string
              description: Unique identifier of the tax.
            name:
              type: string
              description: Tax name.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            jurisdictionName:
              type: string
              description: Name of the jurisdiction that levies the tax
              example: USA
            jurisdictionLevel:
              type: string
              description: Level of the jurisdiction that levies the tax
              example: Country
            taxType:
              type: string
              description: Type of the tax.
              example: VAT
      discriminator:
        propertyName: '@type'
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition_FVO'
    TaxDefinition_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For
            example, there are many different types of tax (Federal Tax levied by the US Government,
            State Tax levied by the State of California, City Tax levied by the City of Los Angeles,
            etc.).
          properties:
            id:
              type: string
              description: Unique identifier of the tax.
            name:
              type: string
              description: Tax name.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            jurisdictionName:
              type: string
              description: Name of the jurisdiction that levies the tax
              example: USA
            jurisdictionLevel:
              type: string
              description: Level of the jurisdiction that levies the tax
              example: Country
            taxType:
              type: string
              description: Type of the tax.
              example: VAT
      discriminator:
        propertyName: '@type'
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition_MVO'
    TaxExemptionCertificate:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate'
    TaxExemptionCertificate_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition_FVO'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate_FVO'
    TaxExemptionCertificate_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition_MVO'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate_MVO'
    TimePeriod:
      type: object
      description: 'A period of time, either as a deadline (endDateTime only) a startDateTime only, or both'
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    Hub_FVO:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - callback
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - properties:
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
    Hub:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      allOf:
        - $ref: '#/components/schemas/Entity'
        - properties:
            id:
              type: string
              description: Id of the listener
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
          required:
            - callback
    JsonPatch:
      type: object
      description: A JSONPatch document as defined by RFC 6902
      required:
        - op
        - path
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON-Pointer
        value:
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    JsonPatchOperations:
      description: JSONPatch Operations document as defined by RFC 6902
      type: array
      items:
        $ref: '#/components/schemas/JsonPatch'
  parameters:
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Resource
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      schema:
        type: integer
  requestBodies:
    Individual_FVO:
      description: The Individual to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Individual_FVO'
          examples:
            Individual_create_example:
              $ref: '#/components/examples/Individual_create_example_request'
      required: true
    Individual_MVO:
      description: The Individual to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Individual_MVO'
          examples:
            Individual_update_example_Implicit_Merge:
              $ref: '#/components/examples/Individual_update_example_Implicit_Merge_request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/Individual_MVO'
          examples:
            Individual_update_example_Patch_Merge:
              $ref: '#/components/examples/Individual_update_example_Patch_Merge_request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            Individual_update_example_JSON_Patch:
              $ref: '#/components/examples/Individual_update_example_JSON_Patch_request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            Individual_update_example_JSON_Patch_Query:
              $ref: '#/components/examples/Individual_update_example_JSON_Patch_Query_request'
      required: true
    IndividualCreateEvent:
      description: Individual create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndividualCreateEvent'
          examples:
            IndividualCreateEvent:
              $ref: '#/components/examples/IndividualCreateEvent_request'
      required: true
    IndividualAttributeValueChangeEvent:
      description: Individual attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndividualAttributeValueChangeEvent'
          examples:
            IndividualAttributeValueChangeEvent:
              $ref: '#/components/examples/IndividualAttributeValueChangeEvent_request'
      required: true
    IndividualStateChangeEvent:
      description: Individual stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndividualStateChangeEvent'
          examples:
            IndividualStateChangeEvent:
              $ref: '#/components/examples/IndividualStateChangeEvent_request'
      required: true
    IndividualDeleteEvent:
      description: Individual delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndividualDeleteEvent'
          examples:
            IndividualDeleteEvent:
              $ref: '#/components/examples/IndividualDeleteEvent_request'
      required: true
    Organization_FVO:
      description: The Organization to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Organization_FVO'
          examples:
            Organization_create_example:
              $ref: '#/components/examples/Organization_create_example_request'
      required: true
    Organization_MVO:
      description: The Organization to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Organization_MVO'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/Organization_MVO'
          examples:
            Organization_update_example_Patch_Merge:
              $ref: '#/components/examples/Organization_update_example_Patch_Merge_request'
            Organization_update_example_Implicit_Merge:
              $ref: '#/components/examples/Organization_update_example_Implicit_Merge_request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            Organization_update_example_JSON_Patch:
              $ref: '#/components/examples/Organization_update_example_JSON_Patch_request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            Organization_update_example_JSON_Patch_Query:
              $ref: '#/components/examples/Organization_update_example_JSON_Patch_Query_request'
      required: true
    OrganizationCreateEvent:
      description: Organization create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganizationCreateEvent'
          examples:
            OrganizationCreateEvent:
              $ref: '#/components/examples/OrganizationCreateEvent_request'
      required: true
    OrganizationAttributeValueChangeEvent:
      description: Organization attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganizationAttributeValueChangeEvent'
          examples:
            OrganizationAttributeValueChangeEvent:
              $ref: '#/components/examples/OrganizationAttributeValueChangeEvent_request'
      required: true
    OrganizationStateChangeEvent:
      description: Organization stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganizationStateChangeEvent'
          examples:
            OrganizationStateChangeEvent:
              $ref: '#/components/examples/OrganizationStateChangeEvent_request'
      required: true
    OrganizationDeleteEvent:
      description: Organization delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganizationDeleteEvent'
          examples:
            OrganizationDeleteEvent:
              $ref: '#/components/examples/OrganizationDeleteEvent_request'
      required: true
    Hub_FVO:
      description: Data containing the callback endpoint to deliver the information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
      required: true
  responses:
    '200':
      description: OK
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    200IndividualArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Individual'
          examples:
            Individual_list_example:
              $ref: '#/components/examples/Individual_list_example_response'
    200Individual_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Individual'
          examples:
            Individual_retrieve_example:
              $ref: '#/components/examples/Individual_retrieve_example_response'
    200Individual_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Individual'
          examples:
            Individual_update_example_Implicit_Merge:
              $ref: '#/components/examples/Individual_update_example_Implicit_Merge_response'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/Individual'
          examples:
            Individual_update_example_Patch_Merge:
              $ref: '#/components/examples/Individual_update_example_Patch_Merge_response'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/Individual'
              - type: array
                items:
                  $ref: '#/components/schemas/Individual'
              - type: string
                nullable: true
          examples:
            Individual_update_example_JSON_Patch:
              $ref: '#/components/examples/Individual_update_example_JSON_Patch_response'
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/Individual'
              - type: array
                items:
                  $ref: '#/components/schemas/Individual'
              - type: string
                nullable: true
          examples:
            Individual_update_example_JSON_Patch_Query:
              $ref: '#/components/examples/Individual_update_example_JSON_Patch_Query_response'
    201Individual:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Individual'
          examples:
            Individual_create_example:
              $ref: '#/components/examples/Individual_create_example_response'
    200OrganizationArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Organization'
          examples:
            Organization_list_example:
              $ref: '#/components/examples/Organization_list_example_response'
    200Organization_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Organization'
          examples:
            Organization_retrieve_example:
              $ref: '#/components/examples/Organization_retrieve_example_response'
    200Organization_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Organization'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/Organization'
          examples:
            Organization_update_example_Patch_Merge:
              $ref: '#/components/examples/Organization_update_example_Patch_Merge_response'
            Organization_update_example_Implicit_Merge:
              $ref: '#/components/examples/Organization_update_example_Implicit_Merge_response'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/Organization'
              - type: array
                items:
                  $ref: '#/components/schemas/Organization'
              - type: string
                nullable: true
          examples:
            Organization_update_example_JSON_Patch:
              $ref: '#/components/examples/Organization_update_example_JSON_Patch_response'
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/Organization'
              - type: array
                items:
                  $ref: '#/components/schemas/Organization'
              - type: string
                nullable: true
          examples:
            Organization_update_example_JSON_Patch_Query:
              $ref: '#/components/examples/Organization_update_example_JSON_Patch_Query_response'
    201Organization:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Organization'
          examples:
            Organization_create_example:
              $ref: '#/components/examples/Organization_create_example_response'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Hub:
      description: Notified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      schema:
        type: integer
    X-Result-Count:
      description: Actual number of items returned in the response body
      schema:
        type: integer
  securitySchemes: {}
  examples:
    Individual_list_example_response:
      value:
        - id: '42'
          href: 'https://serverRoot/tmf-api/party/v5/individual/42'
          '@type': Individual
          '@baseType': Party
          givenName: Jane
          familyName: Lamborgizzia
        - id: '52'
          href: 'https://serverRoot/tmf-api/party/v5/individual/52'
          '@type': Individual
          '@baseType': Party
          givenName: Paul
          familyName: Newman
      description: Here is an example of a response for retrieving multiple Individuals.
    Individual_retrieve_example_response:
      value:
        id: '42'
        href: 'https://serverRoot/tmf-api/party/v5/individual/42'
        '@type': Individual
        '@baseType': Party
        gender: female
        countryOfBirth: United States
        nationality: American
        maritalStatus: married
        birthDate: '1967-09-26T05:00:00.246Z'
        givenName: Jane
        preferredGivenName: Lamborgizzia
        familyName: Lamborgizzia
        legalName: Smith
        middleName: JL
        fullName: Jane Smith ep Lamborgizzia
        formattedName: Jane Smith ep Lamborgizzia
        status: validated
        externalReference:
          - name: 'http://facebook.com/17263635'
            externalIdentifierType: facebookId
            '@type': ExternalIdentifier
          - name: 'http://google.com/17263635'
            externalIdentifierType: googleId
            '@type': ExternalIdentifier
        partyCharacteristic:
          - name: hobby
            value:
              - Modern Jazz
              - Cinema
            valueType: array
            '@type': StringArrayCharacteristic
        otherName:
          - '@type': OtherNameIndividual
            givenName: Jane
            familyName: Smith
            validFor:
              startDateTime: '1967-09-26T00:00:00.246Z'
              endDateTime: '2015-06-15T00:00:00.246Z'
        individualIdentification:
          - '@type': IndividualIdentification
            identificationType: passport
            identificationId: 51DD1234
            issuingAuthority: US Government
            issuingDate: '2017-10-22T07:49:25.246Z'
            validFor:
              startDateTime: '2017-10-22T07:49:25.246Z'
              endDateTime: '2027-10-21T07:49:25.246Z'
            attachment:
              '@type': Attachment
              id: '6662326757667'
              href: 'https://serverRoot/tmf-api/document/v5/attachment/6662326757667'
              attachmentType: passportCopy
              name: PassportCopy321.pdf
              description: Scanned copy of the passport
              mimeType: application/pdf
              url: 'http://DocumentManager/321/PassportCopy321.pdf'
        taxExemptionCertificate:
          - '@type': TaxExemptionCertificate
            id: '1'
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
            certificateNumber: '98765432345'
            issuingJurisdiction: USA
            taxDefinition:
              - '@type': TaxDefinitionRef
                id: '96'
                name: Value Added Tax
                taxType: federalVat
            attachment:
              '@type': Attachment
              id: '5565734535'
              href: 'https://serverRoot/tmf-api/document/v5/attachment/5565734535'
              attachmentType: taxExemptionCertificate
              name: TaxExemptionCertificate-566655.pdf
              description: Electronic version of the tax exemption certificate
              mimeType: application/pdf
              url: 'https://mycsp.com:8080/DocumentManager/666/TaxExemptionCertificate-566655.pdf'
        creditRating:
          - '@type': CreditRating
            creditAgencyName: Experian
            creditAgencyType: externalAgency
            ratingReference: ref123
            ratingScore: 680
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
        relatedParty:
          - role: employer
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '128'
              href: 'https://serverRoot/tmf-api/party/v5/organization/128'
              name: Coffee Do Brazil Fair Trade Marketing Department
              '@type': PartyRef
              '@referredType': Organization
        contactMedium:
          - preferred: true
            mediumType: email
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
            '@type': EmailContactMedium
            emailAddress: jane.lamborgizzia@gmail.com
          - preferred: false
            mediumType: postalAddress
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
            '@type': GeographicAddressContactMedium
            city: Morristown
            country: USA
            postCode: 07960
            stateOrProvince: New Jersey
            street1: 240 Headquarters Plazza
            street2: East Tower - 10th Floor
        disability:
          - disabilityCode: BLD
            disabilityName: Blind
            validFor:
              startDateTime: '1967-09-26T07:49:25.246Z'
        languageAbility:
          - languageCode: FR
            languageName: French
            isFavouriteLanguage: true
            writingProficiency: advanced
            readingProficiency: advanced
            speakingProficiency: intermediate
            listeningProficiency: intermediate
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
          - languageCode: SP
            languageName: Spanish
            isFavouriteLanguage: false
            writingProficiency: scholar
            readingProficiency: scholar
            speakingProficiency: scholar
            listeningProficiency: scholar
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
        skill:
          - skillCode: SK001
            skillName: marketing
            evaluatedLevel: Advanced
            comment: Ten years experience
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
          - skillCode: SK002
            skillName: Project Management
            evaluatedLevel: newbie
            comment: First work experience
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
      description: Here is an example of a response for retrieving a specific Individual.
    Organization_list_example_response:
      value:
        - id: '128'
          href: 'https://serverRoot/tmf-api/party/v5/organization/128'
          '@type': Organization
          '@baseType': Party
          name: Coffee Do Brazil Fair Trade
        - id: '1882'
          href: 'https://serverRoot/tmf-api/party/v5/organization/1882'
          '@type': Organization
          '@baseType': Party
          name: Joe's Pizza
      description: Here is an example of a response for retrieving multiple Organizations.
    Organization_retrieve_example_response:
      value:
        id: '128'
        href: 'https://serverRoot/tmf-api/party/v5/organization/128'
        '@type': Organization
        '@baseType': Party
        isLegalEntity: true
        isHeadOffice: true
        organizationType: company
        existsDuring:
          startDateTime: '2015-10-22T08:31:52.026Z'
        name: Coffee Do Brazil
        tradingName: Coffee Do Brazil Fair Trade
        nameType: inc
        status: validated
        externalReference:
          - name: 'http://coffeedobrazil.com'
            externalIdentifierType: internetSite
            '@type': ExternalIdentifier
        partyCharacteristic:
          - name: number of employees
            value: 125
            valueType: number
            '@type': IntegerCharacteristic
          - name: market segment
            value: Food wholesale
            valueType: string
            '@type': StringCharacteristic
        otherName:
          - '@type': OtherNameOrganization
            nameType: inc
            tradingName: General Coffee
            validFor:
              startDateTime: '2015-10-22T08:31:52.026Z'
              endDateTime: '2017-10-22T08:31:52.026Z'
        organizationIdentification:
          - '@type': OrganizationIdentification
            identificationType: commercialRegistration
            identificationId: '12345678'
            issuingAuthority: US Government
            issuingDate: '2015-10-22T08:31:52.028Z'
            validFor:
              startDateTime: '2015-10-22T08:31:52.028Z'
            attachment:
              '@type': Attachment
              attachmentType: documentCopy
              name: RegistrationCertificate421.pdf
              description: Scanned copy of the registration certificate
              mimeType: application/pdf
              url: 'http://DocumentManager/421/RegistrationCertificate421.pdf'
        taxExemptionCertificate:
          - '@type': TaxExemptionCertificate
            id: '1'
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
            certificateNumber: '9875755432345'
            issuingJurisdiction: USA
            reason: Voluntary Body
            taxDefinition:
              - '@type': TaxDefinitionRef
                id: '96'
                name: Value Added Tax
                taxType: federalVat
            attachment:
              '@type': Attachment
              attachmentType: taxExemptionCertificate
              name: TaxExemptionCertificate-233322.pdf
              description: Electronic version of the tax exemption certificate
              mimeType: application/pdf
              url: 'https://mycsp.com:8080/DocumentManager/666/TaxExemptionCertificate-233322.pdf'
        creditRating:
          - '@type': CreditRating
            creditAgencyName: Experian
            creditAgencyType: externalAgency
            ratingReference: ref456
            ratingScore: 400
            validFor:
              startDateTime: '2018-10-22T08:31:52.028Z'
        relatedParty:
          - role: director
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '54'
              href: 'https://serverRoot/tmf-api/party/v5/individual/54'
              name: Carlos Mafalda
              '@type': PartyRef
              '@referredType': Individual
          - role: employee
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '42'
              href: 'https://serverRoot/tmf-api/party/v5/individual/42'
              name: Jane Lamborgizzia
              '@type': PartyRef
              '@referredType': Individual
        contactMedium:
          - preferred: true
            mediumType: email
            validFor:
              startDateTime: '2018-10-22T08:31:52.028Z'
            '@type': EmailContactMedium
            emailAddress: jane.lamborgizzia@coffeedobrazil.com
          - preferred: false
            mediumType: postalAddress
            validFor:
              startDateTime: '2018-10-22T08:31:52.028Z'
            '@type': GeographicAddressContactMedium
            city: Morristown
            country: USA
            postCode: 07960
            stateOrProvince: New Jersey
            street1: 240 Headquarters Plazza
            street2: East Tower 10th Floor
        organizationParentRelationship:
          '@type': OrganizationParentRelationship
          relationshipType: juridical
          organization:
            '@type': OrganizationRef
            id: '800'
            href: 'https://serverRoot/tmf-api/party/v5/organization/800'
        organizationChildRelationship:
          - '@type': OrganizationChildRelationship
            relationshipType: juridical
            organization:
              '@type': OrganizationRef
              id: '149'
              href: 'https://serverRoot/tmf-api/party/v5/organization/149'
          - '@type': OrganizationChildRelationship
            relationshipType: juridical
            organization:
              '@type': OrganizationRef
              id: '150'
              href: 'https://serverRoot/tmf-api/party/v5/organization/150'
      description: Here is an example of a response for retrieving a specific Organization.
    Individual_create_example_request:
      value:
        '@type': Individual
        '@baseType': Party
        givenName: Jane
        familyName: Lamborgizzia
      description: Here is an example of a request for creating an Individual.
    Individual_create_example_response:
      value:
        id: '42'
        href: 'https://serverRoot/tmf-api/party/v5/individual/42'
        '@type': Individual
        '@baseType': Party
        givenName: Jane
        familyName: Lamborgizzia
        status: initialized
      description: Here is an example of a response for creating an Individual.
    Organization_create_example_request:
      value:
        '@type': Organization
        '@baseType': Party
        name: Coffee Do Brazil
      description: Here is an example of a request for creating an Organization.
    Organization_create_example_response:
      value:
        id: '128'
        href: 'https://serverRoot/tmf-api/party/v5/organization/128'
        '@type': Organization
        '@baseType': Party
        name: Coffee Do Brazil
        status: initialized
      description: Here is an example of a response for creating an Organization.
    Individual_update_example_Patch_Merge_request:
      value:
        '@type': Individual
        maritalStatus: divorced
      description: Here is an example of a request for updating an Individual with patch merge
    Individual_update_example_Patch_Merge_response:
      value:
        id: '42'
        href: 'https://serverRoot/tmf-api/party/v5/individual/42'
        '@type': Individual
        '@baseType': Party
        gender: female
        countryOfBirth: United States
        nationality: American
        maritalStatus: divorced
        birthDate: '1967-09-26T05:00:00.246Z'
        givenName: Jane
        preferredGivenName: Lamborgizzia
        familyName: Lamborgizzia
        legalName: Smith
        middleName: JL
        fullName: Jane Smith ep Lamborgizzia
        formattedName: Jane Smith ep Lamborgizzia
        status: validated
        externalReference:
          - name: 'http://facebook.com/17263635'
            externalIdentifierType: facebookId
            '@type': ExternalIdentifier
          - name: 'http://google.com/17263635'
            externalIdentifierType: googleId
            '@type': ExternalIdentifier
        partyCharacteristic:
          - name: hobby
            value:
              - Modern Jazz
              - Cinema
            valueType: array
            '@type': StringArrayCharacteristic
          - name: childrenNumber
            value: 1
            valueType: number
            '@type': IntegerCharacteristic
        otherName:
          - '@type': OtherNameIndividual
            givenName: Jane
            familyName: Smith
            validFor:
              startDateTime: '1967-09-26T00:00:00.246Z'
              endDateTime: '2015-06-15T00:00:00.246Z'
        individualIdentification:
          - '@type': IndividualIdentification
            identificationType: passport
            identificationId: 51DD1234
            issuingAuthority: US Government
            issuingDate: '2017-10-22T07:49:25.246Z'
            validFor:
              startDateTime: '2017-10-22T07:49:25.246Z'
              endDateTime: '2027-10-21T07:49:25.246Z'
            attachment:
              '@type': Attachment
              attachmentType: passportCopy
              name: PassportCopy321.pdf
              description: Scanned copy of the passport
              mimeType: application/pdf
              url: 'http://DocumentManager/321/PassportCopy321.pdf'
        taxExemptionCertificate:
          - '@type': TaxExemptionCertificate
            id: '1'
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
            certificateNumber: '98765432345'
            issuingJurisdiction: USA
            taxDefinition:
              - '@type': TaxDefinitionRef
                id: '96'
                name: Value Added Tax
                taxType: federalVat
            attachment:
              '@type': Attachment
              attachmentType: taxExemptionCertificate
              name: TaxExemptionCertificate-566655.pdf
              description: Electronic version of the tax exemption certificate
              mimeType: application/pdf
              url: 'https://mycsp.com:8080/DocumentManager/666/TaxExemptionCertificate-566655.pdf'
        creditRating:
          - '@type': CreditRating
            creditAgencyName: Experian
            creditAgencyType: externalAgency
            ratingReference: ref123
            ratingScore: 680
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
        relatedParty:
          - role: employer
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '128'
              href: 'https://serverRoot/tmf-api/party/v5/organization/128'
              name: Coffee Do Brazil Fair Trade Marketing Department
              '@type': PartyRef
              '@referredType': Organization
        contactMedium:
          - preferred: true
            mediumType: email
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
            '@type': EmailContactMedium
            emailAddress: jane.lamborgizzia@gmail.com
          - preferred: false
            mediumType: postalAddress
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
            '@type': GeographicAddressContactMedium
            city: Morristown
            country: USA
            postCode: 07960
            stateOrProvince: New Jersey
            street1: 240 Headquarters Plazza
            street2: East Tower - 10th Floor
        disability:
          - disabilityCode: BLD
            disabilityName: Blind
            validFor:
              startDateTime: '1967-09-26T07:49:25.246Z'
        languageAbility:
          - languageCode: FR
            languageName: French
            isFavouriteLanguage: true
            writingProficiency: advanced
            readingProficiency: advanced
            speakingProficiency: intermediate
            listeningProficiency: intermediate
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
          - languageCode: SP
            languageName: Spanish
            isFavouriteLanguage: false
            writingProficiency: scholar
            readingProficiency: scholar
            speakingProficiency: scholar
            listeningProficiency: scholar
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
        skill:
          - skillCode: SK001
            skillName: marketing
            evaluatedLevel: Advanced
            comment: Ten years experience
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
          - skillCode: SK002
            skillName: Project Management
            evaluatedLevel: newbie
            comment: First work experience
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
      description: Here is an example of a response for updating an Individual.
    Individual_update_example_Implicit_Merge_request:
      value:
        '@type': Individual
        maritalStatus: divorced
      description: Here is an example of a request for updating an Individual with patch merge
    Individual_update_example_Implicit_Merge_response:
      value:
        id: '42'
        href: 'https://serverRoot/tmf-api/party/v5/individual/42'
        '@type': Individual
        '@baseType': Party
        gender: female
        countryOfBirth: United States
        nationality: American
        maritalStatus: divorced
        birthDate: '1967-09-26T05:00:00.246Z'
        givenName: Jane
        preferredGivenName: Lamborgizzia
        familyName: Lamborgizzia
        legalName: Smith
        middleName: JL
        fullName: Jane Smith ep Lamborgizzia
        formattedName: Jane Smith ep Lamborgizzia
        status: validated
        externalReference:
          - name: 'http://facebook.com/17263635'
            externalIdentifierType: facebookId
            '@type': ExternalIdentifier
          - name: 'http://google.com/17263635'
            externalIdentifierType: googleId
            '@type': ExternalIdentifier
        partyCharacteristic:
          - name: hobby
            value:
              - Modern Jazz
              - Cinema
            valueType: array
            '@type': StringArrayCharacteristic
          - name: childrenNumber
            value: 1
            valueType: number
            '@type': IntegerCharacteristic
        otherName:
          - '@type': OtherNameIndividual
            givenName: Jane
            familyName: Smith
            validFor:
              startDateTime: '1967-09-26T00:00:00.246Z'
              endDateTime: '2015-06-15T00:00:00.246Z'
        individualIdentification:
          - '@type': IndividualIdentification
            identificationType: passport
            identificationId: 51DD1234
            issuingAuthority: US Government
            issuingDate: '2017-10-22T07:49:25.246Z'
            validFor:
              startDateTime: '2017-10-22T07:49:25.246Z'
              endDateTime: '2027-10-21T07:49:25.246Z'
            attachment:
              '@type': Attachment
              attachmentType: passportCopy
              name: PassportCopy321.pdf
              description: Scanned copy of the passport
              mimeType: application/pdf
              url: 'http://DocumentManager/321/PassportCopy321.pdf'
        taxExemptionCertificate:
          - '@type': TaxExemptionCertificate
            id: '1'
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
            certificateNumber: '98765432345'
            issuingJurisdiction: USA
            taxDefinition:
              - '@type': TaxDefinitionRef
                id: '96'
                name: Value Added Tax
                taxType: federalVat
            attachment:
              '@type': Attachment
              attachmentType: taxExemptionCertificate
              name: TaxExemptionCertificate-566655.pdf
              description: Electronic version of the tax exemption certificate
              mimeType: application/pdf
              url: 'https://mycsp.com:8080/DocumentManager/666/TaxExemptionCertificate-566655.pdf'
        creditRating:
          - '@type': CreditRating
            creditAgencyName: Experian
            creditAgencyType: externalAgency
            ratingReference: ref123
            ratingScore: 680
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
        relatedParty:
          - role: employer
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '128'
              href: 'https://serverRoot/tmf-api/party/v5/organization/128'
              name: Coffee Do Brazil Fair Trade Marketing Department
              '@type': PartyRef
              '@referredType': Organization
        contactMedium:
          - preferred: true
            mediumType: email
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
            '@type': EmailContactMedium
            emailAddress: jane.lamborgizzia@gmail.com
          - preferred: false
            mediumType: postalAddress
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
            '@type': GeographicAddressContactMedium
            city: Morristown
            country: USA
            postCode: 07960
            stateOrProvince: New Jersey
            street1: 240 Headquarters Plazza
            street2: East Tower - 10th Floor
        disability:
          - disabilityCode: BLD
            disabilityName: Blind
            validFor:
              startDateTime: '1967-09-26T07:49:25.246Z'
        languageAbility:
          - languageCode: FR
            languageName: French
            isFavouriteLanguage: true
            writingProficiency: advanced
            readingProficiency: advanced
            speakingProficiency: intermediate
            listeningProficiency: intermediate
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
          - languageCode: SP
            languageName: Spanish
            isFavouriteLanguage: false
            writingProficiency: scholar
            readingProficiency: scholar
            speakingProficiency: scholar
            listeningProficiency: scholar
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
        skill:
          - skillCode: SK001
            skillName: marketing
            evaluatedLevel: Advanced
            comment: Ten years experience
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
          - skillCode: SK002
            skillName: Project Management
            evaluatedLevel: newbie
            comment: First work experience
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
      description: Here is an example of a response for updating an Individual.
    Individual_update_example_JSON_Patch_request:
      value:
        - op: add
          path: /individualIdentification/-
          value:
            '@type': IndividualIdentification
            identificationType: passport
            identificationId: 51DD1234
            issuingAuthority: US Government
            issuingDate: '2017-10-22T07:49:25.246Z'
            validFor:
              startDateTime: '2017-10-22T07:49:25.246Z'
              endDateTime: '2027-10-21T07:49:25.246Z'
            attachment:
              '@type': Attachment
              attachmentType: passportCopy
              name: PassportCopy321.pdf
              description: Scanned copy of the passport
              mimeType: application/pdf
              url: 'http://DocumentManager/321/PassportCopy321.pdf'
      description: Here is an example of a request for updating an Individual with JSON Patch
    Individual_update_example_JSON_Patch_response:
      value:
        id: '42'
        href: 'https://serverRoot/tmf-api/party/v5/individual/42'
        '@type': Individual
        '@baseType': Party
        gender: female
        countryOfBirth: United States
        nationality: American
        maritalStatus: married
        birthDate: '1967-09-26T05:00:00.246Z'
        givenName: Jane
        preferredGivenName: Lamborgizzia
        familyName: Lamborgizzia
        legalName: Smith
        middleName: JL
        fullName: Jane Smith ep Lamborgizzia
        formattedName: Jane Smith ep Lamborgizzia
        status: validated
        externalReference:
          - name: 'http://facebook.com/17263635'
            externalIdentifierType: facebookId
            '@type': ExternalIdentifier
          - name: 'http://google.com/17263635'
            externalIdentifierType: googleId
            '@type': ExternalIdentifier
        partyCharacteristic:
          - name: hobby
            value:
              - Modern Jazz
              - Cinema
            valueType: array
            '@type': StringArrayCharacteristic
          - name: childrenNumber
            value: 1
            valueType: number
            '@type': IntegerCharacteristic
        otherName:
          - '@type': OtherNameIndividual
            givenName: Jane
            familyName: Smith
            validFor:
              startDateTime: '1967-09-26T00:00:00.246Z'
              endDateTime: '2015-06-15T00:00:00.246Z'
        individualIdentification:
          - '@type': IndividualIdentification
            identificationType: passport
            identificationId: 51DD1234
            issuingAuthority: US Government
            issuingDate: '2017-10-22T07:49:25.246Z'
            validFor:
              startDateTime: '2017-10-22T07:49:25.246Z'
              endDateTime: '2027-10-21T07:49:25.246Z'
            attachment:
              '@type': Attachment
              attachmentType: passportCopy
              name: PassportCopy321.pdf
              description: Scanned copy of the passport
              mimeType: application/pdf
              url: 'http://DocumentManager/321/PassportCopy321.pdf'
        taxExemptionCertificate:
          - '@type': TaxExemptionCertificate
            id: '1'
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
            certificateNumber: '98765432345'
            issuingJurisdiction: USA
            taxDefinition:
              - '@type': TaxDefinitionRef
                id: '96'
                name: Value Added Tax
                taxType: federalVat
            attachment:
              '@type': Attachment
              attachmentType: taxExemptionCertificate
              name: TaxExemptionCertificate-566655.pdf
              description: Electronic version of the tax exemption certificate
              mimeType: application/pdf
              url: 'https://mycsp.com:8080/DocumentManager/666/TaxExemptionCertificate-566655.pdf'
        creditRating:
          - '@type': CreditRating
            creditAgencyName: Experian
            creditAgencyType: externalAgency
            ratingReference: ref123
            ratingScore: 680
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
        relatedParty:
          - role: employer
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '128'
              href: 'https://serverRoot/tmf-api/party/v5/organization/128'
              name: Coffee Do Brazil Fair Trade Marketing Department
              '@type': PartyRef
              '@referredType': Organization
        contactMedium:
          - preferred: true
            mediumType: email
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
            '@type': EmailContactMedium
            emailAddress: jane.lamborgizzia@gmail.com
          - preferred: false
            mediumType: postalAddress
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
            '@type': GeographicAddressContactMedium
            city: Morristown
            country: USA
            postCode: 07960
            stateOrProvince: New Jersey
            street1: 240 Headquarters Plazza
            street2: East Tower - 10th Floor
        disability:
          - disabilityCode: BLD
            disabilityName: Blind
            validFor:
              startDateTime: '1967-09-26T07:49:25.246Z'
        languageAbility:
          - languageCode: FR
            languageName: French
            isFavouriteLanguage: true
            writingProficiency: advanced
            readingProficiency: advanced
            speakingProficiency: intermediate
            listeningProficiency: intermediate
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
          - languageCode: SP
            languageName: Spanish
            isFavouriteLanguage: false
            writingProficiency: scholar
            readingProficiency: scholar
            speakingProficiency: scholar
            listeningProficiency: scholar
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
        skill:
          - skillCode: SK001
            skillName: marketing
            evaluatedLevel: Advanced
            comment: Ten years experience
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
          - skillCode: SK002
            skillName: Project Management
            evaluatedLevel: newbie
            comment: First work experience
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
      description: Here is an example of a response for updating an Individual.
    Individual_update_example_JSON_Patch_Query_request:
      value:
        - op: replace
          path: /partyCharacteristic/value?/partyCharacteristic/name=childrenNumber
          value: 2
      description: Here is an example of a request for updating an Individual with JSON Patch
    Individual_update_example_JSON_Patch_Query_response:
      value:
        id: '42'
        href: 'https://serverRoot/tmf-api/party/v5/individual/42'
        '@type': Individual
        '@baseType': Party
        gender: female
        countryOfBirth: United States
        nationality: American
        maritalStatus: married
        birthDate: '1967-09-26T05:00:00.246Z'
        givenName: Jane
        preferredGivenName: Lamborgizzia
        familyName: Lamborgizzia
        legalName: Smith
        middleName: JL
        fullName: Jane Smith ep Lamborgizzia
        formattedName: Jane Smith ep Lamborgizzia
        status: validated
        externalReference:
          - name: 'http://facebook.com/17263635'
            externalIdentifierType: facebookId
            '@type': ExternalIdentifier
          - name: 'http://google.com/17263635'
            externalIdentifierType: googleId
            '@type': ExternalIdentifier
        partyCharacteristic:
          - name: hobby
            value:
              - Modern Jazz
              - Cinema
            valueType: array
            '@type': StringArrayCharacteristic
          - name: childrenNumber
            value: 2
            valueType: number
            '@type': IntegerCharacteristic
        otherName:
          - '@type': OtherNameIndividual
            givenName: Jane
            familyName: Smith
            validFor:
              startDateTime: '1967-09-26T00:00:00.246Z'
              endDateTime: '2015-06-15T00:00:00.246Z'
        individualIdentification:
          - '@type': IndividualIdentification
            identificationType: passport
            identificationId: 51DD1234
            issuingAuthority: US Government
            issuingDate: '2017-10-22T07:49:25.246Z'
            validFor:
              startDateTime: '2017-10-22T07:49:25.246Z'
              endDateTime: '2027-10-21T07:49:25.246Z'
            attachment:
              '@type': Attachment
              attachmentType: passportCopy
              name: PassportCopy321.pdf
              description: Scanned copy of the passport
              mimeType: application/pdf
              url: 'http://DocumentManager/321/PassportCopy321.pdf'
        taxExemptionCertificate:
          - '@type': TaxExemptionCertificate
            id: '1'
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
            certificateNumber: '98765432345'
            issuingJurisdiction: USA
            taxDefinition:
              - '@type': TaxDefinitionRef
                id: '96'
                name: Value Added Tax
                taxType: federalVat
            attachment:
              '@type': Attachment
              attachmentType: taxExemptionCertificate
              name: TaxExemptionCertificate-566655.pdf
              description: Electronic version of the tax exemption certificate
              mimeType: application/pdf
              url: 'https://mycsp.com:8080/DocumentManager/666/TaxExemptionCertificate-566655.pdf'
        creditRating:
          - '@type': CreditRating
            creditAgencyName: Experian
            creditAgencyType: externalAgency
            ratingReference: ref123
            ratingScore: 680
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
        relatedParty:
          - role: employer
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '128'
              href: 'https://serverRoot/tmf-api/party/v5/organization/128'
              name: Coffee Do Brazil Fair Trade Marketing Department
              '@type': PartyRef
              '@referredType': Organization
        contactMedium:
          - preferred: true
            mediumType: email
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
            '@type': EmailContactMedium
            emailAddress: jane.lamborgizzia@gmail.com
          - preferred: false
            mediumType: postalAddress
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
            '@type': GeographicAddressContactMedium
            city: Morristown
            country: USA
            postCode: 07960
            stateOrProvince: New Jersey
            street1: 240 Headquarters Plazza
            street2: East Tower - 10th Floor
        disability:
          - disabilityCode: BLD
            disabilityName: Blind
            validFor:
              startDateTime: '1967-09-26T07:49:25.246Z'
        languageAbility:
          - languageCode: FR
            languageName: French
            isFavouriteLanguage: true
            writingProficiency: advanced
            readingProficiency: advanced
            speakingProficiency: intermediate
            listeningProficiency: intermediate
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
          - languageCode: SP
            languageName: Spanish
            isFavouriteLanguage: false
            writingProficiency: scholar
            readingProficiency: scholar
            speakingProficiency: scholar
            listeningProficiency: scholar
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
        skill:
          - skillCode: SK001
            skillName: marketing
            evaluatedLevel: Advanced
            comment: Ten years experience
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
          - skillCode: SK002
            skillName: Project Management
            evaluatedLevel: newbie
            comment: First work experience
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
      description: Here is an example of a response for updating an Individual.
    Organization_update_example_Patch_Merge_request:
      value:
        '@type': Organization
        isHeadOffice: false
      description: Here is an example of a request for updating an Organization with patch merge
    Organization_update_example_Patch_Merge_response:
      value:
        id: '128'
        href: 'https://serverRoot/tmf-api/party/v5/organization/128'
        '@type': Organization
        '@baseType': Party
        isLegalEntity: true
        isHeadOffice: false
        organizationType: company
        existsDuring:
          startDateTime: '2015-10-22T08:31:52.026Z'
        name: Coffee Do Brazil
        tradingName: Coffee Do Brazil Fair Trade
        nameType: inc
        status: validated
        externalReference:
          - name: 'http://coffeedobrazil.com'
            externalIdentifierType: internetSite
            '@type': ExternalIdentifier
        partyCharacteristic:
          - name: number of employees
            value: 125
            valueType: number
            '@type': IntegerCharacteristic
          - name: market segment
            value: Food wholesale
            valueType: string
            '@type': StringCharacteristic
        otherName:
          - '@type': OtherNameOrganization
            nameType: inc
            tradingName: General Coffee
            validFor:
              startDateTime: '2015-10-22T08:31:52.026Z'
              endDateTime: '2017-10-22T08:31:52.026Z'
        organizationIdentification:
          - '@type': OrganizationIdentification
            identificationType: commercialRegistration
            identificationId: '12345678'
            issuingAuthority: US Government
            issuingDate: '2015-10-22T08:31:52.028Z'
            validFor:
              startDateTime: '2015-10-22T08:31:52.028Z'
            attachment:
              '@type': Attachment
              attachmentType: documentCopy
              name: RegistrationCertificate421.pdf
              description: Scanned copy of the registration certificate
              mimeType: application/pdf
              url: 'http://DocumentManager/421/RegistrationCertificate421.pdf'
        taxExemptionCertificate:
          - '@type': TaxExemptionCertificate
            id: '1'
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
            certificateNumber: '9875755432345'
            issuingJurisdiction: USA
            reason: Voluntary Body
            taxDefinition:
              - '@type': TaxDefinitionRef
                id: '96'
                name: Value Added Tax
                taxType: federalVat
            attachment:
              '@type': Attachment
              attachmentType: taxExemptionCertificate
              name: TaxExemptionCertificate-233322.pdf
              description: Electronic version of the tax exemption certificate
              mimeType: application/pdf
              url: 'https://mycsp.com:8080/DocumentManager/666/TaxExemptionCertificate-233322.pdf'
        creditRating:
          - '@type': CreditRating
            creditAgencyName: Experian
            creditAgencyType: externalAgency
            ratingReference: ref456
            ratingScore: 400
            validFor:
              startDateTime: '2018-10-22T08:31:52.028Z'
        relatedParty:
          - role: director
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '54'
              href: 'https://serverRoot/tmf-api/party/v5/individual/54'
              name: Carlos Mafalda
              '@type': PartyRef
              '@referredType': Individual
          - role: employee
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '42'
              href: 'https://serverRoot/tmf-api/party/v5/individual/42'
              name: Jane Lamborgizzia
              '@type': PartyRef
              '@referredType': Individual
        contactMedium:
          - preferred: true
            mediumType: email
            validFor:
              startDateTime: '2018-10-22T08:31:52.028Z'
            '@type': EmailContactMedium
            emailAddress: jane.lamborgizzia@coffeedobrazil.com
          - preferred: false
            mediumType: postalAddress
            validFor:
              startDateTime: '2018-10-22T08:31:52.028Z'
            '@type': GeographicAddressContactMedium
            city: Morristown
            country: USA
            postCode: 07960
            stateOrProvince: New Jersey
            street1: 240 Headquarters Plazza
            street2: East Tower 10th Floor
        organizationParentRelationship:
          '@type': OrganizationParentRelationship
          relationshipType: juridical
          organization:
            '@type': OrganizationRef
            id: '800'
            href: 'https://serverRoot/tmf-api/party/v5/organization/800'
        organizationChildRelationship:
          - '@type': OrganizationChildRelationship
            relationshipType: juridical
            organization:
              '@type': OrganizationRef
              id: '149'
              href: 'https://serverRoot/tmf-api/party/v5/organization/149'
          - '@type': OrganizationChildRelationship
            relationshipType: juridical
            organization:
              '@type': OrganizationRef
              id: '150'
              href: 'https://serverRoot/tmf-api/party/v5/organization/150'
      description: Here is an example of a response for updating an Organization.
    Organization_update_example_Implicit_Merge_request:
      value:
        '@type': Organization
        isHeadOffice: false
      description: Here is an example of a request for updating an Organization with patch merge
    Organization_update_example_Implicit_Merge_response:
      value:
        id: '128'
        href: 'https://serverRoot/tmf-api/party/v5/organization/128'
        '@type': Organization
        '@baseType': Party
        isLegalEntity: true
        isHeadOffice: false
        organizationType: company
        existsDuring:
          startDateTime: '2015-10-22T08:31:52.026Z'
        name: Coffee Do Brazil
        tradingName: Coffee Do Brazil Fair Trade
        nameType: inc
        status: validated
        externalReference:
          - name: 'http://coffeedobrazil.com'
            externalIdentifierType: internetSite
            '@type': ExternalIdentifier
        partyCharacteristic:
          - name: number of employees
            value: 125
            valueType: number
            '@type': IntegerCharacteristic
          - name: market segment
            value: Food wholesale
            valueType: string
            '@type': StringCharacteristic
        otherName:
          - '@type': OtherNameOrganization
            nameType: inc
            tradingName: General Coffee
            validFor:
              startDateTime: '2015-10-22T08:31:52.026Z'
              endDateTime: '2017-10-22T08:31:52.026Z'
        organizationIdentification:
          - '@type': OrganizationIdentification
            identificationType: commercialRegistration
            identificationId: '12345678'
            issuingAuthority: US Government
            issuingDate: '2015-10-22T08:31:52.028Z'
            validFor:
              startDateTime: '2015-10-22T08:31:52.028Z'
            attachment:
              '@type': Attachment
              attachmentType: documentCopy
              name: RegistrationCertificate421.pdf
              description: Scanned copy of the registration certificate
              mimeType: application/pdf
              url: 'http://DocumentManager/421/RegistrationCertificate421.pdf'
        taxExemptionCertificate:
          - '@type': TaxExemptionCertificate
            id: '1'
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
            certificateNumber: '9875755432345'
            issuingJurisdiction: USA
            reason: Voluntary Body
            taxDefinition:
              - '@type': TaxDefinitionRef
                id: '96'
                name: Value Added Tax
                taxType: federalVat
            attachment:
              '@type': Attachment
              attachmentType: taxExemptionCertificate
              name: TaxExemptionCertificate-233322.pdf
              description: Electronic version of the tax exemption certificate
              mimeType: application/pdf
              url: 'https://mycsp.com:8080/DocumentManager/666/TaxExemptionCertificate-233322.pdf'
        creditRating:
          - '@type': CreditRating
            creditAgencyName: Experian
            creditAgencyType: externalAgency
            ratingReference: ref456
            ratingScore: 400
            validFor:
              startDateTime: '2018-10-22T08:31:52.028Z'
        relatedParty:
          - role: director
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '54'
              href: 'https://serverRoot/tmf-api/party/v5/individual/54'
              name: Carlos Mafalda
              '@type': PartyRef
              '@referredType': Individual
          - role: employee
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '42'
              href: 'https://serverRoot/tmf-api/party/v5/individual/42'
              name: Jane Lamborgizzia
              '@type': PartyRef
              '@referredType': Individual
        contactMedium:
          - preferred: true
            mediumType: email
            validFor:
              startDateTime: '2018-10-22T08:31:52.028Z'
            '@type': EmailContactMedium
            emailAddress: jane.lamborgizzia@coffeedobrazil.com
          - preferred: false
            mediumType: postalAddress
            validFor:
              startDateTime: '2018-10-22T08:31:52.028Z'
            '@type': GeographicAddressContactMedium
            city: Morristown
            country: USA
            postCode: 07960
            stateOrProvince: New Jersey
            street1: 240 Headquarters Plazza
            street2: East Tower 10th Floor
        organizationParentRelationship:
          '@type': OrganizationParentRelationship
          relationshipType: juridical
          organization:
            '@type': OrganizationRef
            id: '800'
            href: 'https://serverRoot/tmf-api/party/v5/organization/800'
        organizationChildRelationship:
          - '@type': OrganizationChildRelationship
            relationshipType: juridical
            organization:
              '@type': OrganizationRef
              id: '149'
              href: 'https://serverRoot/tmf-api/party/v5/organization/149'
          - '@type': OrganizationChildRelationship
            relationshipType: juridical
            organization:
              '@type': OrganizationRef
              id: '150'
              href: 'https://serverRoot/tmf-api/party/v5/organization/150'
      description: Here is an example of a response for updating an Organization.
    Organization_update_example_JSON_Patch_request:
      value:
        - op: add
          path: /organizationIdentification/-
          value:
            '@type': OrganizationIdentification
            identificationType: Business Permit
            identificationId: '966935345345'
            issuingAuthority: State of New Jersey
            issuingDate: '2016-01-22T09:31:52.028Z'
            validFor:
              startDateTime: '2016-01-22T09:31:52.028Z'
            attachment:
              '@type': Attachment
              attachmentType: documentCopy
              name: BusinessPermitCertificate888441.pdf
              description: Scanned copy of the business permit
              mimeType: application/pdf
              url: 'http://DocumentManager/888441/BusinessPermitCertificate888441.pdf'
      description: Here is an example of a request for updating an Organization with JSON Patch
    Organization_update_example_JSON_Patch_response:
      value:
        id: '128'
        href: 'https://serverRoot/tmf-api/party/v5/organization/128'
        '@type': Organization
        '@baseType': Party
        isLegalEntity: true
        isHeadOffice: true
        organizationType: company
        existsDuring:
          startDateTime: '2015-10-22T08:31:52.026Z'
        name: Coffee Do Brazil
        tradingName: Coffee Do Brazil Fair Trade
        nameType: inc
        status: validated
        externalReference:
          - name: 'http://coffeedobrazil.com'
            externalIdentifierType: internetSite
            '@type': ExternalIdentifier
        partyCharacteristic:
          - name: number of employees
            value: 125
            valueType: number
            '@type': IntegerCharacteristic
          - name: market segment
            value: Food wholesale
            valueType: string
            '@type': StringCharacteristic
        otherName:
          - '@type': OtherNameOrganization
            nameType: inc
            tradingName: General Coffee
            validFor:
              startDateTime: '2015-10-22T08:31:52.026Z'
              endDateTime: '2017-10-22T08:31:52.026Z'
        organizationIdentification:
          - '@type': OrganizationIdentification
            identificationType: commercialRegistration
            identificationId: '12345678'
            issuingAuthority: US Government
            issuingDate: '2015-10-22T08:31:52.028Z'
            validFor:
              startDateTime: '2015-10-22T08:31:52.028Z'
            attachment:
              '@type': Attachment
              attachmentType: documentCopy
              name: RegistrationCertificate421.pdf
              description: Scanned copy of the registration certificate
              mimeType: application/pdf
              url: 'http://DocumentManager/421/RegistrationCertificate421.pdf'
          - identificationType: Business Permit
            identificationId: '966935345345'
            issuingAuthority: State of New Jersey
            issuingDate: '2016-01-22T09:31:52.028Z'
            validFor:
              startDateTime: '2016-01-22T09:31:52.028Z'
            attachment:
              '@type': Attachment
              attachmentType: documentCopy
              name: BusinessPermitCertificate888441.pdf
              description: Scanned copy of the business permit
              mimeType: application/pdf
              url: 'http://DocumentManager/888441/BusinessPermitCertificate888441.pdf'
        taxExemptionCertificate:
          - '@type': TaxExemptionCertificate
            id: '1'
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
            certificateNumber: '9875755432345'
            issuingJurisdiction: USA
            reason: Voluntary Body
            taxDefinition:
              - '@type': TaxDefinitionRef
                id: '96'
                name: Value Added Tax
                taxType: federalVat
            attachment:
              '@type': Attachment
              attachmentType: taxExemptionCertificate
              name: TaxExemptionCertificate-233322.pdf
              description: Electronic version of the tax exemption certificate
              mimeType: application/pdf
              url: 'https://mycsp.com:8080/DocumentManager/666/TaxExemptionCertificate-233322.pdf'
        creditRating:
          - '@type': CreditRating
            creditAgencyName: Experian
            creditAgencyType: externalAgency
            ratingReference: ref456
            ratingScore: 400
            validFor:
              startDateTime: '2018-10-22T08:31:52.028Z'
        relatedParty:
          - role: director
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '54'
              href: 'https://serverRoot/tmf-api/party/v5/individual/54'
              name: Carlos Mafalda
              '@type': PartyRef
              '@referredType': Individual
          - role: employee
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '42'
              href: 'https://serverRoot/tmf-api/party/v5/individual/42'
              name: Jane Lamborgizzia
              '@type': PartyRef
              '@referredType': Individual
        contactMedium:
          - preferred: true
            mediumType: email
            validFor:
              startDateTime: '2018-10-22T08:31:52.028Z'
            '@type': EmailContactMedium
            emailAddress: jane.lamborgizzia@coffeedobrazil.com
          - preferred: false
            mediumType: postalAddress
            validFor:
              startDateTime: '2018-10-22T08:31:52.028Z'
            '@type': GeographicAddressContactMedium
            city: Morristown
            country: USA
            postCode: 07960
            stateOrProvince: New Jersey
            street1: 240 Headquarters Plazza
            street2: East Tower 10th Floor
        organizationParentRelationship:
          '@type': OrganizationParentRelationship
          relationshipType: juridical
          organization:
            '@type': OrganizationRef
            id: '800'
            href: 'https://serverRoot/tmf-api/party/v5/organization/800'
        organizationChildRelationship:
          - '@type': OrganizationChildRelationship
            relationshipType: juridical
            organization:
              '@type': OrganizationRef
              id: '149'
              href: 'https://serverRoot/tmf-api/party/v5/organization/149'
          - '@type': OrganizationChildRelationship
            relationshipType: juridical
            organization:
              '@type': OrganizationRef
              id: '150'
              href: 'https://serverRoot/tmf-api/party/v5/organization/150'
      description: Here is an example of a response for updating an Organization.
    Organization_update_example_JSON_Patch_Query_request:
      value:
        - op: replace
          path: /partyCharacteristic/value?/partyCharacteristic/name=market segment
          value: Food retail
      description: Here is an example of a request for updating an Organization with JSON Patch
    Organization_update_example_JSON_Patch_Query_response:
      value:
        id: '128'
        href: 'https://serverRoot/tmf-api/party/v5/organization/128'
        '@type': Organization
        '@baseType': Party
        isLegalEntity: true
        isHeadOffice: true
        organizationType: company
        existsDuring:
          startDateTime: '2015-10-22T08:31:52.026Z'
        name: Coffee Do Brazil
        tradingName: Coffee Do Brazil Fair Trade
        nameType: inc
        status: validated
        externalReference:
          - name: 'http://coffeedobrazil.com'
            externalIdentifierType: internetSite
            '@type': ExternalIdentifier
        partyCharacteristic:
          - name: number of employees
            value: 125
            valueType: number
            '@type': IntegerCharacteristic
          - name: market segment
            value: Food retail
            valueType: string
            '@type': StringCharacteristic
        otherName:
          - '@type': OtherNameOrganization
            nameType: inc
            tradingName: General Coffee
            validFor:
              startDateTime: '2015-10-22T08:31:52.026Z'
              endDateTime: '2017-10-22T08:31:52.026Z'
        organizationIdentification:
          - '@type': OrganizationIdentification
            identificationType: commercialRegistration
            identificationId: '12345678'
            issuingAuthority: US Government
            issuingDate: '2015-10-22T08:31:52.028Z'
            validFor:
              startDateTime: '2015-10-22T08:31:52.028Z'
            attachment:
              '@type': Attachment
              attachmentType: documentCopy
              name: RegistrationCertificate421.pdf
              description: Scanned copy of the registration certificate
              mimeType: application/pdf
              url: 'http://DocumentManager/421/RegistrationCertificate421.pdf'
          - identificationType: Business Permit
            identificationId: '966935345345'
            issuingAuthority: State of New Jersey
            issuingDate: '2016-01-22T09:31:52.028Z'
            validFor:
              startDateTime: '2016-01-22T09:31:52.028Z'
            attachment:
              '@type': Attachment
              attachmentType: documentCopy
              name: BusinessPermitCertificate888441.pdf
              description: Scanned copy of the business permit
              mimeType: application/pdf
              url: 'http://DocumentManager/888441/BusinessPermitCertificate888441.pdf'
        taxExemptionCertificate:
          - '@type': TaxExemptionCertificate
            id: '1'
            validFor:
              startDateTime: '2018-10-22T07:49:25.246Z'
            certificateNumber: '9875755432345'
            issuingJurisdiction: USA
            reason: Voluntary Body
            taxDefinition:
              - '@type': TaxDefinitionRef
                id: '96'
                name: Value Added Tax
                taxType: federalVat
            attachment:
              '@type': Attachment
              attachmentType: taxExemptionCertificate
              name: TaxExemptionCertificate-233322.pdf
              description: Electronic version of the tax exemption certificate
              mimeType: application/pdf
              url: 'https://mycsp.com:8080/DocumentManager/666/TaxExemptionCertificate-233322.pdf'
        creditRating:
          - '@type': CreditRating
            creditAgencyName: Experian
            creditAgencyType: externalAgency
            ratingReference: ref456
            ratingScore: 400
            validFor:
              startDateTime: '2018-10-22T08:31:52.028Z'
        relatedParty:
          - role: director
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '54'
              href: 'https://serverRoot/tmf-api/party/v5/individual/54'
              name: Carlos Mafalda
              '@type': PartyRef
              '@referredType': Individual
          - role: employee
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '42'
              href: 'https://serverRoot/tmf-api/party/v5/individual/42'
              name: Jane Lamborgizzia
              '@type': PartyRef
              '@referredType': Individual
        contactMedium:
          - preferred: true
            mediumType: email
            validFor:
              startDateTime: '2018-10-22T08:31:52.028Z'
            '@type': EmailContactMedium
            emailAddress: jane.lamborgizzia@coffeedobrazil.com
          - preferred: false
            mediumType: postalAddress
            validFor:
              startDateTime: '2018-10-22T08:31:52.028Z'
            '@type': GeographicAddressContactMedium
            city: Morristown
            country: USA
            postCode: 07960
            stateOrProvince: New Jersey
            street1: 240 Headquarters Plazza
            street2: East Tower 10th Floor
        organizationParentRelationship:
          '@type': OrganizationParentRelationship
          relationshipType: juridical
          organization:
            '@type': OrganizationRef
            id: '800'
            href: 'https://serverRoot/tmf-api/party/v5/organization/800'
        organizationChildRelationship:
          - '@type': OrganizationChildRelationship
            relationshipType: juridical
            organization:
              '@type': OrganizationRef
              id: '149'
              href: 'https://serverRoot/tmf-api/party/v5/organization/149'
          - '@type': OrganizationChildRelationship
            relationshipType: juridical
            organization:
              '@type': OrganizationRef
              id: '150'
              href: 'https://serverRoot/tmf-api/party/v5/organization/150'
      description: Here is an example of a response for updating an Organization.
    IndividualCreateEvent_request:
      value:
        correlationId: 95003dd3-e325
        description: IndividualCreateEvent illustration
        domain: Commercial
        eventId: 4010-9b59-509a64cf85a8
        eventTime: '2022-08-25T12:18:12.171Z'
        eventType: IndividualCreateEvent
        priority: '1'
        timeOcurred: '2022-08-25T12:18:06.252Z'
        title: IndividualCreateEvent
        event:
          individual:
            id: '42'
            href: 'https://serverRoot/tmf-api/party/v5/individual/42'
            '@type': Individual
            '@baseType': Party
            gender: female
            countryOfBirth: United States
            nationality: American
            maritalStatus: married
            birthDate: '1967-09-26T05:00:00.246Z'
            givenName: Jane
            preferredGivenName: Lamborgizzia
            familyName: Lamborgizzia
            legalName: Smith
            middleName: JL
            fullName: Jane Smith ep Lamborgizzia
            formattedName: Jane Smith ep Lamborgizzia
            status: validated
            externalReference:
              - name: 'http://facebook.com/17263635'
                externalIdentifierType: facebookId
                '@type': ExternalIdentifier
              - name: 'http://google.com/17263635'
                externalIdentifierType: googleId
                '@type': ExternalIdentifier
            partyCharacteristic:
              - name: hobby
                value:
                  - Modern Jazz
                  - Cinema
                valueType: array
                '@type': StringArrayCharacteristic
              - name: childrenNumber
                value: 1
                valueType: number
                '@type': IntegerCharacteristic
            otherName:
              - '@type': OtherNameIndividual
                givenName: Jane
                familyName: Smith
                validFor:
                  startDateTime: '1967-09-26T00:00:00.246Z'
                  endDateTime: '2015-06-15T00:00:00.246Z'
            individualIdentification:
              - '@type': IndividualIdentification
                identificationType: passport
                identificationId: 51DD1234
                issuingAuthority: US Government
                issuingDate: '2017-10-22T07:49:25.246Z'
                validFor:
                  startDateTime: '2017-10-22T07:49:25.246Z'
                  endDateTime: '2027-10-21T07:49:25.246Z'
                attachment:
                  '@type': Attachment
                  id: '6662326757667'
                  href: 'https://serverRoot/tmf-api/document/v5/attachment/6662326757667'
                  attachmentType: passportCopy
                  name: PassportCopy321.pdf
                  description: Scanned copy of the passport
                  mimeType: application/pdf
                  url: 'http://DocumentManager/321/PassportCopy321.pdf'
            taxExemptionCertificate:
              - '@type': TaxExemptionCertificate
                id: '1'
                validFor:
                  startDateTime: '2018-10-22T07:49:25.246Z'
                certificateNumber: '98765432345'
                issuingJurisdiction: USA
                taxDefinition:
                  - '@type': TaxDefinitionRef
                    id: '96'
                    name: Value Added Tax
                    taxType: federalVat
                attachment:
                  '@type': Attachment
                  id: '5565734535'
                  href: 'https://serverRoot/tmf-api/document/v5/attachment/5565734535'
                  attachmentType: taxExemptionCertificate
                  name: TaxExemptionCertificate-566655.pdf
                  description: Electronic version of the tax exemption certificate
                  mimeType: application/pdf
                  url: 'https://mycsp.com:8080/DocumentManager/666/TaxExemptionCertificate-566655.pdf'
            creditRating:
              - '@type': CreditRating
                creditAgencyName: Experian
                creditAgencyType: externalAgency
                ratingReference: ref123
                ratingScore: 680
                validFor:
                  startDateTime: '2018-10-22T07:49:25.246Z'
            relatedParty:
              - role: employer
                '@type': RelatedPartyRefOrPartyRoleRef
                partyOrPartyRole:
                  id: '128'
                  href: 'https://serverRoot/tmf-api/party/v5/organization/128'
                  name: Coffee Do Brazil Fair Trade Marketing Department
                  '@type': PartyRef
                  '@referredType': Organization
            contactMedium:
              - preferred: true
                mediumType: email
                validFor:
                  startDateTime: '2017-03-15T07:49:25.246Z'
                '@type': EmailContactMedium
                emailAddress: jane.lamborgizzia@gmail.com
              - preferred: false
                mediumType: postalAddress
                validFor:
                  startDateTime: '2017-03-15T07:49:25.246Z'
                '@type': GeographicAddressContactMedium
                city: Morristown
                country: USA
                postCode: 07960
                stateOrProvince: New Jersey
                street1: 240 Headquarters Plazza
                street2: East Tower - 10th Floor
            disability:
              - disabilityCode: BLD
                disabilityName: Blind
                validFor:
                  startDateTime: '1967-09-26T07:49:25.246Z'
            languageAbility:
              - languageCode: FR
                languageName: French
                isFavouriteLanguage: true
                writingProficiency: advanced
                readingProficiency: advanced
                speakingProficiency: intermediate
                listeningProficiency: intermediate
                validFor:
                  startDateTime: '2018-10-22T07:49:25.246Z'
              - languageCode: SP
                languageName: Spanish
                isFavouriteLanguage: false
                writingProficiency: scholar
                readingProficiency: scholar
                speakingProficiency: scholar
                listeningProficiency: scholar
                validFor:
                  startDateTime: '2018-10-22T07:49:25.246Z'
            skill:
              - skillCode: SK001
                skillName: marketing
                evaluatedLevel: Advanced
                comment: Ten years experience
                validFor:
                  startDateTime: '2018-10-22T07:49:25.246Z'
              - skillCode: SK002
                skillName: Project Management
                evaluatedLevel: newbie
                comment: First work experience
                validFor:
                  startDateTime: '2018-10-22T07:49:25.246Z'
        reportingSystem:
          id: '759'
          name: APP-745
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '705'
          name: APP-317
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': IndividualCreateEvent
      description: Message example for IndividualCreateEvent event
    IndividualAttributeValueChangeEvent_request:
      value:
        correlationId: f3a34f89-0046
        description: IndividualAttributeValueChangeEvent illustration
        domain: Commercial
        eventId: 4996-b9b1-e533c09a0186
        eventTime: '2022-08-25T12:17:59.636Z'
        eventType: IndividualAttributeValueChangeEvent
        priority: '2'
        timeOcurred: '2022-08-25T12:17:55.035Z'
        title: IndividualAttributeValueChangeEvent
        event:
          individual:
            id: '42'
            href: 'https://serverRoot/tmf-api/party/v5/individual/42'
            '@type': Individual
            '@baseType': Party
            maritalStatus: divorced
        reportingSystem:
          id: '868'
          name: APP-394
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '372'
          name: APP-92
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': IndividualAttributeValueChangeEvent
      description: Message example for IndividualAttributeValueChangeEvent event
    IndividualStateChangeEvent_request:
      value:
        correlationId: f3a34f89-0046
        description: IndividualStateChangeEvent illustration
        domain: Commercial
        eventId: 4996-b9b1-e533c09a0186
        eventTime: '2022-08-25T12:17:59.636Z'
        eventType: IndividualStateChangeEvent
        priority: '2'
        timeOcurred: '2022-08-25T12:17:55.035Z'
        title: IndividualStateChangeEvent
        event:
          individual:
            id: '42'
            href: 'https://serverRoot/tmf-api/party/v5/individual/42'
            '@type': Individual
            '@baseType': Party
            status: validated
        reportingSystem:
          id: '868'
          name: APP-394
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '372'
          name: APP-92
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': IndividualStateChangeEvent
      description: Message example for IndividualStateChangeEvent event
    IndividualDeleteEvent_request:
      value:
        correlationId: f3a34f89-0046
        description: IndividualDeleteEvent illustration
        domain: Commercial
        eventId: 4996-b9b1-e533c09a0186
        eventTime: '2022-08-25T12:17:59.636Z'
        eventType: IndividualDeleteEvent
        priority: '2'
        timeOcurred: '2022-08-25T12:17:55.035Z'
        title: IndividualDeleteEvent
        event:
          individual:
            id: '42'
            href: 'https://serverRoot/tmf-api/party/v5/individual/42'
            '@type': Individual
            '@baseType': Party
        reportingSystem:
          id: '868'
          name: APP-394
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '372'
          name: APP-92
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': IndividualDeleteEvent
      description: Message example for IndividualDeleteEvent event
    OrganizationCreateEvent_request:
      value:
        correlationId: 95003dd3-e325
        description: OrganizationCreateEvent illustration
        domain: Commercial
        eventId: 4010-9b59-509a64cf85a8
        eventTime: '2022-08-25T12:18:12.171Z'
        eventType: OrganizationCreateEvent
        priority: '1'
        timeOcurred: '2022-08-25T12:18:06.252Z'
        title: OrganizationCreateEvent
        event:
          organization:
            id: '128'
            href: 'https://serverRoot/tmf-api/party/v5/organization/128'
            '@type': Organization
            '@baseType': Party
            isLegalEntity: true
            isHeadOffice: true
            organizationType: company
            existsDuring:
              startDateTime: '2015-10-22T08:31:52.026Z'
            name: Coffee Do Brazil
            tradingName: Coffee Do Brazil Fair Trade
            nameType: inc
            status: validated
            externalReference:
              - name: 'http://coffeedobrazil.com'
                externalIdentifierType: internetSite
                '@type': ExternalIdentifier
            partyCharacteristic:
              - name: number of employees
                value: 125
                valueType: number
                '@type': IntegerCharacteristic
              - name: market segment
                value: Food wholesale
                valueType: string
                '@type': StringCharacteristic
            otherName:
              - '@type': OtherNameOrganization
                nameType: inc
                tradingName: General Coffee
                validFor:
                  startDateTime: '2015-10-22T08:31:52.026Z'
                  endDateTime: '2017-10-22T08:31:52.026Z'
            organizationIdentification:
              - '@type': OrganizationIdentification
                identificationType: commercialRegistration
                identificationId: '12345678'
                issuingAuthority: US Government
                issuingDate: '2015-10-22T08:31:52.028Z'
                validFor:
                  startDateTime: '2015-10-22T08:31:52.028Z'
                attachment:
                  '@type': Attachment
                  attachmentType: documentCopy
                  name: RegistrationCertificate421.pdf
                  description: Scanned copy of the registration certificate
                  mimeType: application/pdf
                  url: 'http://DocumentManager/421/RegistrationCertificate421.pdf'
            taxExemptionCertificate:
              - '@type': TaxExemptionCertificate
                id: '1'
                validFor:
                  startDateTime: '2018-10-22T07:49:25.246Z'
                certificateNumber: '9875755432345'
                issuingJurisdiction: USA
                reason: Voluntary Body
                taxDefinition:
                  - '@type': TaxDefinitionRef
                    id: '96'
                    name: Value Added Tax
                    taxType: federalVat
                attachment:
                  '@type': Attachment
                  attachmentType: taxExemptionCertificate
                  name: TaxExemptionCertificate-233322.pdf
                  description: Electronic version of the tax exemption certificate
                  mimeType: application/pdf
                  url: 'https://mycsp.com:8080/DocumentManager/666/TaxExemptionCertificate-233322.pdf'
            creditRating:
              - '@type': CreditRating
                creditAgencyName: Experian
                creditAgencyType: externalAgency
                ratingReference: ref456
                ratingScore: 400
                validFor:
                  startDateTime: '2018-10-22T08:31:52.028Z'
            relatedParty:
              - role: director
                '@type': RelatedPartyRefOrPartyRoleRef
                partyOrPartyRole:
                  id: '54'
                  href: 'https://serverRoot/tmf-api/party/v5/individual/54'
                  name: Carlos Mafalda
                  '@type': PartyRef
                  '@referredType': Individual
              - role: employee
                '@type': RelatedPartyRefOrPartyRoleRef
                partyOrPartyRole:
                  id: '42'
                  href: 'https://serverRoot/tmf-api/party/v5/individual/42'
                  name: Jane Lamborgizzia
                  '@type': PartyRef
                  '@referredType': Individual
            contactMedium:
              - preferred: true
                mediumType: email
                validFor:
                  startDateTime: '2018-10-22T08:31:52.028Z'
                '@type': EmailContactMedium
                emailAddress: jane.lamborgizzia@coffeedobrazil.com
              - preferred: false
                mediumType: postalAddress
                validFor:
                  startDateTime: '2018-10-22T08:31:52.028Z'
                '@type': GeographicAddressContactMedium
                city: Morristown
                country: USA
                postCode: 07960
                stateOrProvince: New Jersey
                street1: 240 Headquarters Plazza
                street2: East Tower 10th Floor
            organizationParentRelationship:
              '@type': OrganizationParentRelationship
              relationshipType: juridical
              organization:
                '@type': OrganizationRef
                id: '800'
                href: 'https://serverRoot/tmf-api/party/v5/organization/800'
            organizationChildRelationship:
              - '@type': OrganizationChildRelationship
                relationshipType: juridical
                organization:
                  '@type': OrganizationRef
                  id: '149'
                  href: 'https://serverRoot/tmf-api/party/v5/organization/149'
              - '@type': OrganizationChildRelationship
                relationshipType: juridical
                organization:
                  '@type': OrganizationRef
                  id: '150'
                  href: 'https://serverRoot/tmf-api/party/v5/organization/150'
        reportingSystem:
          id: '759'
          name: APP-745
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '705'
          name: APP-317
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': OrganizationCreateEvent
      description: Message example for OrganizationCreateEvent event
    OrganizationAttributeValueChangeEvent_request:
      value:
        correlationId: f3a34f89-0046
        description: OrganizationAttributeValueChangeEvent illustration
        domain: Commercial
        eventId: 4996-b9b1-e533c09a0186
        eventTime: '2022-08-25T12:17:59.636Z'
        eventType: OrganizationAttributeValueChangeEvent
        priority: '2'
        timeOcurred: '2022-08-25T12:17:55.035Z'
        title: OrganizationAttributeValueChangeEvent
        event:
          organization:
            id: '128'
            href: 'https://serverRoot/tmf-api/party/v5/organization/128'
            '@type': Organization
            '@baseType': Party
            isHeadOffice: false
        reportingSystem:
          id: '868'
          name: APP-394
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '372'
          name: APP-92
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': OrganizationAttributeValueChangeEvent
      description: Message example for OrganizationAttributeValueChangeEvent event
    OrganizationStateChangeEvent_request:
      value:
        correlationId: f3a34f89-0046
        description: OrganizationStateChangeEvent illustration
        domain: Commercial
        eventId: 4996-b9b1-e533c09a0186
        eventTime: '2022-08-25T12:17:59.636Z'
        eventType: OrganizationStateChangeEvent
        priority: '2'
        timeOcurred: '2022-08-25T12:17:55.035Z'
        title: OrganizationStateChangeEvent
        event:
          organization:
            id: '128'
            href: 'https://serverRoot/tmf-api/party/v5/organization/128'
            '@type': Organization
            '@baseType': Party
            status: validated
        reportingSystem:
          id: '868'
          name: APP-394
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '372'
          name: APP-92
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': OrganizationStateChangeEvent
      description: Message example for OrganizationStateChangeEvent event
    OrganizationDeleteEvent_request:
      value:
        correlationId: f3a34f89-0046
        description: OrganizationDeleteEvent illustration
        domain: Commercial
        eventId: 4996-b9b1-e533c09a0186
        eventTime: '2022-08-25T12:17:59.636Z'
        eventType: OrganizationDeleteEvent
        priority: '2'
        timeOcurred: '2022-08-25T12:17:55.035Z'
        title: OrganizationDeleteEvent
        event:
          organization:
            id: '128'
            href: 'https://serverRoot/tmf-api/party/v5/organization/128'
            '@type': Organization
            '@baseType': Party
        reportingSystem:
          id: '868'
          name: APP-394
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '372'
          name: APP-92
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': OrganizationDeleteEvent
      description: Message example for OrganizationDeleteEvent event
