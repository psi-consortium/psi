openapi: 3.0.1
info:
  title: Document Management API
  description: >-
    TMF667 Document Management API describes the meta-data of a Document, such as the name,
    creationDate and lifecycle status. The (typically binary) body of this document (such as a
    Word.doc, PDF, Video clip, or Image) will be held in the associated Attachment(s) either by Ref
    or Value. If by value - the binary content is held in the Attachment.content. If by reference,
    the Attachment.url might point to a (file:) or remote (http:) pointer to the Document media.\n\n
    A Document may be associated with a DocumentSpecification, which will detail the characteristics
    of that type of Document (an Image may have a width, height and format; a Video may have a
    length and format).\n A Document has a collection of RelatedParty's, for roles such as author,
    reviewer, publisher, and a lifecycle status to take the document through a simple set of
    production stages. Also the Attachment is made available as a resource to access the reference,
    or create or update the Attachment.
  version: 5.0.0
servers:
  - url: '{apiRoot}/tmf-api/document/v5/'
    variables:
      apiRoot:
        default: 'https://serverRoot'
        enum:
          - 'https://serverRoot'
tags:
  - name: document
    description: Operations for Document Resource
  - name: documentSpecification
    description: Operations for DocumentSpecification Resource
  - name: attachment
    description: Operations for Attachment Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /attachment:
    get:
      tags:
        - attachment
      summary: List or find Attachment objects
      description: List or find Attachment objects
      operationId: listAttachment
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200AttachmentArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - attachment
      summary: Creates a Attachment
      description: This operation creates a Attachment entity.
      operationId: createAttachment
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/Attachment_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201Attachment'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/attachment/{id}':
    get:
      tags:
        - attachment
      summary: Retrieves a Attachment by ID
      description: >-
        This operation retrieves a Attachment entity. Attribute selection enabled for all first
        level attributes.
      operationId: retrieveAttachment
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200Attachment_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - attachment
      summary: Updates partially a Attachment
      description: This operation updates partially a Attachment entity.
      operationId: patchAttachment
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/Attachment_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200Attachment_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - attachment
      summary: Deletes a Attachment
      description: This operation deletes a Attachment entity.
      operationId: deleteAttachment
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /document:
    get:
      tags:
        - document
      summary: List or find Document objects
      description: List or find Document objects
      operationId: listDocument
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200DocumentArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - document
      summary: Creates a Document
      description: This operation creates a Document entity.
      operationId: createDocument
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/Document_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201Document'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/document/{id}':
    get:
      tags:
        - document
      summary: Retrieves a Document by ID
      description: >-
        This operation retrieves a Document entity. Attribute selection enabled for all first level
        attributes.
      operationId: retrieveDocument
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200Document_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - document
      summary: Updates partially a Document
      description: This operation updates partially a Document entity.
      operationId: patchDocument
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/Document_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200Document_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - document
      summary: Deletes a Document
      description: This operation deletes a Document entity.
      operationId: deleteDocument
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /documentSpecification:
    get:
      tags:
        - documentSpecification
      summary: List or find DocumentSpecification objects
      description: List or find DocumentSpecification objects
      operationId: listDocumentSpecification
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200DocumentSpecificationArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - documentSpecification
      summary: Creates a DocumentSpecification
      description: This operation creates a DocumentSpecification entity.
      operationId: createDocumentSpecification
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/DocumentSpecification_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201DocumentSpecification'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/documentSpecification/{id}':
    get:
      tags:
        - documentSpecification
      summary: Retrieves a DocumentSpecification by ID
      description: >-
        This operation retrieves a DocumentSpecification entity. Attribute selection enabled for all
        first level attributes.
      operationId: retrieveDocumentSpecification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200DocumentSpecification_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - documentSpecification
      summary: Updates partially a DocumentSpecification
      description: This operation updates partially a DocumentSpecification entity.
      operationId: patchDocumentSpecification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/DocumentSpecification_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200DocumentSpecification_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - documentSpecification
      summary: Deletes a DocumentSpecification
      description: This operation deletes a DocumentSpecification entity.
      operationId: deleteDocumentSpecification
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /hub:
    post:
      operationId: createHub
      summary: Create a subscription (hub) to receive Events
      description: Sets the communication endpoint to receive Events.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    get:
      operationId: hubGet
      summary: Retrieve a subscription (hub)
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
    delete:
      operationId: hubDelete
      summary: Remove a subscription (hub) to receive Events
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
  /listener/attachmentAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity AttachmentAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        AttachmentAttributeValueChangeEvent
      operationId: attachmentAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/AttachmentAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/attachmentCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity AttachmentCreateEvent
      description: Example of a client listener for receiving the notification AttachmentCreateEvent
      operationId: attachmentCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/AttachmentCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/attachmentDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity AttachmentDeleteEvent
      description: Example of a client listener for receiving the notification AttachmentDeleteEvent
      operationId: attachmentDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/AttachmentDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/documentAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity DocumentAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        DocumentAttributeValueChangeEvent
      operationId: documentAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/DocumentAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/documentCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity DocumentCreateEvent
      description: Example of a client listener for receiving the notification DocumentCreateEvent
      operationId: documentCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/DocumentCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/documentDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity DocumentDeleteEvent
      description: Example of a client listener for receiving the notification DocumentDeleteEvent
      operationId: documentDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/DocumentDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/documentSpecificationAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity DocumentSpecificationAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        DocumentSpecificationAttributeValueChangeEvent
      operationId: documentSpecificationAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/DocumentSpecificationAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/documentSpecificationCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity DocumentSpecificationCreateEvent
      description: Example of a client listener for receiving the notification DocumentSpecificationCreateEvent
      operationId: documentSpecificationCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/DocumentSpecificationCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/documentSpecificationDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity DocumentSpecificationDeleteEvent
      description: Example of a client listener for receiving the notification DocumentSpecificationDeleteEvent
      operationId: documentSpecificationDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/DocumentSpecificationDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/documentSpecificationStatusChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity DocumentSpecificationStatusChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        DocumentSpecificationStatusChangeEvent
      operationId: documentSpecificationStatusChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/DocumentSpecificationStatusChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/documentStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity DocumentStateChangeEvent
      description: Example of a client listener for receiving the notification DocumentStateChangeEvent
      operationId: documentStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/DocumentStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
components:
  schemas:
    Addressable:
      type: object
      description: Base schema for addressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    AssociationSpecificationRef:
      type: object
      description: reference to an AssociationSpecification object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AssociationSpecificationRef: '#/components/schemas/AssociationSpecificationRef'
    AssociationSpecificationRef_FVO:
      type: object
      description: reference to an AssociationSpecification object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AssociationSpecificationRef: '#/components/schemas/AssociationSpecificationRef_FVO'
    AssociationSpecificationRef_MVO:
      type: object
      description: reference to an AssociationSpecification object
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AssociationSpecificationRef: '#/components/schemas/AssociationSpecificationRef_MVO'
    Attachment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
    AttachmentAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: AttachmentAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/AttachmentAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentAttributeValueChangeEvent: '#/components/schemas/AttachmentAttributeValueChangeEvent'
    AttachmentAttributeValueChangeEventPayload:
      type: object
      description: AttachmentAttributeValueChangeEventPayload generic structure
      properties:
        attachment:
          $ref: '#/components/schemas/Attachment'
    AttachmentCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: AttachmentCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/AttachmentCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentCreateEvent: '#/components/schemas/AttachmentCreateEvent'
    AttachmentCreateEventPayload:
      type: object
      description: AttachmentCreateEventPayload generic structure
      properties:
        attachment:
          $ref: '#/components/schemas/Attachment'
    AttachmentDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: AttachmentDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/AttachmentDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentDeleteEvent: '#/components/schemas/AttachmentDeleteEvent'
    AttachmentDeleteEventPayload:
      type: object
      description: AttachmentDeleteEventPayload generic structure
      properties:
        attachment:
          $ref: '#/components/schemas/Attachment'
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_FVO'
        - $ref: '#/components/schemas/AttachmentRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_MVO'
        - $ref: '#/components/schemas/AttachmentRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    AttachmentRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    Attachment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
          required:
            - attachmentType
            - mimeType
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
    Attachment_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
              description: The event linked to the involved resource object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occurred.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
    BooleanArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Boolean(s).
              items:
                type: boolean
                description: Characteristic item boolean value
    BooleanArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an array booleans
          properties:
            value:
              type: array
              items:
                type: boolean
                description: Characteristic specification item boolean value
    BooleanArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is an array booleans
          properties:
            value:
              type: array
              items:
                type: boolean
                description: Characteristic specification item boolean value
    BooleanArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an array booleans
          properties:
            value:
              type: array
              items:
                type: boolean
                description: Characteristic specification item boolean value
    BooleanArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Boolean(s).
              items:
                type: boolean
                description: Characteristic item boolean value
          required:
            - value
    BooleanArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Boolean(s).
              items:
                type: boolean
                description: Characteristic item boolean value
    BooleanCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BooleanCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is a boolean
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BooleanCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is a boolean
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BooleanCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is a boolean
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BooleanCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
          required:
            - value
    BooleanCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    CategoryRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to a category in the catalog.
          properties:
            version:
              type: string
              description: Version of the category
      discriminator:
        propertyName: '@type'
        mapping:
          CategoryRef: '#/components/schemas/CategoryRef'
    CategoryRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to a category in the catalog.
          properties:
            version:
              type: string
              description: Version of the category
      discriminator:
        propertyName: '@type'
        mapping:
          CategoryRef: '#/components/schemas/CategoryRef_FVO'
    CategoryRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: Reference to a category in the catalog.
          properties:
            version:
              type: string
              description: Version of the category
      discriminator:
        propertyName: '@type'
        mapping:
          CategoryRef: '#/components/schemas/CategoryRef_MVO'
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic'
          FloatArrayCharacteristic: '#/components/schemas/FloatArrayCharacteristic'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic'
          StringCharacteristic: '#/components/schemas/StringCharacteristic'
    CharacteristicRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
    CharacteristicRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
    CharacteristicRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_MVO'
    CharacteristicSpecification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            id:
              type: string
              description: Unique ID for the characteristic
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristic. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification'
    CharacteristicSpecificationRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship'
    CharacteristicSpecificationRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
          required:
            - parentSpecificationId
            - name
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship_FVO'
    CharacteristicSpecificationRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship_MVO'
    CharacteristicSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            id:
              type: string
              description: Unique ID for the characteristic
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristic. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship_FVO'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
          required:
            - name
            - valueType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification_FVO'
    CharacteristicSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            id:
              type: string
              description: Unique ID for the characteristic
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristic. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship_MVO'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification_MVO'
    CharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            specification of a value (number or text or an object) that can be assigned to a
            Characteristic. This is an abstract base class, the actual value is in one of the
            strongly-typed subclasses : BooleanArrayCharacteristicValueSpecification,
            BooleanCharacteristicValueSpecification, FloatArrayCharacteristicValueSpecification,
            FloatCharacteristicValueSpecification, IntegerArrayCharacteristicValueSpecification,
            IntegerCharacteristicValueSpecification, MapArrayCharacteristicValueSpecification,
            MapCharacteristicValueSpecification, NumberArrayCharacteristicValueSpecification,
            NumberCharacteristicValueSpecification, ObjectArrayCharacteristicValueSpecification,
            ObjectCharacteristicValueSpecification, StringArrayCharacteristicValueSpecification,
            StringCharacteristicValueSpecification...
          properties:
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic value can take on, such as numeric, text and
                so forth
            isDefault:
              type: boolean
              description: >-
                If true, the Boolean Indicates if the value is the default value for a
                characteristic
            unitOfMeasure:
              type: string
              description: >-
                A length, surface, volume, dry measure, liquid measure, money, weight, time, and the
                like. In general, a determinate quantity or magnitude of the kind designated, taken
                as a standard of comparison for others of the same kind, in assigning to them
                numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueFrom:
              type: integer
              description: The low range value that a characteristic can take on
            valueTo:
              type: integer
              description: The upper range value that a characteristic can take on
            rangeInterval:
              type: string
              description: >-
                An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo
                attributes. If applicable, possible values are "open", "closed", "closedBottom" and
                "closedTop".
            regex:
              type: string
              description: A regular expression constraint for given value
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicValueSpecification: '#/components/schemas/CharacteristicValueSpecification'
          BooleanArrayCharacteristicValueSpecification: '#/components/schemas/BooleanArrayCharacteristicValueSpecification'
          BooleanCharacteristicValueSpecification: '#/components/schemas/BooleanCharacteristicValueSpecification'
          FloatArrayCharacteristicValueSpecification: '#/components/schemas/FloatArrayCharacteristicValueSpecification'
          FloatCharacteristicValueSpecification: '#/components/schemas/FloatCharacteristicValueSpecification'
          IntegerArrayCharacteristicValueSpecification: '#/components/schemas/IntegerArrayCharacteristicValueSpecification'
          IntegerCharacteristicValueSpecification: '#/components/schemas/IntegerCharacteristicValueSpecification'
          MapArrayCharacteristicValueSpecification: '#/components/schemas/MapArrayCharacteristicValueSpecification'
          MapCharacteristicValueSpecification: '#/components/schemas/MapCharacteristicValueSpecification'
          NumberArrayCharacteristicValueSpecification: '#/components/schemas/NumberArrayCharacteristicValueSpecification'
          NumberCharacteristicValueSpecification: '#/components/schemas/NumberCharacteristicValueSpecification'
          ObjectArrayCharacteristicValueSpecification: '#/components/schemas/ObjectArrayCharacteristicValueSpecification'
          ObjectCharacteristicValueSpecification: '#/components/schemas/ObjectCharacteristicValueSpecification'
          StringArrayCharacteristicValueSpecification: '#/components/schemas/StringArrayCharacteristicValueSpecification'
          StringCharacteristicValueSpecification: '#/components/schemas/StringCharacteristicValueSpecification'
    CharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            specification of a value (number or text or an object) that can be assigned to a
            Characteristic. This is an abstract base class, the actual value is in one of the
            strongly-typed subclasses : BooleanArrayCharacteristicValueSpecification,
            BooleanCharacteristicValueSpecification, FloatArrayCharacteristicValueSpecification,
            FloatCharacteristicValueSpecification, IntegerArrayCharacteristicValueSpecification,
            IntegerCharacteristicValueSpecification, MapArrayCharacteristicValueSpecification,
            MapCharacteristicValueSpecification, NumberArrayCharacteristicValueSpecification,
            NumberCharacteristicValueSpecification, ObjectArrayCharacteristicValueSpecification,
            ObjectCharacteristicValueSpecification, StringArrayCharacteristicValueSpecification,
            StringCharacteristicValueSpecification...
          properties:
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic value can take on, such as numeric, text and
                so forth
            isDefault:
              type: boolean
              description: >-
                If true, the Boolean Indicates if the value is the default value for a
                characteristic
            unitOfMeasure:
              type: string
              description: >-
                A length, surface, volume, dry measure, liquid measure, money, weight, time, and the
                like. In general, a determinate quantity or magnitude of the kind designated, taken
                as a standard of comparison for others of the same kind, in assigning to them
                numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueFrom:
              type: integer
              description: The low range value that a characteristic can take on
            valueTo:
              type: integer
              description: The upper range value that a characteristic can take on
            rangeInterval:
              type: string
              description: >-
                An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo
                attributes. If applicable, possible values are "open", "closed", "closedBottom" and
                "closedTop".
            regex:
              type: string
              description: A regular expression constraint for given value
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicValueSpecification: '#/components/schemas/CharacteristicValueSpecification_FVO'
          BooleanArrayCharacteristicValueSpecification: '#/components/schemas/BooleanArrayCharacteristicValueSpecification_FVO'
          BooleanCharacteristicValueSpecification: '#/components/schemas/BooleanCharacteristicValueSpecification_FVO'
          FloatArrayCharacteristicValueSpecification: '#/components/schemas/FloatArrayCharacteristicValueSpecification_FVO'
          FloatCharacteristicValueSpecification: '#/components/schemas/FloatCharacteristicValueSpecification_FVO'
          IntegerArrayCharacteristicValueSpecification: '#/components/schemas/IntegerArrayCharacteristicValueSpecification_FVO'
          IntegerCharacteristicValueSpecification: '#/components/schemas/IntegerCharacteristicValueSpecification_FVO'
          MapArrayCharacteristicValueSpecification: '#/components/schemas/MapArrayCharacteristicValueSpecification_FVO'
          MapCharacteristicValueSpecification: '#/components/schemas/MapCharacteristicValueSpecification_FVO'
          NumberArrayCharacteristicValueSpecification: '#/components/schemas/NumberArrayCharacteristicValueSpecification_FVO'
          NumberCharacteristicValueSpecification: '#/components/schemas/NumberCharacteristicValueSpecification_FVO'
          ObjectArrayCharacteristicValueSpecification: '#/components/schemas/ObjectArrayCharacteristicValueSpecification_FVO'
          ObjectCharacteristicValueSpecification: '#/components/schemas/ObjectCharacteristicValueSpecification_FVO'
          StringArrayCharacteristicValueSpecification: '#/components/schemas/StringArrayCharacteristicValueSpecification_FVO'
          StringCharacteristicValueSpecification: '#/components/schemas/StringCharacteristicValueSpecification_FVO'
    CharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            specification of a value (number or text or an object) that can be assigned to a
            Characteristic. This is an abstract base class, the actual value is in one of the
            strongly-typed subclasses : BooleanArrayCharacteristicValueSpecification,
            BooleanCharacteristicValueSpecification, FloatArrayCharacteristicValueSpecification,
            FloatCharacteristicValueSpecification, IntegerArrayCharacteristicValueSpecification,
            IntegerCharacteristicValueSpecification, MapArrayCharacteristicValueSpecification,
            MapCharacteristicValueSpecification, NumberArrayCharacteristicValueSpecification,
            NumberCharacteristicValueSpecification, ObjectArrayCharacteristicValueSpecification,
            ObjectCharacteristicValueSpecification, StringArrayCharacteristicValueSpecification,
            StringCharacteristicValueSpecification...
          properties:
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic value can take on, such as numeric, text and
                so forth
            isDefault:
              type: boolean
              description: >-
                If true, the Boolean Indicates if the value is the default value for a
                characteristic
            unitOfMeasure:
              type: string
              description: >-
                A length, surface, volume, dry measure, liquid measure, money, weight, time, and the
                like. In general, a determinate quantity or magnitude of the kind designated, taken
                as a standard of comparison for others of the same kind, in assigning to them
                numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueFrom:
              type: integer
              description: The low range value that a characteristic can take on
            valueTo:
              type: integer
              description: The upper range value that a characteristic can take on
            rangeInterval:
              type: string
              description: >-
                An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo
                attributes. If applicable, possible values are "open", "closed", "closedBottom" and
                "closedTop".
            regex:
              type: string
              description: A regular expression constraint for given value
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicValueSpecification: '#/components/schemas/CharacteristicValueSpecification_MVO'
          BooleanArrayCharacteristicValueSpecification: '#/components/schemas/BooleanArrayCharacteristicValueSpecification_MVO'
          BooleanCharacteristicValueSpecification: '#/components/schemas/BooleanCharacteristicValueSpecification_MVO'
          FloatArrayCharacteristicValueSpecification: '#/components/schemas/FloatArrayCharacteristicValueSpecification_MVO'
          FloatCharacteristicValueSpecification: '#/components/schemas/FloatCharacteristicValueSpecification_MVO'
          IntegerArrayCharacteristicValueSpecification: '#/components/schemas/IntegerArrayCharacteristicValueSpecification_MVO'
          IntegerCharacteristicValueSpecification: '#/components/schemas/IntegerCharacteristicValueSpecification_MVO'
          MapArrayCharacteristicValueSpecification: '#/components/schemas/MapArrayCharacteristicValueSpecification_MVO'
          MapCharacteristicValueSpecification: '#/components/schemas/MapCharacteristicValueSpecification_MVO'
          NumberArrayCharacteristicValueSpecification: '#/components/schemas/NumberArrayCharacteristicValueSpecification_MVO'
          NumberCharacteristicValueSpecification: '#/components/schemas/NumberCharacteristicValueSpecification_MVO'
          ObjectArrayCharacteristicValueSpecification: '#/components/schemas/ObjectArrayCharacteristicValueSpecification_MVO'
          ObjectCharacteristicValueSpecification: '#/components/schemas/ObjectCharacteristicValueSpecification_MVO'
          StringArrayCharacteristicValueSpecification: '#/components/schemas/StringArrayCharacteristicValueSpecification_MVO'
          StringCharacteristicValueSpecification: '#/components/schemas/StringCharacteristicValueSpecification_MVO'
    Characteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_FVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_FVO'
          FloatArrayCharacteristic: '#/components/schemas/FloatArrayCharacteristic_FVO'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic_FVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_FVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_FVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_FVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_FVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_FVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_FVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_FVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_FVO'
    Characteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_MVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_MVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_MVO'
          FloatArrayCharacteristic: '#/components/schemas/FloatArrayCharacteristic_MVO'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic_MVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_MVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_MVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_MVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_MVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_MVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_MVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_MVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_MVO'
    ConstraintRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Constraint reference. The Constraint resource represents a policy/rule applied to an
            entity or entity spec.
          properties:
            version:
              type: string
              description: constraint version
      discriminator:
        propertyName: '@type'
        mapping:
          ConstraintRef: '#/components/schemas/ConstraintRef'
    ConstraintRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Constraint reference. The Constraint resource represents a policy/rule applied to an
            entity or entity spec.
          properties:
            version:
              type: string
              description: constraint version
      discriminator:
        propertyName: '@type'
        mapping:
          ConstraintRef: '#/components/schemas/ConstraintRef_FVO'
    ConstraintRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            Constraint reference. The Constraint resource represents a policy/rule applied to an
            entity or entity spec.
          properties:
            version:
              type: string
              description: constraint version
      discriminator:
        propertyName: '@type'
        mapping:
          ConstraintRef: '#/components/schemas/ConstraintRef_MVO'
    Document:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Document is a tangible output from an activity
          properties:
            name:
              type: string
              description: A string used to give a name to the document
            documentType:
              type: string
              description: Name of the document type
            version:
              type: string
              description: >-
                A particular form or variety of an artefact that is different from others or from
                the original. The form represents differences in properties that characterize an
                artefact, that are not enough to warrant creating a new artefact
            category:
              type: array
              description: Collection of categories applicable
              items:
                $ref: '#/components/schemas/CategoryRef'
            creationDate:
              type: string
              format: date-time
              description: >-
                The date and time the document was created. A date and time formatted in compliance
                with the ISO8601 standard must be used.
            expiryDate:
              type: string
              format: date-time
              description: >-
                The date and time the document is to expire. A date and time formatted in compliance
                with the ISO8601 standard must be used.
            description:
              type: string
              description: free-text description of the document
            documentRelationship:
              type: array
              description: A collection of document elements
              items:
                $ref: '#/components/schemas/DocumentRefOrValue'
            documentSpecification:
              $ref: '#/components/schemas/DocumentSpecificationRefOrValue'
            lastUpdate:
              type: string
              format: date-time
              description: >-
                The date and time the document was last modified. A date and time formatted in
                compliance with the ISO8601 standard must be used.
            lifecycleState:
              type: string
              description: Represents the lifecycleState of the document.
            attachment:
              type: array
              description: Collection of attachments
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
            characteristic:
              type: array
              description: Collection of characteristics
              items:
                $ref: '#/components/schemas/Characteristic'
            relatedEntity:
              $ref: '#/components/schemas/RelatedEntity'
            relatedParty:
              type: array
              description: A collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          Document: '#/components/schemas/Document'
    DocumentAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: DocumentAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/DocumentAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentAttributeValueChangeEvent: '#/components/schemas/DocumentAttributeValueChangeEvent'
    DocumentAttributeValueChangeEventPayload:
      type: object
      description: DocumentAttributeValueChangeEventPayload generic structure
      properties:
        document:
          $ref: '#/components/schemas/Document'
    DocumentCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: DocumentCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/DocumentCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentCreateEvent: '#/components/schemas/DocumentCreateEvent'
    DocumentCreateEventPayload:
      type: object
      description: DocumentCreateEventPayload generic structure
      properties:
        document:
          $ref: '#/components/schemas/Document'
    DocumentDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: DocumentDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/DocumentDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentDeleteEvent: '#/components/schemas/DocumentDeleteEvent'
    DocumentDeleteEventPayload:
      type: object
      description: DocumentDeleteEventPayload generic structure
      properties:
        document:
          $ref: '#/components/schemas/Document'
    DocumentRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentRef: '#/components/schemas/DocumentRef'
    DocumentRefOrValue:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/Document'
        - $ref: '#/components/schemas/DocumentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Document: '#/components/schemas/Document'
          DocumentRef: '#/components/schemas/DocumentRef'
    DocumentRefOrValue_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/Document_FVO'
        - $ref: '#/components/schemas/DocumentRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Document: '#/components/schemas/Document_FVO'
          DocumentRef: '#/components/schemas/DocumentRef_FVO'
    DocumentRefOrValue_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/Document_MVO'
        - $ref: '#/components/schemas/DocumentRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Document: '#/components/schemas/Document_MVO'
          DocumentRef: '#/components/schemas/DocumentRef_MVO'
    DocumentRef_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentRef: '#/components/schemas/DocumentRef_FVO'
    DocumentRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentRef: '#/components/schemas/DocumentRef_MVO'
    DocumentSpecification:
      type: object
      description: A document specification reference
      allOf:
        - $ref: '#/components/schemas/EntitySpecification'
    DocumentSpecificationAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: DocumentSpecificationAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/DocumentSpecificationAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentSpecificationAttributeValueChangeEvent: '#/components/schemas/DocumentSpecificationAttributeValueChangeEvent'
    DocumentSpecificationAttributeValueChangeEventPayload:
      type: object
      description: DocumentSpecificationAttributeValueChangeEventPayload generic structure
      properties:
        documentSpecification:
          $ref: '#/components/schemas/DocumentSpecification'
    DocumentSpecificationCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: DocumentSpecificationCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/DocumentSpecificationCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentSpecificationCreateEvent: '#/components/schemas/DocumentSpecificationCreateEvent'
    DocumentSpecificationCreateEventPayload:
      type: object
      description: DocumentSpecificationCreateEventPayload generic structure
      properties:
        documentSpecification:
          $ref: '#/components/schemas/DocumentSpecification'
    DocumentSpecificationDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: DocumentSpecificationDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/DocumentSpecificationDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentSpecificationDeleteEvent: '#/components/schemas/DocumentSpecificationDeleteEvent'
    DocumentSpecificationDeleteEventPayload:
      type: object
      description: DocumentSpecificationDeleteEventPayload generic structure
      properties:
        documentSpecification:
          $ref: '#/components/schemas/DocumentSpecification'
    DocumentSpecificationRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentSpecificationRef: '#/components/schemas/DocumentSpecificationRef'
    DocumentSpecificationRefOrValue:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/DocumentSpecification'
        - $ref: '#/components/schemas/DocumentSpecificationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentSpecification: '#/components/schemas/DocumentSpecification'
          DocumentSpecificationRef: '#/components/schemas/DocumentSpecificationRef'
    DocumentSpecificationRefOrValue_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/DocumentSpecification_FVO'
        - $ref: '#/components/schemas/DocumentSpecificationRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentSpecification: '#/components/schemas/DocumentSpecification_FVO'
          DocumentSpecificationRef: '#/components/schemas/DocumentSpecificationRef_FVO'
    DocumentSpecificationRefOrValue_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/DocumentSpecification_MVO'
        - $ref: '#/components/schemas/DocumentSpecificationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentSpecification: '#/components/schemas/DocumentSpecification_MVO'
          DocumentSpecificationRef: '#/components/schemas/DocumentSpecificationRef_MVO'
    DocumentSpecificationRef_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentSpecificationRef: '#/components/schemas/DocumentSpecificationRef_FVO'
    DocumentSpecificationRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentSpecificationRef: '#/components/schemas/DocumentSpecificationRef_MVO'
    DocumentSpecificationStatusChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: DocumentSpecificationStatusChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/DocumentSpecificationStatusChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentSpecificationStatusChangeEvent: '#/components/schemas/DocumentSpecificationStatusChangeEvent'
    DocumentSpecificationStatusChangeEventPayload:
      type: object
      description: DocumentSpecificationStatusChangeEventPayload generic structure
      properties:
        documentSpecification:
          $ref: '#/components/schemas/DocumentSpecification'
    DocumentSpecification_FVO:
      type: object
      description: A document specification reference
      allOf:
        - $ref: '#/components/schemas/EntitySpecification_FVO'
    DocumentSpecification_MVO:
      type: object
      description: A document specification reference
      allOf:
        - $ref: '#/components/schemas/EntitySpecification_MVO'
    DocumentStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: DocumentStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/DocumentStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentStateChangeEvent: '#/components/schemas/DocumentStateChangeEvent'
    DocumentStateChangeEventPayload:
      type: object
      description: DocumentStateChangeEventPayload generic structure
      properties:
        document:
          $ref: '#/components/schemas/Document'
    Document_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: Document is a tangible output from an activity
          properties:
            name:
              type: string
              description: A string used to give a name to the document
            documentType:
              type: string
              description: Name of the document type
            version:
              type: string
              description: >-
                A particular form or variety of an artefact that is different from others or from
                the original. The form represents differences in properties that characterize an
                artefact, that are not enough to warrant creating a new artefact
            category:
              type: array
              description: Collection of categories applicable
              items:
                $ref: '#/components/schemas/CategoryRef_FVO'
            creationDate:
              type: string
              format: date-time
              description: >-
                The date and time the document was created. A date and time formatted in compliance
                with the ISO8601 standard must be used.
            expiryDate:
              type: string
              format: date-time
              description: >-
                The date and time the document is to expire. A date and time formatted in compliance
                with the ISO8601 standard must be used.
            description:
              type: string
              description: free-text description of the document
            documentRelationship:
              type: array
              description: A collection of document elements
              items:
                $ref: '#/components/schemas/DocumentRefOrValue_FVO'
            documentSpecification:
              $ref: '#/components/schemas/DocumentSpecificationRefOrValue_FVO'
            lastUpdate:
              type: string
              format: date-time
              description: >-
                The date and time the document was last modified. A date and time formatted in
                compliance with the ISO8601 standard must be used.
            lifecycleState:
              type: string
              description: Represents the lifecycleState of the document.
            attachment:
              type: array
              description: Collection of attachments
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
            characteristic:
              type: array
              description: Collection of characteristics
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            relatedEntity:
              $ref: '#/components/schemas/RelatedEntity_FVO'
            relatedParty:
              type: array
              description: A collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Document: '#/components/schemas/Document_FVO'
    Document_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: Document is a tangible output from an activity
          properties:
            name:
              type: string
              description: A string used to give a name to the document
            documentType:
              type: string
              description: Name of the document type
            version:
              type: string
              description: >-
                A particular form or variety of an artefact that is different from others or from
                the original. The form represents differences in properties that characterize an
                artefact, that are not enough to warrant creating a new artefact
            category:
              type: array
              description: Collection of categories applicable
              items:
                $ref: '#/components/schemas/CategoryRef_MVO'
            creationDate:
              type: string
              format: date-time
              description: >-
                The date and time the document was created. A date and time formatted in compliance
                with the ISO8601 standard must be used.
            expiryDate:
              type: string
              format: date-time
              description: >-
                The date and time the document is to expire. A date and time formatted in compliance
                with the ISO8601 standard must be used.
            description:
              type: string
              description: free-text description of the document
            documentRelationship:
              type: array
              description: A collection of document elements
              items:
                $ref: '#/components/schemas/DocumentRefOrValue_MVO'
            documentSpecification:
              $ref: '#/components/schemas/DocumentSpecificationRefOrValue_MVO'
            lastUpdate:
              type: string
              format: date-time
              description: >-
                The date and time the document was last modified. A date and time formatted in
                compliance with the ISO8601 standard must be used.
            lifecycleState:
              type: string
              description: Represents the lifecycleState of the document.
            attachment:
              type: array
              description: Collection of attachments
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
            characteristic:
              type: array
              description: Collection of characteristics
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            relatedEntity:
              $ref: '#/components/schemas/RelatedEntity_MVO'
            relatedParty:
              type: array
              description: A collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          Document: '#/components/schemas/Document_MVO'
    Entity:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
    EntityRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntityRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
    EntitySpecification:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            EntitySpecification is a class that offers characteristics to describe a type of entity.
            Entities are generic constructs that may be used to describe bespoke business entities
            that are not effectively covered by the existing SID model.

            Functionally, the entity specification acts as a template by which entities may be
            instantiated and described. By sharing the same specification, these entities would
            therefore share the same set of characteristics.

            Note: The ‘configurable’ attribute on the specCharacteristics determines if an entity
            instantiated from the entity specification can override the value of the attribute. When
            set to false, the entity instance may not define a value that differs from the value in
            the specification.
          properties:
            name:
              type: string
              description: Name given to the specification
            description:
              type: string
              description: Description of the specification
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of the specification
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this catalog item
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether specification represents a single specification (false),
                or a bundle of specifications (true).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            version:
              type: string
              description: specification version
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
            targetEntitySchema:
              $ref: '#/components/schemas/TargetEntitySchema'
            specCharacteristic:
              type: array
              description: List of characteristics that the entity can take
              items:
                $ref: '#/components/schemas/CharacteristicSpecification'
            relatedParty:
              type: array
              description: Parties who manage or otherwise have an interest in this specification
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            constraint:
              description: This is a list of constraint references applied to this specification
              type: array
              items:
                $ref: '#/components/schemas/ConstraintRef'
            entitySpecRelationship:
              type: array
              description: Relationship to another specification
              items:
                $ref: '#/components/schemas/EntitySpecificationRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          EntitySpecification: '#/components/schemas/EntitySpecification'
          DocumentSpecification: '#/components/schemas/DocumentSpecification'
    EntitySpecificationRelationship:
      type: object
      description: >-
        A migration, substitution, dependency or exclusivity relationship between/among entity
        specifications.
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity specification
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/AssociationSpecificationRef'
        '@baseType':
          type: string
        '@schemaLocation':
          type: string
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
    EntitySpecificationRelationship_FVO:
      type: object
      description: >-
        A migration, substitution, dependency or exclusivity relationship between/among entity
        specifications.
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity specification
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/AssociationSpecificationRef_FVO'
        '@baseType':
          type: string
        '@schemaLocation':
          type: string
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
      required:
        - role
        - relationshipType
        - validFor
        - associationSpec
    EntitySpecificationRelationship_MVO:
      type: object
      description: >-
        A migration, substitution, dependency or exclusivity relationship between/among entity
        specifications.
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity specification
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/AssociationSpecificationRef_MVO'
        '@baseType':
          type: string
        '@schemaLocation':
          type: string
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
    EntitySpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            EntitySpecification is a class that offers characteristics to describe a type of entity.
            Entities are generic constructs that may be used to describe bespoke business entities
            that are not effectively covered by the existing SID model.

            Functionally, the entity specification acts as a template by which entities may be
            instantiated and described. By sharing the same specification, these entities would
            therefore share the same set of characteristics.

            Note: The ‘configurable’ attribute on the specCharacteristics determines if an entity
            instantiated from the entity specification can override the value of the attribute. When
            set to false, the entity instance may not define a value that differs from the value in
            the specification.
          properties:
            name:
              type: string
              description: Name given to the specification
            description:
              type: string
              description: Description of the specification
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this catalog item
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether specification represents a single specification (false),
                or a bundle of specifications (true).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            version:
              type: string
              description: specification version
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
            targetEntitySchema:
              $ref: '#/components/schemas/TargetEntitySchema'
            specCharacteristic:
              type: array
              description: List of characteristics that the entity can take
              items:
                $ref: '#/components/schemas/CharacteristicSpecification_FVO'
            relatedParty:
              type: array
              description: Parties who manage or otherwise have an interest in this specification
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            constraint:
              description: This is a list of constraint references applied to this specification
              type: array
              items:
                $ref: '#/components/schemas/ConstraintRef_FVO'
            entitySpecRelationship:
              type: array
              description: Relationship to another specification
              items:
                $ref: '#/components/schemas/EntitySpecificationRelationship_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          EntitySpecification: '#/components/schemas/EntitySpecification_FVO'
          DocumentSpecification: '#/components/schemas/DocumentSpecification_FVO'
    EntitySpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            EntitySpecification is a class that offers characteristics to describe a type of entity.
            Entities are generic constructs that may be used to describe bespoke business entities
            that are not effectively covered by the existing SID model.

            Functionally, the entity specification acts as a template by which entities may be
            instantiated and described. By sharing the same specification, these entities would
            therefore share the same set of characteristics.

            Note: The ‘configurable’ attribute on the specCharacteristics determines if an entity
            instantiated from the entity specification can override the value of the attribute. When
            set to false, the entity instance may not define a value that differs from the value in
            the specification.
          properties:
            name:
              type: string
              description: Name given to the specification
            description:
              type: string
              description: Description of the specification
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this catalog item
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether specification represents a single specification (false),
                or a bundle of specifications (true).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            version:
              type: string
              description: specification version
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
            targetEntitySchema:
              $ref: '#/components/schemas/TargetEntitySchema_MVO'
            specCharacteristic:
              type: array
              description: List of characteristics that the entity can take
              items:
                $ref: '#/components/schemas/CharacteristicSpecification_MVO'
            relatedParty:
              type: array
              description: Parties who manage or otherwise have an interest in this specification
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            constraint:
              description: This is a list of constraint references applied to this specification
              type: array
              items:
                $ref: '#/components/schemas/ConstraintRef_MVO'
            entitySpecRelationship:
              type: array
              description: Relationship to another specification
              items:
                $ref: '#/components/schemas/EntitySpecificationRelationship_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          EntitySpecification: '#/components/schemas/EntitySpecification_MVO'
          DocumentSpecification: '#/components/schemas/DocumentSpecification_MVO'
    Entity_FVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
    Entity_MVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanation of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            analyticCharacteristic:
              type: array
              description: Collection of analytic characteristics
              items:
                $ref: '#/components/schemas/Characteristic'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
    ExternalIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_FVO'
    ExternalIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_MVO'
    FloatArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Float(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Float(s).
              items:
                type: number
                format: float
                description: Characteristic value
    FloatArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            floating point
          properties:
            value:
              type: array
              items:
                type: number
                format: float
                description: Characteristic value
    FloatArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            floating point
          properties:
            value:
              type: array
              items:
                type: number
                format: float
                description: Characteristic value
    FloatArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            floating point
          properties:
            value:
              type: array
              items:
                type: number
                format: float
                description: Characteristic value
    FloatArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Float(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Float(s).
              items:
                type: number
                format: float
                description: Characteristic value
          required:
            - value
    FloatArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Float(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Float(s).
              items:
                type: number
                format: float
                description: Characteristic value
    FloatCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Float.
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
    FloatCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is a floating point number
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
    FloatCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is a floating point number
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
    FloatCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is a floating point number
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
    FloatCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Float.
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
          required:
            - value
    FloatCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Float.
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
    IntegerArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Integer(s).
              items:
                type: integer
                description: Characteristic value
    IntegerArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            integer
          properties:
            value:
              type: array
              items:
                type: integer
                description: Characteristic value
    IntegerArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            integer
          properties:
            value:
              type: array
              items:
                type: integer
                description: Characteristic value
    IntegerArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            integer
          properties:
            value:
              type: array
              items:
                type: integer
                description: Characteristic value
    IntegerArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Integer(s).
              items:
                type: integer
                description: Characteristic value
          required:
            - value
    IntegerArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Integer(s).
              items:
                type: integer
                description: Characteristic value
    IntegerCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an integer number
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is an integer number
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an integer number
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
          required:
            - value
    IntegerCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
    MapArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an array of mapped objects
          properties:
            value:
              type: array
              items:
                type: object
                properties:
                  value:
                    type: object
                    additionalProperties:
                      type: object
    MapArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of mapped objects
          properties:
            value:
              type: array
              items:
                type: object
                properties:
                  value:
                    type: object
                    additionalProperties:
                      type: object
    MapArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of mapped objects
          properties:
            value:
              type: array
              items:
                type: object
                properties:
                  value:
                    type: object
                    additionalProperties:
                      type: object
    MapCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is a mapped object
          properties:
            value:
              type: object
              additionalProperties:
                type: object
              description: Value of the characteristic
    MapCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is a mapped object
          properties:
            value:
              type: object
              additionalProperties:
                type: object
              description: Value of the characteristic
    MapCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is a mapped object
          properties:
            value:
              type: object
              additionalProperties:
                type: object
              description: Value of the characteristic
    NumberArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Number(s).
              items:
                type: number
                description: Characteristic value
    NumberArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array with no
            specific format 
          properties:
            value:
              type: array
              items:
                type: number
                description: Characteristic value
    NumberArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array with no
            specific format 
          properties:
            value:
              type: array
              items:
                type: number
                description: Characteristic value
    NumberArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array with no
            specific format 
          properties:
            value:
              type: array
              items:
                type: number
                description: Characteristic value
    NumberArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Number(s).
              items:
                type: number
                description: Characteristic value
          required:
            - value
    NumberArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Number(s).
              items:
                type: number
                description: Characteristic value
    NumberCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number of no specific
            format
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number of no specific
            format
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number of no specific
            format
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
          required:
            - value
    NumberCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
    ObjectArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
    ObjectArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an array of objects
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
    ObjectArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of objects
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
    ObjectArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of objects
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
    ObjectArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
          required:
            - value
    ObjectArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
    ObjectCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is any object
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is any object
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is any object
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
          required:
            - value
    ObjectCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
    PartyRef:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
    PartyRefOrPartyRoleRef:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRefOrPartyRoleRef_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_FVO'
        - $ref: '#/components/schemas/PartyRoleRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRefOrPartyRoleRef_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRef_FVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
    PartyRef_MVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
    PartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    Quantity:
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          default: 1
          description: Numeric value in a given unit
        units:
          type: string
          description: Unit
    RelatedEntity:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'A reference to an entity, where the type of the entity is not known in advance.'
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntity: '#/components/schemas/RelatedEntity'
    RelatedEntity_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'A reference to an entity, where the type of the entity is not known in advance.'
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRef'
          required:
            - role
            - entity
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntity: '#/components/schemas/RelatedEntity_FVO'
    RelatedEntity_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'A reference to an entity, where the type of the entity is not known in advance.'
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntity: '#/components/schemas/RelatedEntity_MVO'
    RelatedPartyRefOrPartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
    RelatedPartyRefOrPartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_FVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
    RelatedPartyRefOrPartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
    StringArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              description: Collection of string characteristics
              items:
                type: string
                description: Characteristic value
    StringArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an array of strings
          properties:
            value:
              type: array
              items:
                type: string
                description: Characteristic value
    StringArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of strings
          properties:
            value:
              type: array
              items:
                type: string
                description: Characteristic value
    StringArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of strings
          properties:
            value:
              type: array
              items:
                type: string
                description: Characteristic value
    StringArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              description: Collection of string characteristics
              items:
                type: string
                description: Characteristic value
          required:
            - value
    StringArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              description: Collection of string characteristics
              items:
                type: string
                description: Characteristic value
    StringCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is a string
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is a string
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is a string
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
          required:
            - value
    StringCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
    TargetEntitySchema:
      type: object
      description: >-
        The reference object to the schema and type of target entity which is described by a
        specification
      properties:
        '@type':
          type: string
          description: Class type of the target entity
        '@schemaLocation':
          type: string
          description: This field provides a link to the schema describing the target entity
    TargetEntitySchema_MVO:
      type: object
      description: >-
        The reference object to the schema and type of target entity which is described by a
        specification
      properties:
        '@type':
          type: string
          description: Class type of the target entity
        '@schemaLocation':
          type: string
          description: This field provides a link to the schema describing the target entity
    TimePeriod:
      type: object
      description: 'A period of time, either as a deadline (endDateTime only) a startDateTime only, or both'
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    Hub_FVO:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - callback
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - properties:
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
    Hub:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      allOf:
        - $ref: '#/components/schemas/Entity'
        - properties:
            id:
              type: string
              description: Id of the listener
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
          required:
            - callback
    JsonPatch:
      type: object
      description: A JSONPatch document as defined by RFC 6902
      required:
        - op
        - path
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON-Pointer
        value:
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    JsonPatchOperations:
      description: JSONPatch Operations document as defined by RFC 6902
      type: array
      items:
        $ref: '#/components/schemas/JsonPatch'
  parameters:
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Resource
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      schema:
        type: integer
  requestBodies:
    Document_FVO:
      description: The Document to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Document_FVO'
          examples:
            Document_create_example:
              $ref: '#/components/examples/Document_create_example_request'
      required: true
    Document_MVO:
      description: The Document to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Document_MVO'
          examples:
            Document_Update_example_application-json_:
              $ref: '#/components/examples/Document_Update_example_application-json__request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/Document_MVO'
          examples:
            Document_Update_example_Merge_:
              $ref: '#/components/examples/Document_Update_example_Merge__request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            Document_Update_example_JSON-PATCH_:
              $ref: '#/components/examples/Document_Update_example_JSON-PATCH__request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            Document_Update_example_JSON-PATCH-QUERY_:
              $ref: '#/components/examples/Document_Update_example_JSON-PATCH-QUERY__request'
      required: true
    DocumentCreateEvent:
      description: Document create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentCreateEvent'
          examples:
            Document_Create_Notification_Event:
              $ref: '#/components/examples/Document_Create_Notification_Event_request'
      required: true
    DocumentAttributeValueChangeEvent:
      description: Document attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentAttributeValueChangeEvent'
          examples:
            Document_Attribute_Value_Change_Notification_Event:
              $ref: '#/components/examples/Document_Attribute_Value_Change_Notification_Event_request'
      required: true
    DocumentStateChangeEvent:
      description: Document stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentStateChangeEvent'
          examples:
            Document_State_Change_Notification_Event:
              $ref: '#/components/examples/Document_State_Change_Notification_Event_request'
      required: true
    DocumentDeleteEvent:
      description: Document delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentDeleteEvent'
          examples:
            Document_Delete_Notification_Event:
              $ref: '#/components/examples/Document_Delete_Notification_Event_request'
      required: true
    DocumentSpecification_FVO:
      description: The DocumentSpecification to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentSpecification_FVO'
          examples:
            DocumentSpecification_create_example:
              $ref: '#/components/examples/DocumentSpecification_create_example_request'
      required: true
    DocumentSpecification_MVO:
      description: The DocumentSpecification to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentSpecification_MVO'
          examples:
            DocumentSpecification_Update_example_application-json_:
              $ref: '#/components/examples/DocumentSpecification_Update_example_application-json__request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/DocumentSpecification_MVO'
          examples:
            DocumentSpecification_Update_example_Merge_:
              $ref: '#/components/examples/DocumentSpecification_Update_example_Merge__request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            DocumentSpecification_Update_example_JSON-PATCH_:
              $ref: '#/components/examples/DocumentSpecification_Update_example_JSON-PATCH__request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            DocumentSpecification_Update_example_JSON-PATCH-QUERY_:
              $ref: '#/components/examples/DocumentSpecification_Update_example_JSON-PATCH-QUERY__request'
      required: true
    DocumentSpecificationCreateEvent:
      description: DocumentSpecification create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentSpecificationCreateEvent'
          examples:
            Document_Specification_Create_Notification_Event:
              $ref: '#/components/examples/Document_Specification_Create_Notification_Event_request'
      required: true
    DocumentSpecificationAttributeValueChangeEvent:
      description: DocumentSpecification attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentSpecificationAttributeValueChangeEvent'
          examples:
            Document_Specification_Attribute_Value_Change_Notification_Event:
              $ref: >-
                #/components/examples/Document_Specification_Attribute_Value_Change_Notification_Event_request
      required: true
    DocumentSpecificationDeleteEvent:
      description: DocumentSpecification delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentSpecificationDeleteEvent'
          examples:
            Document_Specification_Delete_Notification_Event:
              $ref: '#/components/examples/Document_Specification_Delete_Notification_Event_request'
      required: true
    DocumentSpecificationStatusChangeEvent:
      description: DocumentSpecification statusChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentSpecificationStatusChangeEvent'
          examples:
            Document_Specification_Status_Change_Notification_Event:
              $ref: >-
                #/components/examples/Document_Specification_Status_Change_Notification_Event_request
      required: true
    Attachment_FVO:
      description: The Attachment to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Attachment_FVO'
          examples:
            Attachment_create_example:
              $ref: '#/components/examples/Attachment_create_example_request'
      required: true
    Attachment_MVO:
      description: The Attachment to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Attachment_MVO'
          examples:
            Attachment_Update_example_application-json_:
              $ref: '#/components/examples/Attachment_Update_example_application-json__request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/Attachment_MVO'
          examples:
            Attachment_Update_example_Merge_:
              $ref: '#/components/examples/Attachment_Update_example_Merge__request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            Attachment_Update_example_JSON-PATCH_:
              $ref: '#/components/examples/Attachment_Update_example_JSON-PATCH__request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            Attachment_Update_example_JSON-PATCH-QUERY_:
              $ref: '#/components/examples/Attachment_Update_example_JSON-PATCH-QUERY__request'
      required: true
    AttachmentCreateEvent:
      description: Attachment create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AttachmentCreateEvent'
          examples:
            Attachment_Create_Notification_Event:
              $ref: '#/components/examples/Attachment_Create_Notification_Event_request'
      required: true
    AttachmentAttributeValueChangeEvent:
      description: Attachment attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AttachmentAttributeValueChangeEvent'
          examples:
            Attachment_Attribute_Value_Change_Notification_Event:
              $ref: '#/components/examples/Attachment_Attribute_Value_Change_Notification_Event_request'
      required: true
    AttachmentDeleteEvent:
      description: Attachment delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AttachmentDeleteEvent'
          examples:
            Attachment_Delete_Notification_Event:
              $ref: '#/components/examples/Attachment_Delete_Notification_Event_request'
      required: true
    Hub_FVO:
      description: Data containing the callback endpoint to deliver the information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
          examples:
            Basic Hub Example Request:
              value:
                '@type': Hub
                callback: 'https://host/tmf-api/specificAPIName/v5/listener/specificEventListener'
                query: data
      required: true
  responses:
    '200':
      description: OK
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Bad Request Error
              value:
                '@type': Error
                code: ERR400
                reason: Bad Request
                message: >-
                  The server could not understand the request due to invalid syntax. Please correct
                  the syntax and try again.
                referenceError: 'https://host/errors'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Unauthorized Error
              value:
                '@type': Error
                code: ERR401
                reason: Unauthorized
                message: >-
                  You are not authorized to access the requested resource. Please provide the
                  correct credentials.
                referenceError: 'https://host/errors'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Forbidden Error
              value:
                '@type': Error
                code: ERR403
                reason: Forbidden
                message: >-
                  You don't have the permission to access the requested resource. It is either
                  read-protected or not readable by the server.
                referenceError: 'https://host/errors'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Not Found Error
              value:
                '@type': Error
                code: ERR404
                reason: Not Found
                message: The requested URL was not found on the server.
                referenceError: 'https://host/errors'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Method Not allowed Error
              value:
                '@type': Error
                code: ERR405
                reason: Method Not allowed
                message: The method is not allowed for the requested URL.
                referenceError: 'https://host/errors'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Conflict Error
              value:
                '@type': Error
                code: ERR409
                reason: Conflict
                message: >-
                  The request could not be completed due to a conflict with the current state of the
                  target resource.
                referenceError: 'https://host/errors'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Internal Server Error example
              value:
                '@type': Error
                code: ERR500
                reason: Internal Server Error
                message: The server encountered an internal error. Please contact the system administrator.
                referenceError: 'https://host/errors'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Not Implemented Error
              value:
                '@type': Error
                code: ERR501
                reason: The requested operation is not implemented
                message: >-
                  The requested operation is not implemented. Please contact the system
                  administrator.
                referenceError: 'https://host/errors'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Service Unavailable Error
              value:
                '@type': Error
                code: ERR503
                reason: Service Unavailable
                message: The service is currently unavailable. Please try again later.
                referenceError: 'https://host/errors'
    200DocumentArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Document'
          examples:
            Document_list_example:
              $ref: '#/components/examples/Document_list_example_response'
    200Document_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Document'
          examples:
            Document_retrieve_example:
              $ref: '#/components/examples/Document_retrieve_example_response'
    200Document_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Document'
          examples:
            Document_Update_example_application-json_:
              $ref: '#/components/examples/Document_Update_example_application-json__response'
    201Document:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Document'
          examples:
            Document_create_example:
              $ref: '#/components/examples/Document_create_example_response'
    200DocumentSpecificationArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/DocumentSpecification'
          examples:
            DocumentSpecification_list_example:
              $ref: '#/components/examples/DocumentSpecification_list_example_response'
    200DocumentSpecification_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentSpecification'
          examples:
            DocumentSpecification_retrieve_example:
              $ref: '#/components/examples/DocumentSpecification_retrieve_example_response'
    200DocumentSpecification_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentSpecification'
          examples:
            DocumentSpecification_Update_example_application-json_:
              $ref: >-
                #/components/examples/DocumentSpecification_Update_example_application-json__response
    201DocumentSpecification:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentSpecification'
          examples:
            DocumentSpecification_create_example:
              $ref: '#/components/examples/DocumentSpecification_create_example_response'
    200AttachmentArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Attachment'
          examples:
            Attachment_list_example:
              $ref: '#/components/examples/Attachment_list_example_response'
    200Attachment_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Attachment'
          examples:
            Attachment_retrieve_example:
              $ref: '#/components/examples/Attachment_retrieve_example_response'
    200Attachment_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Attachment'
          examples:
            Attachment_Update_example_application-json_:
              $ref: '#/components/examples/Attachment_Update_example_application-json__response'
    201Attachment:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Attachment'
          examples:
            Attachment_create_example:
              $ref: '#/components/examples/Attachment_create_example_response'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Error example
              value:
                '@type': Error
                code: ERR001
                reason: Missing information
                message: Please provide the additional example information
                referenceError: 'https://host/errors'
    Hub:
      description: Notified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
          examples:
            basic:
              summary: Hub example
              value:
                '@type': Hub
                callback: 'https://host/tmf-api/specificAPIName/v5/listener/specificEventListener'
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      schema:
        type: integer
    X-Result-Count:
      description: Actual number of items returned in the response body
      schema:
        type: integer
  securitySchemes: {}
  examples:
    Document_list_example_response:
      value:
        - '@type': Document
          href: 'https://serverRoot/tmf-api/document/v5/document/9555-3c9c417feead'
          id: 9555-3c9c417feead
          name: 'Designing Web APIs: Building APIs That Developers Love'
          documentType: paperback
          version: '1'
          category:
            - '@type': CategoryRef
              id: '269422'
              name: Computing & Internet > Web Development > Web Design
          creationDate: '2008-09-14T10:00:00Z'
          description: >-
            Designing an API is complicated to begin with, but evolving your API design over time
            makes the process even more difficult. There are several books on the topic, but ...
          documentSpecification:
            '@type': DocumentSpecification
            href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/a65d-a08c744f2fe7'
            id: a65d-a08c744f2fe7
            name: paperback
          lastUpdate: '2021-11-05T10:15:26.007Z'
          lifecycleState: published
          attachment:
            - '@type': Attachment
              href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
              id: '1492026921'
              name: Link to paperback
              url: 'https://www.amazon.co.uk/Designing-Web-APIs-Building-Developers/dp/1492026921'
              validFor:
                startDateTime: '2024-11-05T10:15:26.007Z'
                endDateTime: '2008-09-14T10:00:00Z'
              attachmentType: url
              mimeType: text/html
          characteristic:
            - '@type': IntegerCharacteristic
              name: pages
              valueType: integer
              value: 200
            - '@type': StringCharacteristic
              name: language
              valueType: string
              value: en
            - '@type': StringCharacteristic
              name: isbn-10
              valueType: string
              value: '9781492026921'
          relatedParty:
            - '@type': RelatedPartyRefOrPartyRoleRef
              role: Author
              partyOrPartyRole:
                '@type': PartyRef
                href: 'http://serverlocation:port/tmf-api/partyManagement/v5/individual/789'
                id: '789'
                name: Brenda Jin
                '@referredType': Individual
            - '@type': RelatedPartyRefOrPartyRoleRef
              role: Publisher
              partyOrPartyRole:
                '@type': PartyRef
                href: 'http://serverlocation:port/tmf-api/partyManagement/v5/organization123'
                id: '123'
                name: O'Reilly
                '@referredType': Organization
      description: Retrieving previous Document details for the documentType of 'paperback'
    Document_retrieve_example_response:
      value:
        '@type': Document
        href: 'https://serverRoot/tmf-api/document/v5/document/9555-3c9c417feead'
        id: 9555-3c9c417feead
        name: 'Designing Web APIs: Building APIs That Developers Love'
        documentType: paperback
        version: '1'
        category:
          - '@type': CategoryRef
            id: '269422'
            name: Computing & Internet > Web Development > Web Design
        creationDate: '2008-09-14T10:00:00Z'
        description: >-
          Designing an API is complicated to begin with, but evolving your API design over time
          makes the process even more difficult. There are several books on the topic, but ...
        documentSpecification:
          '@type': DocumentSpecificationRef
          href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/a65d-a08c744f2fe7'
          id: a65d-a08c744f2fe7
          name: paperback
        lastUpdate: '2021-11-05T10:15:26.007Z'
        lifecycleState: published
        attachment:
          - '@type': AttachmentRef
            href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
            id: '1492026921'
            name: Link to paperback
        characteristic:
          - '@type': IntegerCharacteristic
            name: pages
            valueType: integer
            value: 200
          - '@type': StringCharacteristic
            name: language
            valueType: string
            value: en
          - '@type': StringCharacteristic
            name: isbn-10
            valueType: string
            value: '9781492026921'
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: Author
            partyOrPartyRole:
              '@type': PartyRef
              href: 'http://serverlocation:port/tmf-api/partyManagement/v5/individual/789'
              id: '789'
              name: Brenda Jin
              '@referredType': Individual
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: Publisher
            partyOrPartyRole:
              '@type': PartyRef
              href: 'http://serverlocation:port/tmf-api/partyManagement/v5/organization123'
              id: '123'
              name: O'Reilly
              '@referredType': Organization
      description: A request for a previous Document. The criteria is the Document id 9555-3c9c417feead
    DocumentSpecification_list_example_response:
      value:
        - '@type': DocumentSpecification
          href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/9b12-789948415bd7'
          id: 9b12-789948415bd7
          name: paperback
          description: Specification for a Paperback Book
          lastUpdate: '2021-11-05T11:03:57.693Z'
          lifecycleStatus: published
          version: 1.0.0
          specCharacteristic:
            - '@type': CharacteristicSpecification
              name: pages
              valueType: integer
              description: The number of pages in this paperback book
              configurable: true
              minCardinality: 1
              maxCardinality: 1
              extensible: false
              characteristicValueSpecification:
                - '@type': IntegerCharacteristicValueSpecification
                  unitOfMeasure: pages
                  valueFrom: 1
            - '@type': CharacteristicSpecification
              name: language
              valueType: string
              description: The 2-character ISO 639-1 language code that this book is published in
              configurable: true
              minCardinality: 1
              maxCardinality: 1
              extensible: false
              characteristicValueSpecification:
                - '@type': StringCharacteristicValueSpecification
                  regex: '^[a-z]{2}'
            - '@type': CharacteristicSpecification
              name: isbn-10
              valueType: string
              description: The 10-digit ISO 2108 International Standard Book Number (ISBN) of this book
              configurable: true
              minCardinality: 1
              maxCardinality: 1
              extensible: false
              characteristicValueSpecification:
                - '@type': StringCharacteristicValueSpecification
                  regex: '^[0-9]{10}'
      description: Retrieving details of DocumentSpecifications which are published
    DocumentSpecification_retrieve_example_response:
      value:
        '@type': DocumentSpecification
        href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/9b12-789948415bd7'
        id: 9b12-789948415bd7
        name: paperback
        description: Specification for a Paperback Book
        lastUpdate: '2021-11-05T11:03:57.693Z'
        lifecycleStatus: published
        version: 1.0.0
        specCharacteristic:
          - '@type': CharacteristicSpecification
            name: pages
            valueType: integer
            description: The number of pages in this paperback book
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': IntegerCharacteristicValueSpecification
                unitOfMeasure: pages
                valueFrom: 1
          - '@type': CharacteristicSpecification
            name: language
            valueType: string
            description: The 2-character ISO 639-1 language code that this book is published in
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                regex: '^[a-z]{2}'
          - '@type': CharacteristicSpecification
            name: isbn-10
            valueType: string
            description: The 10-digit ISO 2108 International Standard Book Number (ISBN) of this book
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                regex: '^[0-9]{10}'
      description: A request for a specific DocumentSpecification with an id 91b2-43106cbc8191
    Attachment_list_example_response:
      value:
        - '@type': Attachment
          href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
          id: '1492026921'
          name: Link to paperback
          url: 'https://www.amazon.co.uk/Designing-Web-APIs-Building-Developers/dp/1492026921'
          validFor:
            startDateTime: '2024-11-05T10:15:26.007Z'
            endDateTime: '2008-09-14T10:00:00Z'
          attachmentType: url
          mimeType: text/html
      description: Retrieving previous Document details for the documentType of 'paperback'
    Attachment_retrieve_example_response:
      value:
        '@type': Attachment
        href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
        id: '1492026921'
        name: Link to paperback
        url: 'https://www.amazon.co.uk/Designing-Web-APIs-Building-Developers/dp/1492026921'
        validFor:
          startDateTime: '2024-11-05T10:15:26.007Z'
          endDateTime: '2008-09-14T10:00:00Z'
        attachmentType: url
        mimeType: text/html
      description: A request for a previous Attachment. The criteria is the Attachment id 1492026921
    Document_create_example_request:
      value:
        '@type': Document
        name: 'Designing Web APIs: Building APIs That Developers Love'
        documentType: paperback
        version: '1'
        category:
          - '@type': CategoryRef
            id: '269422'
            name: Computing & Internet > Web Development > Web Design
        creationDate: '2008-09-14T10:00:00Z'
        description: >-
          Designing an API is complicated to begin with, but evolving your API design over time
          makes the process even more difficult. There are several books on the topic, but ...
        documentSpecification:
          '@type': DocumentSpecificationRef
          href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/a65d-a08c744f2fe7'
          id: a65d-a08c744f2fe7
          name: paperback
        lastUpdate: '2021-11-05T10:15:26.007Z'
        lifecycleState: published
        attachment:
          - '@type': AttachmentRef
            href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
            id: '1492026921'
            name: Link to paperback
        characteristic:
          - '@type': IntegerCharacteristic
            name: pages
            valueType: integer
            value: 200
          - '@type': StringCharacteristic
            name: language
            valueType: string
            value: en
          - '@type': StringCharacteristic
            name: isbn-10
            valueType: string
            value: '9781492026921'
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: Author
            partyOrPartyRole:
              '@type': PartyRef
              href: 'http://serverlocation:port/tmf-api/partyManagement/v5/individual/789'
              id: '789'
              name: Brenda Jin
              '@referredType': Individual
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: Publisher
            partyOrPartyRole:
              '@type': PartyRef
              href: 'http://serverlocation:port/tmf-api/partyManagement/v5/organization123'
              id: '123'
              name: O'Reilly
              '@referredType': Organization
      description: Here is an example of a request for creating a Document.
    Document_create_example_response:
      value:
        '@type': Document
        href: 'https://serverRoot/tmf-api/document/v5/document/9555-3c9c417feead'
        id: 9555-3c9c417feead
        name: 'Designing Web APIs: Building APIs That Developers Love'
        documentType: paperback
        version: '1'
        category:
          - '@type': CategoryRef
            id: '269422'
            name: Computing & Internet > Web Development > Web Design
        creationDate: '2008-09-14T10:00:00Z'
        description: >-
          Designing an API is complicated to begin with, but evolving your API design over time
          makes the process even more difficult. There are several books on the topic, but ...
        documentSpecification:
          '@type': DocumentSpecificationRef
          href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/a65d-a08c744f2fe7'
          id: a65d-a08c744f2fe7
          name: paperback
        lastUpdate: '2021-11-05T10:15:26.007Z'
        lifecycleState: published
        attachment:
          - '@type': AttachmentRef
            href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
            id: '1492026921'
            name: Link to paperback
        characteristic:
          - '@type': IntegerCharacteristic
            name: pages
            valueType: integer
            value: 200
          - '@type': StringCharacteristic
            name: language
            valueType: string
            value: en
          - '@type': StringCharacteristic
            name: isbn-10
            valueType: string
            value: '9781492026921'
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: Author
            partyOrPartyRole:
              '@type': PartyRef
              href: 'http://serverlocation:port/tmf-api/partyManagement/v5/individual/789'
              id: '789'
              name: Brenda Jin
              '@referredType': Individual
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: Publisher
            partyOrPartyRole:
              '@type': PartyRef
              href: 'http://serverlocation:port/tmf-api/partyManagement/v5/organization123'
              id: '123'
              name: O'Reilly
              '@referredType': Organization
      description: Here is an example of a response for creating a Document.
    DocumentSpecification_create_example_request:
      value:
        '@type': DocumentSpecification
        name: paperback
        description: Specification for a Paperback Book
        lifecycleStatus: published
        version: 1.0.0
        specCharacteristic:
          - '@type': CharacteristicSpecification
            name: pages
            valueType: integer
            description: The number of pages in this paperback book
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': IntegerCharacteristicValueSpecification
                unitOfMeasure: pages
                valueFrom: 1
          - '@type': CharacteristicSpecification
            name: language
            valueType: string
            description: The 2-character ISO 639-1 language code that this book is published in
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                regex: '^[a-z]{2}'
          - '@type': CharacteristicSpecification
            name: isbn-10
            valueType: string
            description: The 10-digit ISO 2108 International Standard Book Number (ISBN) of this book
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                regex: '^[0-9]{10}'
      description: Here is an example of a request for creating a Document Specification.
    DocumentSpecification_create_example_response:
      value:
        '@type': DocumentSpecification
        href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/9b12-789948415bd7'
        id: 9b12-789948415bd7
        name: paperback
        description: Specification for a Paperback Book
        lastUpdate: '2021-11-05T11:03:57.693Z'
        lifecycleStatus: published
        version: 1.0.0
        specCharacteristic:
          - '@type': CharacteristicSpecification
            name: pages
            valueType: integer
            description: The number of pages in this paperback book
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': IntegerCharacteristicValueSpecification
                unitOfMeasure: pages
                valueFrom: 1
          - '@type': CharacteristicSpecification
            name: language
            valueType: string
            description: The 2-character ISO 639-1 language code that this book is published in
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                regex: '^[a-z]{2}'
          - '@type': CharacteristicSpecification
            name: isbn-10
            valueType: string
            description: The 10-digit ISO 2108 International Standard Book Number (ISBN) of this book
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                regex: '^[0-9]{10}'
      description: Here is an example of a response for creating a Document Specification.
    Attachment_create_example_request:
      value:
        '@type': Attachment
        name: Link to paperback
        url: 'https://www.amazon.co.uk/Designing-Web-APIs-Building-Developers/dp/1492026921'
        validFor:
          startDateTime: '2024-11-05T10:15:26.007Z'
          endDateTime: '2008-09-14T10:00:00Z'
        attachmentType: url
        mimeType: text/html
      description: Here is an example of a request for creating an Attachment.
    Attachment_create_example_response:
      value:
        '@type': Attachment
        href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
        id: '1492026921'
        name: Link to paperback
        url: 'https://www.amazon.co.uk/Designing-Web-APIs-Building-Developers/dp/1492026921'
        validFor:
          startDateTime: '2024-11-05T10:15:26.007Z'
          endDateTime: '2008-09-14T10:00:00Z'
        attachmentType: url
        mimeType: text/html
      description: Here is an example of a response for creating an attachment.
    Document_Update_example_application-json__request:
      value:
        '@type': Document
        name: 'Designing Web APIs: Building APIs That Developers really Love'
      description: Here is an example of a request for patching an document.
    Document_Update_example_application-json__response:
      value:
        '@type': Document
        href: 'https://serverRoot/tmf-api/document/v5/document/9555-3c9c417feead'
        id: 9555-3c9c417feead
        name: 'Designing Web APIs: Building APIs That Developers really Love'
        documentType: paperback
        version: '1'
        category:
          - '@type': CategoryRef
            id: '269422'
            name: Computing & Internet > Web Development > Web Design
        creationDate: '2008-09-14T10:00:00Z'
        description: >-
          Designing an API is complicated to begin with, but evolving your API design over time
          makes the process even more difficult. There are several books on the topic, but ...
        documentSpecification:
          '@type': DocumentSpecification
          href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/a65d-a08c744f2fe7'
          id: a65d-a08c744f2fe7
          name: paperback
        lastUpdate: '2021-11-05T10:15:26.007Z'
        lifecycleState: published
        attachment:
          - '@type': Attachment
            href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
            id: '1492026921'
            name: Link to paperback
            url: 'https://www.amazon.co.uk/Designing-Web-APIs-Building-Developers/dp/1492026921'
            validFor:
              startDateTime: '2024-11-05T10:15:26.007Z'
              endDateTime: '2008-09-14T10:00:00Z'
            attachmentType: url
            mimeType: text/html
        characteristic:
          - '@type': IntegerCharacteristic
            name: pages
            valueType: integer
            value: 200
          - '@type': StringCharacteristic
            name: language
            valueType: string
            value: en
          - '@type': StringCharacteristic
            name: isbn-10
            valueType: string
            value: '9781492026921'
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: Author
            partyOrPartyRole:
              '@type': PartyRef
              href: 'http://serverlocation:port/tmf-api/partyManagement/v5/individual/789'
              id: '789'
              name: Brenda Jin
              '@referredType': Individual
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: Publisher
            partyOrPartyRole:
              '@type': PartyRef
              href: 'http://serverlocation:port/tmf-api/partyManagement/v5/organization123'
              id: '123'
              name: O'Reilly
              '@referredType': Organization
      description: Here is an example of a response for creating an document.
    Document_Update_example_Merge__request:
      value:
        '@type': Document
        name: 'Designing Web APIs: Building APIs That Developers really Love'
      description: Here is an example of a request for patching an document.
    Document_Update_example_Merge__response:
      value:
        '@type': Document
        href: 'https://serverRoot/tmf-api/document/v5/document/9555-3c9c417feead'
        id: 9555-3c9c417feead
        name: 'Designing Web APIs: Building APIs That Developers really Love'
        documentType: paperback
        version: '1'
        category:
          - '@type': CategoryRef
            id: '269422'
            name: Computing & Internet > Web Development > Web Design
        creationDate: '2008-09-14T10:00:00Z'
        description: >-
          Designing an API is complicated to begin with, but evolving your API design over time
          makes the process even more difficult. There are several books on the topic, but ...
        documentSpecification:
          '@type': DocumentSpecification
          href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/a65d-a08c744f2fe7'
          id: a65d-a08c744f2fe7
          name: paperback
        lastUpdate: '2021-11-05T10:15:26.007Z'
        lifecycleState: published
        attachment:
          - '@type': Attachment
            href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
            id: '1492026921'
            name: Link to paperback
            url: 'https://www.amazon.co.uk/Designing-Web-APIs-Building-Developers/dp/1492026921'
            validFor:
              startDateTime: '2024-11-05T10:15:26.007Z'
              endDateTime: '2008-09-14T10:00:00Z'
            attachmentType: url
            mimeType: text/html
        characteristic:
          - '@type': IntegerCharacteristic
            name: pages
            valueType: integer
            value: 200
          - '@type': StringCharacteristic
            name: language
            valueType: string
            value: en
          - '@type': StringCharacteristic
            name: isbn-10
            valueType: string
            value: '9781492026921'
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: Author
            partyOrPartyRole:
              '@type': PartyRef
              href: 'http://serverlocation:port/tmf-api/partyManagement/v5/individual/789'
              id: '789'
              name: Brenda Jin
              '@referredType': Individual
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: Publisher
            partyOrPartyRole:
              '@type': PartyRef
              href: 'http://serverlocation:port/tmf-api/partyManagement/v5/organization123'
              id: '123'
              name: O'Reilly
              '@referredType': Organization
      description: Here is an example of a response for patching an document.
    Document_Update_example_JSON-PATCH__request:
      value:
        - op: replace
          path: /name
          value: 'Designing Web APIs: Building APIs That Developers really Love'
        - op: replace
          path: /version
          value: '2'
      description: Here is an example of a request for patching an document.
    Document_Update_example_JSON-PATCH__response:
      value:
        '@type': Document
        href: 'https://serverRoot/tmf-api/document/v5/document/9555-3c9c417feead'
        id: 9555-3c9c417feead
        name: 'Designing Web APIs: Building APIs That Developers really Love'
        documentType: paperback
        version: '2'
        category:
          - '@type': CategoryRef
            id: '269422'
            name: Computing & Internet > Web Development > Web Design
        creationDate: '2008-09-14T10:00:00Z'
        description: >-
          Designing an API is complicated to begin with, but evolving your API design over time
          makes the process even more difficult. There are several books on the topic, but ...
        documentSpecification:
          '@type': DocumentSpecification
          href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/a65d-a08c744f2fe7'
          id: a65d-a08c744f2fe7
          name: paperback
        lastUpdate: '2021-11-05T10:15:26.007Z'
        lifecycleState: published
        attachment:
          - '@type': Attachment
            href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
            id: '1492026921'
            name: Link to paperback
            url: 'https://www.amazon.co.uk/Designing-Web-APIs-Building-Developers/dp/1492026921'
            validFor:
              startDateTime: '2024-11-05T10:15:26.007Z'
              endDateTime: '2008-09-14T10:00:00Z'
            attachmentType: url
            mimeType: text/html
        characteristic:
          - '@type': IntegerCharacteristic
            name: pages
            valueType: integer
            value: 200
          - '@type': StringCharacteristic
            name: language
            valueType: string
            value: en
          - '@type': StringCharacteristic
            name: isbn-10
            valueType: string
            value: '9781492026921'
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: Author
            partyOrPartyRole:
              '@type': PartyRef
              href: 'http://serverlocation:port/tmf-api/partyManagement/v5/individual/789'
              id: '789'
              name: Brenda Jin
              '@referredType': Individual
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: Publisher
            partyOrPartyRole:
              '@type': PartyRef
              href: 'http://serverlocation:port/tmf-api/partyManagement/v5/organization123'
              id: '123'
              name: O'Reilly
              '@referredType': Organization
      description: Here is an example of a response for creating an document.
    Document_Update_example_JSON-PATCH-QUERY__request:
      value:
        - op: replace
          path: /name
          value: 'Designing Web APIs: Building APIs That Developers really Love'
        - op: replace
          path: /charachteristc?name=pages
          value:
            '@type': IntegerCharacteristicValueSpecification
            name: pages
            valueType: integer
            value: 212
      description: Here is an example of a request for patching an document.
    Document_Update_example_JSON-PATCH-QUERY__response:
      value:
        '@type': Document
        href: 'https://serverRoot/tmf-api/document/v5/document/9555-3c9c417feead'
        id: 9555-3c9c417feead
        name: 'Designing Web APIs: Building APIs That Developers really Love'
        documentType: paperback
        version: '1'
        category:
          - '@type': CategoryRef
            id: '269422'
            name: Computing & Internet > Web Development > Web Design
        creationDate: '2008-09-14T10:00:00Z'
        description: >-
          Designing an API is complicated to begin with, but evolving your API design over time
          makes the process even more difficult. There are several books on the topic, but ...
        documentSpecification:
          '@type': DocumentSpecification
          href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/a65d-a08c744f2fe7'
          id: a65d-a08c744f2fe7
          name: paperback
        lastUpdate: '2021-11-05T10:15:26.007Z'
        lifecycleState: published
        attachment:
          - '@type': Attachment
            href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
            id: '1492026921'
            name: Link to paperback
            url: 'https://www.amazon.co.uk/Designing-Web-APIs-Building-Developers/dp/1492026921'
            validFor:
              startDateTime: '2024-11-05T10:15:26.007Z'
              endDateTime: '2008-09-14T10:00:00Z'
            attachmentType: url
            mimeType: text/html
        characteristic:
          - '@type': IntegerCharacteristic
            name: pages
            valueType: integer
            value: 212
          - '@type': StringCharacteristic
            name: language
            valueType: string
            value: en
          - '@type': StringCharacteristic
            name: isbn-10
            valueType: string
            value: '9781492026921'
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: Author
            partyOrPartyRole:
              '@type': PartyRef
              href: 'http://serverlocation:port/tmf-api/partyManagement/v5/individual/789'
              id: '789'
              name: Brenda Jin
              '@referredType': Individual
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: Publisher
            partyOrPartyRole:
              '@type': PartyRef
              href: 'http://serverlocation:port/tmf-api/partyManagement/v5/organization123'
              id: '123'
              name: O'Reilly
              '@referredType': Organization
      description: Here is an example of a response for patching an document.
    DocumentSpecification_Update_example_application-json__request:
      value:
        '@type': DocumentSpecification
        name: Email
      description: Here is an example of a request for patching an document specification .
    DocumentSpecification_Update_example_application-json__response:
      value:
        '@type': DocumentSpecification
        href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/9b12-789948415bd7'
        id: 9b12-789948415bd7
        name: Email
        description: Specification for a Paperback Book
        lastUpdate: '2021-11-05T11:03:57.693Z'
        lifecycleStatus: published
        version: 1.0.0
        specCharacteristic:
          - '@type': CharacteristicSpecification
            name: pages
            valueType: integer
            description: The number of pages in this paperback book
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': IntegerCharacteristicValueSpecification
                unitOfMeasure: pages
                valueFrom: 1
          - '@type': CharacteristicSpecification
            name: language
            valueType: string
            description: The 2-character ISO 639-1 language code that this book is published in
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                regex: '^[a-z]{2}'
          - '@type': CharacteristicSpecification
            name: isbn-10
            valueType: string
            description: The 10-digit ISO 2108 International Standard Book Number (ISBN) of this book
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                regex: '^[0-9]{10}'
      description: Here is an example of a response for creating an document.
    DocumentSpecification_Update_example_Merge__request:
      value:
        '@type': DocumentSpecification
        name: Email
      description: Here is an example of a request for patching an document.
    DocumentSpecification_Update_example_Merge__response:
      value:
        '@type': DocumentSpecification
        href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/9b12-789948415bd7'
        id: 9b12-789948415bd7
        name: Email
        description: Specification for a Paperback Book
        lastUpdate: '2021-11-05T11:03:57.693Z'
        lifecycleStatus: published
        version: 1.0.0
        specCharacteristic:
          - '@type': CharacteristicSpecification
            name: pages
            valueType: integer
            description: The number of pages in this paperback book
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': IntegerCharacteristicValueSpecification
                unitOfMeasure: pages
                valueFrom: 1
          - '@type': CharacteristicSpecification
            name: language
            valueType: string
            description: The 2-character ISO 639-1 language code that this book is published in
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                regex: '^[a-z]{2}'
          - '@type': CharacteristicSpecification
            name: isbn-10
            valueType: string
            description: The 10-digit ISO 2108 International Standard Book Number (ISBN) of this book
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                regex: '^[0-9]{10}'
      description: Here is an example of a response for patching an document.
    DocumentSpecification_Update_example_JSON-PATCH__request:
      value:
        - op: replace
          path: /name
          value: Email
        - op: replace
          path: /version
          value: 1.4.5
      description: Here is an example of a request for patching an document.
    DocumentSpecification_Update_example_JSON-PATCH__response:
      value:
        '@type': DocumentSpecification
        href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/9b12-789948415bd7'
        id: 9b12-789948415bd7
        name: Email
        description: Specification for a Paperback Book
        lastUpdate: '2021-11-05T11:03:57.693Z'
        lifecycleStatus: published
        version: 1.4.5
        specCharacteristic:
          - '@type': CharacteristicSpecification
            name: pages
            valueType: integer
            description: The number of pages in this paperback book
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': IntegerCharacteristicValueSpecification
                unitOfMeasure: pages
                valueFrom: 1
          - '@type': CharacteristicSpecification
            name: language
            valueType: string
            description: The 2-character ISO 639-1 language code that this book is published in
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                regex: '^[a-z]{2}'
          - '@type': CharacteristicSpecification
            name: isbn-10
            valueType: string
            description: The 10-digit ISO 2108 International Standard Book Number (ISBN) of this book
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                regex: '^[0-9]{10}'
      description: Here is an example of a response for creating an document.
    DocumentSpecification_Update_example_JSON-PATCH-QUERY__request:
      value:
        - op: replace
          path: /name
          value: Email
        - op: replace
          path: /specCharacteristic?name=pages
          value:
            '@type': CharacteristicSpecification
            name: pages
            valueType: integer
            description: The number of pages in this paperback book
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': IntegerCharacteristicValueSpecification
                unitOfMeasure: pages
                valueFrom: 10
      description: Here is an example of a request for patching an document.
    DocumentSpecification_Update_example_JSON-PATCH-QUERY__response:
      value:
        '@type': DocumentSpecification
        href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/9b12-789948415bd7'
        id: 9b12-789948415bd7
        name: paperback
        description: Specification for a Paperback Book
        lastUpdate: '2021-11-05T11:03:57.693Z'
        lifecycleStatus: published
        version: 1.0.0
        specCharacteristic:
          - '@type': CharacteristicSpecification
            name: pages
            valueType: integer
            description: The number of pages in this paperback book
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': IntegerCharacteristicValueSpecification
                unitOfMeasure: pages
                valueFrom: 10
          - '@type': CharacteristicSpecification
            name: language
            valueType: string
            description: The 2-character ISO 639-1 language code that this book is published in
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                regex: '^[a-z]{2}'
          - '@type': CharacteristicSpecification
            name: isbn-10
            valueType: string
            description: The 10-digit ISO 2108 International Standard Book Number (ISBN) of this book
            configurable: true
            minCardinality: 1
            maxCardinality: 1
            extensible: false
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                regex: '^[0-9]{10}'
      description: Here is an example of a response for patching an document.
    Attachment_Update_example_application-json__request:
      value:
        '@type': Attachment
        name: Zelda as paperback
      description: Here is an example of a request for patching an attachment.
    Attachment_Update_example_application-json__response:
      value:
        '@type': Attachment
        href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
        id: '1492026921'
        name: Zelda as paperback
        url: 'https://www.amazon.co.uk/Designing-Web-APIs-Building-Developers/dp/1492026921'
        validFor:
          startDateTime: '2024-11-05T10:15:26.007Z'
          endDateTime: '2008-09-14T10:00:00Z'
        attachmentType: url
        mimeType: text/html
      description: Here is an example of a response for creating an attachment.
    Attachment_Update_example_Merge__request:
      value:
        '@type': Attachment
        name: Zelda as paperback
      description: Here is an example of a request for patching an attachment.
    Attachment_Update_example_Merge__response:
      value:
        '@type': Attachment
        href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
        id: '1492026921'
        name: Zelda as paperback
        url: 'https://www.amazon.co.uk/Designing-Web-APIs-Building-Developers/dp/1492026921'
        validFor:
          startDateTime: '2024-11-05T10:15:26.007Z'
          endDateTime: '2008-09-14T10:00:00Z'
        attachmentType: url
        mimeType: text/html
      description: Here is an example of a response for patching an attachment.
    Attachment_Update_example_JSON-PATCH__request:
      value:
        - op: replace
          path: /name
          value: Zelda as paperback
        - op: replace
          path: /validFor
          value:
            startDateTime: '2023-11-05T10:15:26.007Z'
            endDateTime: '2024-09-14T10:00:00Z'
      description: Here is an example of a request for patching an attachment.
    Attachment_Update_example_JSON-PATCH__response:
      value:
        '@type': Attachment
        href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
        id: '1492026921'
        name: Zelda as paperback
        url: 'https://www.amazon.co.uk/Designing-Web-APIs-Building-Developers/dp/1492026921'
        validFor:
          startDateTime: '2023-11-05T10:15:26.007Z'
          endDateTime: '2024-09-14T10:00:00Z'
        attachmentType: url
        mimeType: text/html
      description: Here is an example of a response for creating an attachment.
    Attachment_Update_example_JSON-PATCH-QUERY__request:
      value:
        - op: replace
          path: /name
          value: Zelda as paperback
      description: Here is an example of a request for patching an attachment.
    Attachment_Update_example_JSON-PATCH-QUERY__response:
      value:
        '@type': Attachment
        href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
        id: '1492026921'
        name: Zelda as paperback
        url: 'https://www.amazon.co.uk/Designing-Web-APIs-Building-Developers/dp/1492026921'
        validFor:
          startDateTime: '2024-11-05T10:15:26.007Z'
          endDateTime: '2008-09-14T10:00:00Z'
        attachmentType: url
        mimeType: text/html
      description: Here is an example of a response for patching an attachment.
    Document_Create_Notification_Event_request:
      value:
        '@type': DocumentCreateEvent
        eventId: e3dac91d-a035-465f-afc5-d3b603b53ad2
        eventTime: '2018-06-12T00:00:00Z'
        eventType: DocumentCreateEvent
        event:
          document:
            '@type': Document
            href: 'https://serverRoot/tmf-api/document/v5/document/9555-3c9c417feead'
            id: 9555-3c9c417feead
            name: 'Designing Web APIs: Building APIs That Developers Love'
            documentType: paperback
            version: '1'
            category:
              - '@type': CategoryRef
                id: '269422'
                name: Computing & Internet > Web Development > Web Design
            creationDate: '2008-09-14T10:00:00Z'
            description: >-
              Designing an API is complicated to begin with, but evolving your API design over time
              makes the process even more difficult. There are several books on the topic, but ...
            documentSpecification:
              '@type': DocumentSpecification
              href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/a65d-a08c744f2fe7'
              id: a65d-a08c744f2fe7
              name: paperback
            lastUpdate: '2021-11-05T10:15:26.007Z'
            lifecycleState: published
            attachment:
              - '@type': Attachment
                href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
                id: '1492026921'
                name: Link to paperback
                url: 'https://www.amazon.co.uk/Designing-Web-APIs-Building-Developers/dp/1492026921'
                validFor:
                  startDateTime: '2024-11-05T10:15:26.007Z'
                  endDateTime: '2008-09-14T10:00:00Z'
                attachmentType: url
                mimeType: text/html
            characteristic:
              - '@type': IntegerCharacteristic
                name: pages
                valueType: integer
                value: 200
              - '@type': StringCharacteristic
                name: language
                valueType: string
                value: en
              - '@type': StringCharacteristic
                name: isbn-10
                valueType: string
                value: '9781492026921'
            relatedParty:
              - '@type': RelatedPartyRefOrPartyRoleRef
                role: Author
                partyOrPartyRole:
                  '@type': PartyRef
                  href: 'http://serverlocation:port/tmf-api/partyManagement/v5/individual/789'
                  id: '789'
                  name: Brenda Jin
                  '@referredType': Individual
              - '@type': RelatedPartyRefOrPartyRoleRef
                role: Publisher
                partyOrPartyRole:
                  '@type': PartyRef
                  href: 'http://serverlocation:port/tmf-api/partyManagement/v5/organization123'
                  id: '123'
                  name: O'Reilly
                  '@referredType': Organization
      description: Message example for DocumentCreateEvent Notification
    Document_Attribute_Value_Change_Notification_Event_request:
      value:
        '@type': DocumentAttributeValueChangeEvent
        eventId: e3dac91d-a035-465f-afc5-d3b603b53ad2
        eventTime: '2018-06-12T00:00:00Z'
        eventType: DocumentAttributeValueChangeEvent
        event:
          document:
            '@type': Document
            href: 'https://serverRoot/tmf-api/document/v5/document/9555-3c9c417feead'
            id: 9555-3c9c417feead
            name: 'Designing Web APIs: Building APIs That Developers really Love'
      description: Message example for DocumentAttributeValueChangeEvent Notification
    Document_State_Change_Notification_Event_request:
      value:
        '@type': DocumentStateChangeEvent
        eventId: e3dac91d-a035-465f-afc5-d3b603b53ad2
        eventTime: '2018-06-12T00:00:00Z'
        eventType: DocumentStateChangeEvent
        event:
          document:
            '@type': Document
            href: 'https://serverRoot/tmf-api/document/v5/document/9555-3c9c417feead'
            id: 9555-3c9c417feead
            lifecycleState: published
      description: Message example for DocumentStateChangeEvent Notification
    Document_Delete_Notification_Event_request:
      value:
        '@type': DocumentDeleteEvent
        eventId: e3dac91d-a035-465f-afc5-d3b603b53ad2
        eventTime: '2018-06-12T00:00:00Z'
        eventType: DocumentDeleteEvent
        event:
          document:
            '@type': Document
            href: 'https://serverRoot/tmf-api/document/v5/document/9555-3c9c417feead'
            id: 9555-3c9c417feead
            name: 'Designing Web APIs: Building APIs That Developers Love'
            documentType: paperback
            version: '1'
            category:
              - '@type': CategoryRef
                id: '269422'
                name: Computing & Internet > Web Development > Web Design
            creationDate: '2008-09-14T10:00:00Z'
            description: >-
              Designing an API is complicated to begin with, but evolving your API design over time
              makes the process even more difficult. There are several books on the topic, but ...
            documentSpecification:
              '@type': DocumentSpecification
              href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/a65d-a08c744f2fe7'
              id: a65d-a08c744f2fe7
              name: paperback
            lastUpdate: '2021-11-05T10:15:26.007Z'
            lifecycleState: endOfLivecycle
            attachment:
              - '@type': Attachment
                href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
                id: '1492026921'
                name: Link to paperback
                url: 'https://www.amazon.co.uk/Designing-Web-APIs-Building-Developers/dp/1492026921'
                validFor:
                  startDateTime: '2024-11-05T10:15:26.007Z'
                  endDateTime: '2008-09-14T10:00:00Z'
                attachmentType: url
                mimeType: text/html
            characteristic:
              - '@type': IntegerCharacteristic
                name: pages
                valueType: integer
                value: 200
              - '@type': StringCharacteristic
                name: language
                valueType: string
                value: en
              - '@type': StringCharacteristic
                name: isbn-10
                valueType: string
                value: '9781492026921'
            relatedParty:
              - '@type': RelatedPartyRefOrPartyRoleRef
                role: Author
                partyOrPartyRole:
                  '@type': PartyRef
                  href: 'http://serverlocation:port/tmf-api/partyManagement/v5/individual/789'
                  id: '789'
                  name: Brenda Jin
                  '@referredType': Individual
              - '@type': RelatedPartyRefOrPartyRoleRef
                role: Publisher
                partyOrPartyRole:
                  '@type': PartyRef
                  href: 'http://serverlocation:port/tmf-api/partyManagement/v5/organization123'
                  id: '123'
                  name: O'Reilly
                  '@referredType': Organization
      description: Message example for DocumentDeleteEvent Notification
    Document_Specification_Create_Notification_Event_request:
      value:
        '@type': DocumentSpecificationCreateEvent
        eventId: e3dac91d-a035-465f-afc5-d3b603b53ad2
        eventTime: '2018-06-12T00:00:00Z'
        eventType: DocumentSpecificationCreateEvent
        event:
          documentSpecification:
            '@type': DocumentSpecification
            href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/9b12-789948415bd7'
            id: 9b12-789948415bd7
            name: paperback
            description: Specification for a Paperback Book
            lastUpdate: '2021-11-05T11:03:57.693Z'
            lifecycleStatus: published
            version: 1.0.0
            specCharacteristic:
              - '@type': CharacteristicSpecification
                name: pages
                valueType: integer
                description: The number of pages in this paperback book
                configurable: true
                minCardinality: 1
                maxCardinality: 1
                extensible: false
                characteristicValueSpecification:
                  - '@type': IntegerCharacteristicValueSpecification
                    unitOfMeasure: pages
                    valueFrom: 1
              - '@type': CharacteristicSpecification
                name: language
                valueType: string
                description: The 2-character ISO 639-1 language code that this book is published in
                configurable: true
                minCardinality: 1
                maxCardinality: 1
                extensible: false
                characteristicValueSpecification:
                  - '@type': StringCharacteristicValueSpecification
                    regex: '^[a-z]{2}'
              - '@type': CharacteristicSpecification
                name: isbn-10
                valueType: string
                description: The 10-digit ISO 2108 International Standard Book Number (ISBN) of this book
                configurable: true
                minCardinality: 1
                maxCardinality: 1
                extensible: false
                characteristicValueSpecification:
                  - '@type': StringCharacteristicValueSpecification
                    regex: '^[0-9]{10}'
      description: Message example for DocumentSpecificationCreateEvent Notification
    Document_Specification_Attribute_Value_Change_Notification_Event_request:
      value:
        '@type': DocumentSpecificationAttributeValueChangeEvent
        eventId: e3dac91d-a035-465f-afc5-d3b603b53ad2
        eventTime: '2018-06-12T00:00:00Z'
        eventType: DocumentSpecificationAttributeValueChangeEvent
        event:
          documentSpecification:
            '@type': DocumentSpecification
            href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/9b12-789948415bd7'
            id: 9b12-789948415bd7
            name: Email
      description: Message example for DocumentSpecificationAttributeValueChangeEvent Notification
    Document_Specification_Delete_Notification_Event_request:
      value:
        '@type': DocumentSpecificationDeleteEvent
        eventId: e3dac91d-a035-465f-afc5-d3b603b53ad2
        eventTime: '2018-06-12T00:00:00Z'
        eventType: DocumentSpecificationDeleteEvent
        event:
          documentSpecification:
            '@type': DocumentSpecification
            href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/9b12-789948415bd7'
            id: 9b12-789948415bd7
            name: paperback
            description: Specification for a Paperback Book
            lastUpdate: '2021-11-05T11:03:57.693Z'
            lifecycleStatus: published
            version: 1.0.0
            specCharacteristic:
              - '@type': CharacteristicSpecification
                name: pages
                valueType: integer
                description: The number of pages in this paperback book
                configurable: true
                minCardinality: 1
                maxCardinality: 1
                extensible: false
                characteristicValueSpecification:
                  - '@type': IntegerCharacteristicValueSpecification
                    unitOfMeasure: pages
                    valueFrom: 1
              - '@type': CharacteristicSpecification
                name: language
                valueType: string
                description: The 2-character ISO 639-1 language code that this book is published in
                configurable: true
                minCardinality: 1
                maxCardinality: 1
                extensible: false
                characteristicValueSpecification:
                  - '@type': StringCharacteristicValueSpecification
                    regex: '^[a-z]{2}'
              - '@type': CharacteristicSpecification
                name: isbn-10
                valueType: string
                description: The 10-digit ISO 2108 International Standard Book Number (ISBN) of this book
                configurable: true
                minCardinality: 1
                maxCardinality: 1
                extensible: false
                characteristicValueSpecification:
                  - '@type': StringCharacteristicValueSpecification
                    regex: '^[0-9]{10}'
      description: Message example for DocumentSpecificationDeleteEvent Notification
    Document_Specification_Status_Change_Notification_Event_request:
      value:
        '@type': DocumentSpecificationStatusChangeEvent
        eventId: e3dac91d-a035-465f-afc5-d3b603b53ad2
        eventTime: '2018-06-12T00:00:00Z'
        eventType: DocumentSpecificationStatusChangeEvent
        event:
          documentSpecification:
            '@type': DocumentSpecification
            href: 'https://serverRoot/tmf-api/document/v5/documentSpecification/9b12-789948415bd7'
            id: 9b12-789948415bd7
            lifecycleStatus: published
      description: Message example for DocumentSpecificationStatusChangeEvent Notification
    Attachment_Create_Notification_Event_request:
      value:
        '@type': AttachmentCreateEvent
        eventId: e3dac91d-a035-465f-afc5-d3c603b53ad2
        eventTime: '2018-06-12T00:00:00Z'
        eventType: AttachmentCreateEvent
        event:
          attachment:
            '@type': Attachment
            href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
            id: '1492026921'
            name: Link to paperback
            url: 'https://www.amazon.co.uk/Designing-Web-APIs-Building-Developers/dp/1492026921'
            validFor:
              startDateTime: '2024-11-05T10:15:26.007Z'
              endDateTime: '2008-09-14T10:00:00Z'
            attachmentType: url
            mimeType: text/html
      description: Message example for AttachmentCreateEvent Notification
    Attachment_Attribute_Value_Change_Notification_Event_request:
      value:
        '@type': AttachmentAttributeValueChangeEvent
        eventId: e3dac91d-a035-465f-afc5-d3c603b53ad2
        eventTime: '2018-06-12T00:00:00Z'
        eventType: AttachmentAttributeValueChangeEvent
        event:
          attachment:
            '@type': Attachment
            href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
            id: '1492026921'
            name: Zelda as paperback
      description: Message example for AttachmentAttributeValueChangeEvent Notification
    Attachment_Delete_Notification_Event_request:
      value:
        '@type': AttachmentDeleteEvent
        eventId: e3dac91d-a035-465f-afc5-d3c603b53ad2
        eventTime: '2018-06-12T00:00:00Z'
        eventType: AttachmentDeleteEvent
        event:
          attachment:
            '@type': Attachment
            href: 'https://serverRoot/tmf-api/document/v5/attachment/1492026921'
            id: '1492026921'
            name: Link to paperback
            url: 'https://www.amazon.co.uk/Designing-Web-APIs-Building-Developers/dp/1492026921'
            validFor:
              startDateTime: '2024-11-05T10:15:26.007Z'
              endDateTime: '2008-09-14T10:00:00Z'
            attachmentType: url
            mimeType: text/html
      description: Message example for AttachmentDeleteEvent Notification
