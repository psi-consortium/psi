{
    "@jdt.replace": [
        {
            "@jdt.path": "$.servers[*].url",
            "@jdt.value": "/psi-api/serviceCatalog/v1/"
        },
        {
            "@jdt.path": "$.components.schemas.AttachmentRefOrValue.description",
            "@jdt.value": "Reference to an attachment or a document. A document comprises of multiple attachments, while a single attachment has uri, mimeType, size, etc."
        }
    ],
    "@jdt.remove": [
        {
            "@jdt.path": "$.tags[?(@.name!='serviceSpecification')]"
        },
        {
            "@jdt.path": "$.paths['/serviceCatalog']"
        },
        {
            "@jdt.path": "$.paths['/serviceCatalog/{id}']"
        },
        {
            "@jdt.path": "$.paths['/serviceCategory']"
        },
        {
            "@jdt.path": "$.paths['/serviceCategory/{id}']"
        },
        {
            "@jdt.path": "$.paths['/serviceCandidate']"
        },
        {
            "@jdt.path": "$.paths['/serviceCandidate/{id}']"
        },
        {
            "@jdt.path": "$.paths['/importJob']"
        },
        {
            "@jdt.path": "$.paths['/importJob/{id}']"
        },
        {
            "@jdt.path": "$.paths['/exportJob']"
        },
        {
            "@jdt.path": "$.paths['/exportJob/{id}']"
        },
        {
            "@jdt.path": "$.paths['/hub']"
        },
        {
            "@jdt.path": "$.paths['/hub/{id}']"
        },
        {
            "@jdt.path": "$.paths['/listener/serviceCatalogCreateEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/serviceCatalogChangeEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/serviceCatalogBatchEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/serviceCatalogDeleteEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/serviceCategoryCreateEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/serviceCategoryChangeEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/serviceCategoryDeleteEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/serviceCandidateCreateEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/serviceCandidateChangeEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/serviceCandidateDeleteEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/serviceSpecificationCreateEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/serviceSpecificationChangeEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/serviceSpecificationDeleteEvent']"
        },
        {
            "@jdt.path": "$.components.schemas.Addressable"
        },
        {
            "@jdt.path": "$.components.schemas.Attachment"
        },
        {
            "@jdt.path": "$.components.schemas.AttachmentRef"
        },
        {
            "@jdt.path": "$.components.schemas.CharacteristicSpecificationBase"
        },
        {
            "@jdt.path": "$.components.schemas.Entity"
        },
        {
            "@jdt.path": "$.components.schemas.EntityRef"
        },
        {
            "@jdt.path": "$.components.schemas.EntitySpecification"
        },
        {
            "@jdt.path": "$.components.schemas.ExportJob"
        },
        {
            "@jdt.path": "$.components.schemas.ExportJob_Create"
        },
        {
            "@jdt.path": "$.components.schemas.Extensible"
        },
        {
            "@jdt.path": "$.components.schemas.ImportJob"
        },
        {
            "@jdt.path": "$.components.schemas.ImportJob_Create"
        },
        {
            "@jdt.path": "$.components.schemas.JobStateType"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCandidate"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCandidate_Create"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCandidate_Update"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCatalog"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCatalog_Create"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCatalog_Update"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCategory"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCategory_Create"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCategory_Update"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCategoryRef"
        },
        {
            "@jdt.path": "$.components.schemas.EventSubscription"
        },
        {
            "@jdt.path": "$.components.schemas.EventSubscriptionInput"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCatalogCreateEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCatalogCreateEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCatalogChangeEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCatalogChangeEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCatalogBatchEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCatalogBatchEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCatalogDeleteEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCatalogDeleteEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCategoryCreateEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCategoryCreateEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCategoryChangeEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCategoryChangeEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCategoryDeleteEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCategoryDeleteEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCandidateCreateEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCandidateCreateEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCandidateChangeEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCandidateChangeEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCandidateDeleteEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceCandidateDeleteEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceSpecificationCreateEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceSpecificationCreateEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceSpecificationChangeEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceSpecificationChangeEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceSpecificationDeleteEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ServiceSpecificationDeleteEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.FeatureSpecificationRelationship.properties.featureId"
        },
        {
            "@jdt.path": "$.components.schemas.AttachmentRefOrValue.properties.content"
        }
    ],
    "@jdt.rename": [
        {
            "@jdt.path": "$.components.schemas.AttachmentRefOrValue",
            "@jdt.value": "AttachmentOrDocumentRef"
        }
    ],
    "@jdt.merge": [
        {
            "@jdt.path": "$.tags[?(@.name=='serviceSpecification')]",
            "@jdt.value": {
                "description": "Service Specification API"
            }
        },
        {
            "@jdt.path": "$.components.schemas.FeatureSpecificationRelationship.properties",
            "@jdt.value": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier."
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "The hyperlink reference."
                }
            }
        },
        {
            "@jdt.path": "$.components.schemas.*.properties.attachment.items",
            "@jdt.value": {
                "$ref": "#/components/schemas/AttachmentOrDocumentRef"
            }
        },
        {
            "@jdt.path": "$.tags",
            "@jdt.value": [
                {
                    "name": "serviceTemplate",
                    "description": "Service Template API"
                }
            ]
        },
        {
            "@jdt.path": "$.components.schemas.ServiceSpecification.properties",
            "@jdt.value": {
                "category": {
                    "type": "string",
                    "description": "Category of the target service like Telephony, InternetAccess, IP-Trunk and so on."
                }
            }
        },
        {
            "@jdt.path": "$.components.schemas.ServiceSpecification_Create.properties",
            "@jdt.value": {
                "category": {
                    "type": "string",
                    "description": "Category of the target service like Telephony, InternetAccess, IP-Trunk and so on."
                }
            }
        },
        {
            "@jdt.path": "$.components.schemas.ServiceSpecification_Update.properties",
            "@jdt.value": {
                "category": {
                    "type": "string",
                    "description": "Category of the target service like Telephony, InternetAccess, IP-Trunk and so on."
                }
            }
        },
        {
            "@jdt.path": "$.paths",
            "@jdt.value": {
                "/serviceTemplate": {
                    "get": {
                        "operationId": "listServiceTemplate",
                        "summary": "List or find ServiceTemplate objects",
                        "description": "This operation lists or finds ServiceTemplate entities.",
                        "tags": ["serviceTemplate"],
                        "parameters": [
                            {
                                "name": "fields",
                                "in": "query",
                                "description": "Comma-separated properties to be provided in response.",
                                "required": false,
                                "schema": {
                                    "type": "string"
                                }
                            },
                            {
                                "name": "offset",
                                "in": "query",
                                "description": "The requested index for start of resources to be provided in response.",
                                "required": false,
                                "schema": {
                                    "type": "integer"
                                }
                            },
                            {
                                "name": "limit",
                                "in": "query",
                                "description": "The requested number of resources to be provided in response.",
                                "required": false,
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        ],
                        "responses": {
                            "200": {
                                "description": "Success",
                                "headers": {
                                    "X-Result-Count": {
                                        "description": "The actual number of items returned in the response body.",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    },
                                    "X-Total-Count": {
                                        "description": "The total number of items matching criteria.",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ServiceSpecification"
                                            }
                                        }
                                    }
                                }
                            },
                            "400": {
                                "description": "Bad Request",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "401": {
                                "description": "Unauthorized",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "403": {
                                "description": "Forbidden",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "404": {
                                "description": "Not Found",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "405": {
                                "description": "Method Not allowed",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "409": {
                                "description": "Conflict",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "500": {
                                "description": "Internal Server Error",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "post": {
                        "operationId": "createServiceTemplate",
                        "summary": "Creates a ServiceTemplate",
                        "description": "This operation creates a ServiceTemplate entity.",
                        "tags": ["serviceTemplate"],
                        "requestBody": {
                            "description": "The ServiceTemplate to be created.",
                            "content": {
                                "application/json;charset=utf-8": {
                                    "schema": {
                                        "$ref": "#/components/schemas/ServiceSpecification_Create"
                                    }
                                }
                            },
                            "required": true
                        },
                        "responses": {
                            "201": {
                                "description": "Created",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/ServiceSpecification"
                                        }
                                    }
                                }
                            },
                            "400": {
                                "description": "Bad Request",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "401": {
                                "description": "Unauthorized",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "403": {
                                "description": "Forbidden",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "405": {
                                "description": "Method Not allowed",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "409": {
                                "description": "Conflict",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "500": {
                                "description": "Internal Server Error",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "/serviceTemplate/{id}": {
                    "get": {
                        "operationId": "retrieveServiceTemplate",
                        "summary": "Retrieves a ServiceTemplate by ID",
                        "description": "This operation retrieves a ServiceTemplate entity. Attribute selection is enabled for all first level attributes.",
                        "tags": ["serviceTemplate"],
                        "parameters": [
                            {
                                "name": "id",
                                "in": "path",
                                "description": "The identifier of the ServiceTemplate.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            },
                            {
                                "name": "fields",
                                "in": "query",
                                "description": "Comma-separated properties to provide in response.",
                                "required": false,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        ],
                        "responses": {
                            "200": {
                                "description": "Success",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/ServiceSpecification"
                                        }
                                    }
                                }
                            },
                            "400": {
                                "description": "Bad Request",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "401": {
                                "description": "Unauthorized",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "403": {
                                "description": "Forbidden",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "404": {
                                "description": "Not Found",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "405": {
                                "description": "Method Not allowed",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "409": {
                                "description": "Conflict",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "500": {
                                "description": "Internal Server Error",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "patch": {
                        "operationId": "patchServiceTemplate",
                        "summary": "Updates partially a ServiceTemplate",
                        "description": "This operation updates partially a ServiceTemplate entity.",
                        "tags": ["serviceTemplate"],
                        "parameters": [
                            {
                                "name": "id",
                                "in": "path",
                                "description": "The identifier of the ServiceTemplate.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        ],
                        "requestBody": {
                            "description": "The ServiceTemplate to be updated.",
                            "content": {
                                "application/json;charset=utf-8": {
                                    "schema": {
                                        "$ref": "#/components/schemas/ServiceSpecification_Update"
                                    }
                                }
                            },
                            "required": true
                        },
                        "responses": {
                            "200": {
                                "description": "Updated",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/ServiceSpecification"
                                        }
                                    }
                                }
                            },
                            "400": {
                                "description": "Bad Request",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "401": {
                                "description": "Unauthorized",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "403": {
                                "description": "Forbidden",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "404": {
                                "description": "Not Found",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "405": {
                                "description": "Method Not allowed",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "409": {
                                "description": "Conflict",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "500": {
                                "description": "Internal Server Error",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "delete": {
                        "operationId": "deleteServiceTemplate",
                        "summary": "Deletes a ServiceTemplate",
                        "description": "This operation deletes a ServiceTemplate entity.",
                        "tags": ["serviceTemplate"],
                        "parameters": [
                            {
                                "name": "id",
                                "in": "path",
                                "description": "The identifier of the ServiceTemplate.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        ],
                        "responses": {
                            "204": {
                                "description": "Deleted"
                            },
                            "400": {
                                "description": "Bad Request",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "401": {
                                "description": "Unauthorized",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "403": {
                                "description": "Forbidden",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "404": {
                                "description": "Not Found",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "405": {
                                "description": "Method Not allowed",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "409": {
                                "description": "Conflict",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "500": {
                                "description": "Internal Server Error",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "@jdt.path": "$.components.schemas",
            "@jdt.value": {
                "Geometry": {
                    "type": "object",
                    "description": "A GeoJson geometry.",
                    "oneOf": [
                        {
                            "$ref": "#/components/schemas/LineString"
                        },
                        {
                            "$ref": "#/components/schemas/MultiLineString"
                        },
                        {
                            "$ref": "#/components/schemas/MultiPoint"
                        },
                        {
                            "$ref": "#/components/schemas/MultiPolygon"
                        },
                        {
                            "$ref": "#/components/schemas/Point"
                        },
                        {
                            "$ref": "#/components/schemas/Polygon"
                        }
                    ],
                    "discriminator": {
                        "propertyName": "type",
                        "mapping": {
                            "LineString": "#/components/schemas/LineString",
                            "MultiLineString": "#/components/schemas/MultiLineString",
                            "MultiPoint": "#/components/schemas/MultiPoint",
                            "MultiPolygon": "#/components/schemas/MultiPolygon",
                            "Point": "#/components/schemas/Point",
                            "Polygon": "#/components/schemas/Polygon"
                        }
                    }
                },
                "Point2D": {
                    "type": "array",
                    "maxItems": 2,
                    "minItems": 2,
                    "items": {
                        "type": "number"
                    }
                },
                "Point": {
                    "type": "object",
                    "description": "A GeoJSON Point.",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "coordinates": {
                            "$ref": "#/components/schemas/Point2D"
                        }
                    }
                },
                "MultiPoint": {
                    "type": "object",
                    "description": "A GeoJSON MultiPoint.",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "coordinates": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Point2D"
                            }
                        }
                    }
                },
                "LineString": {
                    "type": "object",
                    "description": "A GeoJSON LineString.",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "coordinates": {
                            "type": "array",
                            "minItems": 2,
                            "items": {
                                "$ref": "#/components/schemas/Point2D"
                            }
                        }
                    }
                },
                "MultiLineString": {
                    "type": "object",
                    "description": "A GeoJSON MultiLineString.",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "coordinates": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "minItems": 2,
                                "items": {
                                    "$ref": "#/components/schemas/Point2D"
                                }
                            }
                        }
                    }
                },
                "Polygon": {
                    "type": "object",
                    "description": "A GeoJSON Polygon.",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "coordinates": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "minItems": 4,
                                "items": {
                                    "$ref": "#/components/schemas/Point2D"
                                }
                            }
                        }
                    }
                },
                "MultiPolygon": {
                    "type": "object",
                    "description": "A GeoJSON MultiPolygon.",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "coordinates": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "minItems": 4,
                                    "items": {
                                        "$ref": "#/components/schemas/Point2D"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "@jdt.path": "$.components.schemas.RelatedParty",
            "@jdt.value": {
                "description": "Related Party reference. A related party defines a party or a party role linked to a specific entity."
            }
        }
    ]
}
