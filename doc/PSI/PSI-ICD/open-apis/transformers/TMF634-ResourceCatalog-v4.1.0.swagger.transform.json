{
    "@jdt.replace": [
        {
            "@jdt.path": "$.servers[*].url",
            "@jdt.value": "/psi-api/resourceCatalog/v1/"
        },
        {
            "@jdt.path": "$.components.schemas.AttachmentRefOrValue.description",
            "@jdt.value": "Reference to an attachment or a document. A document comprises of multiple attachments, while a single attachment has uri, mimeType, size, etc."
        }
    ],
    "@jdt.remove": [
        {
            "@jdt.path": "$.tags[?(@.name!='resourceSpecification')]"
        },
        {
            "@jdt.path": "$.paths['/resourceCatalog']"
        },
        {
            "@jdt.path": "$.paths['/resourceCatalog/{id}']"
        },
        {
            "@jdt.path": "$.paths['/resourceCategory']"
        },
        {
            "@jdt.path": "$.paths['/resourceCategory/{id}']"
        },
        {
            "@jdt.path": "$.paths['/resourceCandidate']"
        },
        {
            "@jdt.path": "$.paths['/resourceCandidate/{id}']"
        },
        {
            "@jdt.path": "$.paths['/importJob']"
        },
        {
            "@jdt.path": "$.paths['/importJob/{id}']"
        },
        {
            "@jdt.path": "$.paths['/exportJob']"
        },
        {
            "@jdt.path": "$.paths['/exportJob/{id}']"
        },
        {
            "@jdt.path": "$.paths['/hub']"
        },
        {
            "@jdt.path": "$.paths['/hub/{id}']"
        },
        {
            "@jdt.path": "$.paths['/listener/importJobCreateEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/importJobStateChangeEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/exportJobCreateEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/exportJobStateChangeEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/resourceCatalogCreateEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/resourceCatalogChangeEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/resourceCatalogDeleteEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/resourceCategoryCreateEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/resourceCategoryChangeEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/resourceCategoryDeleteEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/resourceCandidateCreateEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/resourceCandidateChangeEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/resourceCandidateDeleteEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/resourceSpecificationCreateEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/resourceSpecificationChangeEvent']"
        },
        {
            "@jdt.path": "$.paths['/listener/resourceSpecificationDeleteEvent']"
        },
        {
            "@jdt.path": "$.components.schemas.Addressable"
        },
        {
            "@jdt.path": "$.components.schemas.Attachment"
        },
        {
            "@jdt.path": "$.components.schemas.AttachmentRef"
        },
        {
            "@jdt.path": "$.components.schemas.CharacteristicSpecificationBase"
        },
        {
            "@jdt.path": "$.components.schemas.ConnectionPointSpecificationRef"
        },
        {
            "@jdt.path": "$.components.schemas.ConnectionSpecification"
        },
        {
            "@jdt.path": "$.components.schemas.EndpointSpecificationRef"
        },
        {
            "@jdt.path": "$.components.schemas.Entity"
        },
        {
            "@jdt.path": "$.components.schemas.EntityRef"
        },
        {
            "@jdt.path": "$.components.schemas.ExportJob"
        },
        {
            "@jdt.path": "$.components.schemas.ExportJob_Create"
        },
        {
            "@jdt.path": "$.components.schemas.Extensible"
        },
        {
            "@jdt.path": "$.components.schemas.ImportJob"
        },
        {
            "@jdt.path": "$.components.schemas.ImportJob_Create"
        },
        {
            "@jdt.path": "$.components.schemas.JobStateType"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCandidate"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCandidate_Create"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCandidate_Update"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCatalog"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCatalog_Create"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCatalog_Update"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCategory"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCategory_Create"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCategory_Update"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCategoryRef"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceFunctionSpecification"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceGraphSpecification"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceGraphSpecificationRef"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceGraphSpecificationRelationship"
        },
        {
            "@jdt.path": "$.components.schemas.EventSubscription"
        },
        {
            "@jdt.path": "$.components.schemas.EventSubscriptionInput"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCatalogCreateEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCatalogCreateEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCatalogChangeEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCatalogChangeEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCatalogDeleteEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCatalogDeleteEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCategoryCreateEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCategoryCreateEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCategoryChangeEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCategoryChangeEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCategoryDeleteEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCategoryDeleteEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCandidateCreateEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCandidateCreateEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCandidateChangeEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCandidateChangeEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCandidateDeleteEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceCandidateDeleteEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceSpecificationCreateEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceSpecificationCreateEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceSpecificationChangeEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceSpecificationChangeEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceSpecificationDeleteEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ResourceSpecificationDeleteEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ImportJobCreateEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ImportJobCreateEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ImportJobStateChangeEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ImportJobStateChangeEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ExportJobCreateEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ExportJobCreateEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.ExportJobStateChangeEvent"
        },
        {
            "@jdt.path": "$.components.schemas.ExportJobStateChangeEventPayload"
        },
        {
            "@jdt.path": "$.components.schemas.FeatureSpecificationRelationship.properties.featureId"
        },
        {
            "@jdt.path": "$.components.schemas.AttachmentRefOrValue.properties.content"
        },
        {
            "@jdt.path": "$.components.schemas.LogicalResourceSpecification.properties.*"
        },
        {
            "@jdt.path": "$.components.schemas.PhysicalResourceSpecification.properties.*"
        }
    ],
    "@jdt.rename": [
        {
            "@jdt.path": "$.components.schemas.AttachmentRefOrValue",
            "@jdt.value": "AttachmentOrDocumentRef"
        }
    ],
    "@jdt.merge": [
        {
            "@jdt.path": "$.tags[?(@.name=='resourceSpecification')]",
            "@jdt.value": {
                "description": "Resource Specification API"
            }
        },
        {
            "@jdt.path": "$.components.schemas.*.properties.attachment.items",
            "@jdt.value": {
                "$ref": "#/components/schemas/AttachmentOrDocumentRef"
            }
        },
        {
            "@jdt.path": "$.tags",
            "@jdt.value": [
                {
                    "name": "resourceTemplate",
                    "description": "Resource Template API"
                }
            ]
        },
        {
            "@jdt.path": "$.components.schemas.ResourceSpecification",
            "@jdt.value": {
                "discriminator": {
                    "propertyName": "@type"
                }
            }
        },
        {
            "@jdt.path": "$.components.schemas.LogicalResourceSpecification",
            "@jdt.value": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ResourceSpecification"
                    }
                ]
            }
        },
        {
            "@jdt.path": "$.components.schemas.PhysicalResourceSpecification",
            "@jdt.value": {
                "properties": {
                    "model": {
                        "type": "string",
                        "description": "This is a string that represents a manufacturer-allocated number used to identify the general type and/or category of the hardware item. This, in combination with the Part and the Vendor, identifies different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is an optional attribute."
                    },
                    "part": {
                        "type": "string",
                        "description": "This is a string that defines a manufacturer-allocated part number assigned by the organization that manufactures the hardware item. This, in combination with the Model and the Vendor, identifies different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is a REQUIRED attribute."
                    },
                    "sku": {
                        "type": "string",
                        "description": "This is a string that defines the manufacturer-allocated Stock Keeping Unit (SKU) number of the hardware item. This is an optional attribute."
                    },
                    "vendor": {
                        "type": "string",
                        "description": "This is a string that defines the name of the manufacturer. This, in combination with the Model and the Part, identifies different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is a REQUIRED attribute for a physical resource."
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ResourceSpecification"
                    }
                ]
            }
        },
        {
            "@jdt.path": "$.components.schemas.ResourceSpecification_Create.properties",
            "@jdt.value": {
                "model": {
                    "type": "string",
                    "description": "This is a string that represents a manufacturer-allocated number used to identify the general type and/or category of the hardware item. This, in combination with the Part and the Vendor, identifies different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is an optional attribute."
                },
                "part": {
                    "type": "string",
                    "description": "This is a string that defines a manufacturer-allocated part number assigned by the organization that manufactures the hardware item. This, in combination with the Model and the Vendor, identifies different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is a REQUIRED attribute."
                },
                "sku": {
                    "type": "string",
                    "description": "This is a string that defines the manufacturer-allocated Stock Keeping Unit (SKU) number of the hardware item. This is an optional attribute."
                },
                "vendor": {
                    "type": "string",
                    "description": "This is a string that defines the name of the manufacturer. This, in combination with the Model and the Part, identifies different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is a REQUIRED attribute for a physical resource."
                }
            }
        },
        {
            "@jdt.path": "$.components.schemas.ResourceSpecification_Update.properties",
            "@jdt.value": {
                "model": {
                    "type": "string",
                    "description": "This is a string that represents a manufacturer-allocated number used to identify the general type and/or category of the hardware item. This, in combination with the Part and the Vendor, identifies different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is an optional attribute."
                },
                "part": {
                    "type": "string",
                    "description": "This is a string that defines a manufacturer-allocated part number assigned by the organization that manufactures the hardware item. This, in combination with the Model and the Vendor, identifies different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is a REQUIRED attribute."
                },
                "sku": {
                    "type": "string",
                    "description": "This is a string that defines the manufacturer-allocated Stock Keeping Unit (SKU) number of the hardware item. This is an optional attribute."
                },
                "vendor": {
                    "type": "string",
                    "description": "This is a string that defines the name of the manufacturer. This, in combination with the Model and the Part, identifies different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is a REQUIRED attribute for a physical resource."
                }
            }
        },
        {
            "@jdt.path": "$.paths",
            "@jdt.value": {
                "/resourceTemplate": {
                    "get": {
                        "operationId": "listResourceTemplate",
                        "summary": "List or find ResourceTemplate objects",
                        "description": "This operation lists or finds ResourceTemplate entities.",
                        "tags": ["resourceTemplate"],
                        "parameters": [
                            {
                                "name": "fields",
                                "in": "query",
                                "description": "Comma-separated properties to be provided in response.",
                                "required": false,
                                "schema": {
                                    "type": "string"
                                }
                            },
                            {
                                "name": "offset",
                                "in": "query",
                                "description": "The requested index for start of resources to be provided in response.",
                                "required": false,
                                "schema": {
                                    "type": "integer"
                                }
                            },
                            {
                                "name": "limit",
                                "in": "query",
                                "description": "The requested number of resources to be provided in response.",
                                "required": false,
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        ],
                        "responses": {
                            "200": {
                                "description": "Success",
                                "headers": {
                                    "X-Result-Count": {
                                        "description": "Actual number of items returned in the response body.",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    },
                                    "X-Total-Count": {
                                        "description": "The total number of items matching criteria.",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ResourceSpecification"
                                            }
                                        }
                                    }
                                }
                            },
                            "400": {
                                "description": "Bad Request",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "401": {
                                "description": "Unauthorized",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "403": {
                                "description": "Forbidden",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "404": {
                                "description": "Not Found",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "405": {
                                "description": "Method Not allowed",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "409": {
                                "description": "Conflict",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "500": {
                                "description": "Internal Server Error",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "post": {
                        "operationId": "createResourceTemplate",
                        "summary": "Creates a ResourceTemplate",
                        "description": "This operation creates a ResourceTemplate entity.",
                        "tags": ["resourceTemplate"],
                        "requestBody": {
                            "description": "The ResourceTemplate to be created",
                            "content": {
                                "application/json;charset=utf-8": {
                                    "schema": {
                                        "$ref": "#/components/schemas/ResourceSpecification_Create"
                                    }
                                }
                            },
                            "required": true
                        },
                        "responses": {
                            "201": {
                                "description": "Created",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/ResourceSpecification"
                                        }
                                    }
                                }
                            },
                            "400": {
                                "description": "Bad Request",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "401": {
                                "description": "Unauthorized",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "403": {
                                "description": "Forbidden",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "405": {
                                "description": "Method Not allowed",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "409": {
                                "description": "Conflict",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "500": {
                                "description": "Internal Server Error",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "/resourceTemplate/{id}": {
                    "get": {
                        "operationId": "retrieveResourceTemplate",
                        "summary": "Retrieves a ResourceTemplate by ID",
                        "description": "This operation retrieves a ResourceTemplate entity. Attribute selection is enabled for all first level attributes.",
                        "tags": ["resourceTemplate"],
                        "parameters": [
                            {
                                "name": "id",
                                "in": "path",
                                "description": "The identifier of the ResourceTemplate.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            },
                            {
                                "name": "fields",
                                "in": "query",
                                "description": "Comma-separated properties to provide in response.",
                                "required": false,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        ],
                        "responses": {
                            "200": {
                                "description": "Success",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/ResourceSpecification"
                                        }
                                    }
                                }
                            },
                            "400": {
                                "description": "Bad Request",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "401": {
                                "description": "Unauthorized",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "403": {
                                "description": "Forbidden",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "404": {
                                "description": "Not Found",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "405": {
                                "description": "Method Not allowed",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "409": {
                                "description": "Conflict",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "500": {
                                "description": "Internal Server Error",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "patch": {
                        "operationId": "patchResourceTemplate",
                        "summary": "Updates partially a ResourceTemplate",
                        "description": "This operation updates partially a ResourceTemplate entity.",
                        "tags": ["resourceTemplate"],
                        "parameters": [
                            {
                                "name": "id",
                                "in": "path",
                                "description": "The identifier of the ResourceTemplate.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        ],
                        "requestBody": {
                            "description": "The ResourceTemplate to be updated.",
                            "content": {
                                "application/json;charset=utf-8": {
                                    "schema": {
                                        "$ref": "#/components/schemas/ResourceSpecification_Update"
                                    }
                                }
                            },
                            "required": true
                        },
                        "responses": {
                            "200": {
                                "description": "Updated",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/ResourceSpecification"
                                        }
                                    }
                                }
                            },
                            "400": {
                                "description": "Bad Request",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "401": {
                                "description": "Unauthorized",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "403": {
                                "description": "Forbidden",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "404": {
                                "description": "Not Found",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "405": {
                                "description": "Method Not allowed",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "409": {
                                "description": "Conflict",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "500": {
                                "description": "Internal Server Error",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "delete": {
                        "operationId": "deleteResourceTemplate",
                        "summary": "Deletes a ResourceTemplate",
                        "description": "This operation deletes a ResourceTemplate entity.",
                        "tags": ["resourceTemplate"],
                        "parameters": [
                            {
                                "name": "id",
                                "in": "path",
                                "description": "The identifier of the ResourceTemplate.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        ],
                        "responses": {
                            "204": {
                                "description": "Deleted"
                            },
                            "400": {
                                "description": "Bad Request",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "401": {
                                "description": "Unauthorized",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "403": {
                                "description": "Forbidden",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "404": {
                                "description": "Not Found",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "405": {
                                "description": "Method Not allowed",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "409": {
                                "description": "Conflict",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            },
                            "500": {
                                "description": "Internal Server Error",
                                "content": {
                                    "application/json;charset=utf-8": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "@jdt.path": "$.components.schemas",
            "@jdt.value": {
                "GeoJson": {
                    "type": "object",
                    "description": "GeoJson",
                    "discriminator": {
                        "propertyName": "type",
                        "mapping": {
                            "Feature": "#/components/schemas/GeoJsonFeature",
                            "FeatureCollection": "#/components/schemas/GeoJsonFeatureCollection"
                        }
                    },
                    "required": ["type"],
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": ["Feature", "FeatureCollection"],
                            "description": "The GeoJson features type."
                        }
                    }
                },
                "GeoJsonFeatureCollection": {
                    "type": "object",
                    "description": "The GeoJSon FeatureCollection.",
                    "required": ["type"],
                    "allOf": [
                        {
                            "$ref": "#/components/schemas/GeoJson"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GeoJsonFeature"
                                    },
                                    "description": "This is a list of GeoJson Features."
                                }
                            }
                        }
                    ]
                },
                "GeoJsonFeature": {
                    "type": "object",
                    "description": "GeoJSon Feature",
                    "required": ["type"],
                    "allOf": [
                        {
                            "$ref": "#/components/schemas/GeoJson"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "geometry": {
                                    "$ref": "#/components/schemas/Geometry",
                                    "description": "The geometry for the GeoJson Feature."
                                },
                                "properties": {
                                    "$ref": "#/components/schemas/Any",
                                    "description": "Generic properties are what make geometric objects a feature object."
                                }
                            }
                        }
                    ]
                },
                "Geometry": {
                    "type": "object",
                    "description": "GeoJson geometry",
                    "discriminator": {
                        "propertyName": "type",
                        "mapping": {
                            "Point": "#/components/schemas/Point",
                            "Polygon": "#/components/schemas/Polygon"
                        }
                    },
                    "properties": {
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "Point2D": {
                    "type": "array",
                    "maxItems": 2,
                    "minItems": 2,
                    "items": {
                        "type": "number"
                    }
                },
                "Point": {
                    "type": "object",
                    "description": "GeoJSon geometry",
                    "allOf": [
                        {
                            "$ref": "#/components/schemas/Geometry"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "coordinates": {
                                    "$ref": "#/components/schemas/Point2D"
                                }
                            }
                        }
                    ]
                },
                "Polygon": {
                    "type": "object",
                    "description": "GeoJSon geometry",
                    "allOf": [
                        {
                            "$ref": "#/components/schemas/Geometry"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "coordinates": {
                                    "type": "array",
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Point2D"
                                        }
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "@jdt.path": "$.components.schemas.RelatedParty",
            "@jdt.value": {
                "description": "Related Party reference. A related party defines a party or a party role linked to a specific entity."
            }
        }
    ]
}
