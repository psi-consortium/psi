{
    "@jdt.replace": [
        {
            "@jdt.path": "$.info.description",
            "@jdt.value": "**This file forms part of MEF W143**\n\n**This API implements part of Business Requirements & Use Cases described\nin MEF W133.1.**\n\n**This specification represents MEF work in progress and is subject to\nchange.**\n\nMEF Performance Monitoring API allows to manage Performance Jobs\nand collect Performance Reports. This allows managing the \nperformance objectives that are typically associated with an SLS. \n\nTwo types of performance-related entities are supported by the API:\n- **Performance Monitoring Job** - specifies the performance monitoring\nobjectives specific to each subject of monitoring which could be an \nordered pair (i.e., two UNIs) or an entity (i.e., port).\n\n- **Performance Measurement Report** - The execution of PM Job results in\nPerformance Measurement collections that provide Buyer/Client with \nperformance objective results. In some cases performance collection\ncan be produced without provisioning of Performance Job \n(for example SLS is passed within the Service Order activation or \ncollection of passive statistics).\n\nList of use cases supported by the API:\n- Create Performance Monitoring Job\n- Retrieve list of Performance Monitoring Jobs\n- Retrieve Performance Monitoring Job by Job Identifier\n- Modify Performance Monitoring Job\n- Retrieve Modify Performance Monitoring Job List\n- Retrieve Modify Performance Monitoring Job by Identifier\n- Cancel Performance Monitoring Job\n- Retrieve Cancel Performance Monitoring Job List\n- Retrieve Cancel Performance Monitoring Job by Identifier\n- Suspend Performance Monitoring Job\n- Retrieve Suspend Performance Monitoring Job List\n- Retrieve Suspend Performance Monitoring Job by Identifier\n- Resume Performance Monitoring Job\n- Retrieve Resume Performance Monitoring Job List\n- Retrieve Resume Performance Monitoring Job by Identifier\n\n- Create Performance Measurement Report\n- Retrieve list of Performance Measurement Reports\n- Retrieve Performance Report by Report Identifier\n\nCopyright 2023 MEF Forum and its contributors\n\nThis file includes content based on the TM Forum Performance Management API\n(TMF628 v4.0.0) available at \nhttps://github.com/tmforum-apis/TMF628_Performance, which is licensed by \nthe TM Forum under the Apache License version 2.0. Such content has been\nmodified by the MEF Forum and its contributors.\n"
        },
        {
            "@jdt.path": "$.servers[*].url",
            "@jdt.value": "/psi-api/performanceMonitoring/v1/"
        },
        {
            "@jdt.path": "$.components.schemas.Error422Code.description",
            "@jdt.value": "One of the following error codes:\n- missingProperty: The property that was expected is not present in the\n  payload\n- invalidValue: The property has an incorrect value\n- invalidFormat: The property value does not comply with the expected \n  value format\n- referenceNotFound: The object referenced by the property cannot be \n  identified in the target system\n- unexpectedProperty: Additional, not expected property has been \n  provided\n- tooLargeDataset: The requested entity will produce too much data\n- tooManyRecords: The number of records to be provided in the response\n  exceeds the  threshold\n- tooManyRequests: The number of simultaneous requests from one API \n  client exceeds the threshold\n- performanceProfileInUse: Requested Performance Profile is being used\n  by a Performance Job\n- otherIssue: Other problem was identified (detailed information\n  provided in a reason)."
        },
        {
            "@jdt.path": "$.components.schemas.PerformanceJob_Common.properties.performanceProfile.$ref",
            "@jdt.value": "#/components/schemas/PerformanceProfileValue"
        },
        {
            "@jdt.path": "$.components.schemas.PerformanceJob_Find.properties.performanceProfile.$ref",
            "@jdt.value": "#/components/schemas/PerformanceProfileValue"
        },
        {
            "@jdt.path": "$.components.schemas.PerformanceProfileValue",
            "@jdt.value": {
                "properties": {
                    "granularity": {
                        "$ref": "#/components/schemas/Interval",
                        "description": "Sampling rate of the collection or production of performance indicators"
                    },
                    "jobPriority": {
                        "type": "integer",
                        "default": 5,
                        "description": "The priority of the Performance Job. The way the management application will use the Job priority to schedule Job execution is application-specific and out the scope."
                    },
                    "jobType": {
                        "$ref": "#/components/schemas/JobType"
                    },
                    "outputFormat": {
                        "$ref": "#/components/schemas/OutputFormat"
                    },
                    "reportingPeriod": {
                        "$ref": "#/components/schemas/Interval",
                        "description": "Defines the interval for the report generation."
                    },
                    "resultFormat": {
                        "$ref": "#/components/schemas/ResultFormat"
                    }
                },
                "type": "object",
                "required": ["jobType", "outputFormat", "resultFormat"],
                "description": "Direct assignment of values defined by PerformanceProfile type to PerformanceJob object. Necessary when PerformanceJob is created without reference to PerformanceProfile."
            }
        },
        {
            "@jdt.path": "$.components.schemas.Error422Code.enum",
            "@jdt.value": [
                "missingProperty",
                "invalidValue",
                "invalidFormat",
                "referenceNotFound",
                "unexpectedProperty",
                "tooLargeDataset",
                "tooManyRecords",
                "tooManyRequests",
                "otherIssue"
            ]
        },
        {
            "@jdt.path": "$.components.schemas.Error422Code.description",
            "@jdt.value": "One of the following error codes:\n- missingProperty: The property that was expected is not present in the\n  payload\n- invalidValue: The property has an incorrect value\n- invalidFormat: The property value does not comply with the expected \n  value format\n- referenceNotFound: The object referenced by the property cannot be \n  identified in the target system\n- unexpectedProperty: Additional, not expected property has been \n  provided\n- tooLargeDataset: The requested entity will produce too much data\n- tooManyRecords: The number of records to be provided in the response\n  exceeds the  threshold\n- tooManyRequests: The number of simultaneous requests from one API \n  client exceeds the threshold\n- otherIssue: Other problem was identified (detailed information\n  provided in a reason)."
        },
        {
            "@jdt.path": "$.components.schemas.JobType.enum",
            "@jdt.value": ["on-demand"]
        }
    ],
    "@jdt.remove": [
        {
            "@jdt.path": "$.servers[*].variables"
        },
        {
            "@jdt.path": "$.tags[?(@.name=='performanceProfile' || @.name=='trackingRecord' || @.name=='events subscription')]"
        },
        {
            "@jdt.path": "$.paths['/performanceJob'].get.parameters[?(@.name=='performanceProfileId')]"
        },
        {
            "@jdt.path": "$.paths['/performanceProfile']"
        },
        {
            "@jdt.path": "$.paths['/performanceProfile/{id}']"
        },
        {
            "@jdt.path": "$.paths['/trackingRecord']"
        },
        {
            "@jdt.path": "$.paths['/trackingRecord/{id}']"
        },
        {
            "@jdt.path": "$.paths['/hub']"
        },
        {
            "@jdt.path": "$.paths['/hub/{id}']"
        },
        {
            "@jdt.path": "$.components.schemas.Error409"
        },
        {
            "@jdt.path": "$.components.schemas.EventSubscription"
        },
        {
            "@jdt.path": "$.components.schemas.EventSubscriptionInput"
        },
        {
            "@jdt.path": "$.components.schemas.MeasurementTime.oneOf"
        },
        {
            "@jdt.path": "$.components.schemas.PerformanceJobComplexQuery.properties.performanceProfile"
        },
        {
            "@jdt.path": "$.components.schemas.PerformanceJobComplexQuery_Create.properties.performanceProfile"
        },
        {
            "@jdt.path": "$.components.schemas.PerformanceProfile"
        },
        {
            "@jdt.path": "$.components.schemas.PerformanceProfileRefOrValue"
        },
        {
            "@jdt.path": "$.components.schemas.PerformanceProfileRef"
        },
        {
            "@jdt.path": "$.components.schemas.PerformanceProfileStateType"
        },
        {
            "@jdt.path": "$.components.schemas.PerformanceProfile_Common"
        },
        {
            "@jdt.path": "$.components.schemas.PerformanceProfile_Create"
        },
        {
            "@jdt.path": "$.components.schemas.PerformanceProfile_Find"
        },
        {
            "@jdt.path": "$.components.schemas.PerformanceProfile_Update"
        },
        {
            "@jdt.path": "$.components.schemas.TrackingRecord"
        },
        {
            "@jdt.path": "$.components.schemas.TrackingRecord_Find"
        },        
        {
        "@jdt.path": "$.components.schemas.MeasurementTime.oneOf"
        }
    ],
    "@jdt.merge": [
        {
            "@jdt.path": "$.tags[?(@.name=='performanceJob' || @.name== 'modifyPerformanceJob' || @.name== 'suspendPerformanceJob' || @.name== 'resumePerformanceJob' || @.name== 'cancelPerformanceJob' || @.name== 'performanceJobComplexQuery')]",
            "@jdt.value": {
                "description": "Performance Monitoring Job API"
            }
        },
        {
            "@jdt.path": "$.tags[?(@.name=='performanceReport' || @.name== 'performanceReportComplexQuery')]",
            "@jdt.value": {
                "description": "Performance Monitoring Report API"
            }
        },
        {
            "@jdt.path": "$.components.schemas.CancelPerformanceJob.allOf[1].properties.href",
            "@jdt.value": {
                "format": "uri"
            }
        },
        {
            "@jdt.path": "$.components.schemas.ModifyPerformanceJob.allOf[1].properties.href",
            "@jdt.value": {
                "format": "uri"
            }
        },
        {
            "@jdt.path": "$.components.schemas.PerformanceJobRef.allOf[1].properties.href",
            "@jdt.value": {
                "format": "uri"
            }
        },
        {
            "@jdt.path": "$.components.schemas.PerformanceReportRef.properties.href",
            "@jdt.value": {
                "format": "uri"
            }
        },
        {
            "@jdt.path": "$.components.schemas.ResumePerformanceJob.allOf[1].properties.href",
            "@jdt.value": {
                "format": "uri"
            }
        },
        {
            "@jdt.path": "$.components.schemas.SuspendPerformanceJob.allOf[1].properties.href",
            "@jdt.value": {
                "format": "uri"
            }
        },
        {
            "@jdt.path": "$.components.schemas.Error",
            "@jdt.value": {
                "required": ["code"],
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Application relevant detail, defined in the API or a common list."
                    },
                    "message": {
                        "type": "string",
                        "description": "More details and corrective actions related to the error which can be shown to a client user."
                    },
                    "status": {
                        "type": "string",
                        "description": "HTTP Error code extension"
                    },
                    "referenceError": {
                        "type": "string",
                        "description": "URI of documentation describing the error.",
                        "format": "uri"
                    },
                    "@baseType": {
                        "type": "string",
                        "description": "When sub-classing, this defines the super-class."
                    },
                    "@schemaLocation": {
                        "type": "string",
                        "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
                        "format": "uri"
                    },
                    "@type": {
                        "type": "string",
                        "description": "When sub-classing, this defines the sub-class entity name."
                    }
                },
                "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)"
            }
        }
    ]
}
