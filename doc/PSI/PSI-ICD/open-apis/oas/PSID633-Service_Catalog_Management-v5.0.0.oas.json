{
  "openapi": "3.0.1",
  "info": {
    "title": "Service Catalog Management",
    "description": "The Service Catalog API is one of Catalog Management API Family. Service Catalog API goal is to provide a catalog of services. \nService Catalog API performs the following operations on the resource :\n- Retrieve an entity or a collection of entities depending on filter criteria\n- Partial update of an entity (including updating rules)\n- Create an entity (including default values and creation rules)\n- Delete an entity (for administration purposes)\n- Manage notification of events. .",
    "version": "5.0.0"
  },
  "servers": [
    {
      "url": "/psi-api/serviceManagement/v2/"
    }
  ],
  "tags": [
    {
      "name": "serviceSpecification",
      "description": "Operations for ServiceSpecification Resource"
    },
    {
      "name": "serviceTemplate",
      "description": "Operations for ServiceTemplate Resource"
    }
  ],
  "paths": {
    "/serviceSpecification": {
      "get": {
        "tags": [
          "serviceSpecification"
        ],
        "summary": "List or find ServiceSpecification objects",
        "description": "List or find ServiceSpecification objects",
        "operationId": "listServiceSpecification",
        "parameters": [
          {
            "$ref": "#/components/parameters/Fields"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200ServiceSpecificationArray"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "tags": [
          "serviceSpecification"
        ],
        "summary": "Creates a ServiceSpecification",
        "description": "This operation creates a ServiceSpecification entity.",
        "operationId": "createServiceSpecification",
        "parameters": [
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ServiceSpecification_FVO"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201ServiceSpecification"
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/serviceSpecification/{id}": {
      "get": {
        "tags": [
          "serviceSpecification"
        ],
        "summary": "Retrieves a ServiceSpecification by ID",
        "description": "This operation retrieves a ServiceSpecification entity. Attribute selection enabled for all first level attributes.",
        "operationId": "retrieveServiceSpecification",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          },
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200ServiceSpecification_Get"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "tags": [
          "serviceSpecification"
        ],
        "summary": "Deletes a ServiceSpecification",
        "description": "This operation deletes a ServiceSpecification entity.",
        "operationId": "deleteServiceSpecification",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "responses": {
          "202": {
            "$ref": "#/components/responses/202"
          },
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "tags": [
          "serviceSpecification"
        ],
        "summary": "Updates partially a ServiceSpecification",
        "description": "This operation updates partially a ServiceSpecification entity.",
        "operationId": "patchServiceSpecification",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          },
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ServiceSpecification_MVO"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200ServiceSpecification_Patch"
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/serviceTemplate": {
      "get": {
        "tags": [
          "serviceTemplate"
        ],
        "summary": "List or find ServiceTemplate objects",
        "description": "List or find ServiceTemplate objects",
        "operationId": "listServiceTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/Fields"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200ServiceSpecificationArray"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "tags": [
          "serviceTemplate"
        ],
        "summary": "Creates a ServiceTemplate",
        "description": "This operation creates a ServiceTemplate entity.",
        "operationId": "createServiceTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ServiceSpecification_FVO"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201ServiceSpecification"
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/serviceTemplate/{id}": {
      "get": {
        "tags": [
          "serviceTemplate"
        ],
        "summary": "Retrieves a ServiceTemplate by ID",
        "description": "This operation retrieves a ServiceTemplate entity. Attribute selection enabled for all first level attributes.",
        "operationId": "retrieveServiceTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          },
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200ServiceSpecification_Get"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "tags": [
          "serviceTemplate"
        ],
        "summary": "Deletes a ServiceTemplate",
        "description": "This operation deletes a ServiceTemplate entity.",
        "operationId": "deleteServiceTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "responses": {
          "202": {
            "$ref": "#/components/responses/202"
          },
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "tags": [
          "serviceTemplate"
        ],
        "summary": "Updates partially a ServiceTemplate",
        "description": "This operation updates partially a ServiceTemplate entity.",
        "operationId": "patchServiceTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          },
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ServiceSpecification_MVO"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200ServiceSpecification_Patch"
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Addressable": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "Hyperlink reference",
            "format": "uri"
          },
          "id": {
            "type": "string",
            "description": "unique identifier"
          }
        },
        "description": "Base schema for adressable entities"
      },
      "Addressable_FVO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique identifier"
          }
        },
        "description": "Base schema for adressable entities"
      },
      "AssociationSpecificationRef": {
        "type": "object",
        "description": "reference to an AssociationSpecification object",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "AssociationSpecificationRef": "#/components/schemas/AssociationSpecificationRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "AssociationSpecificationRef_FVO": {
        "type": "object",
        "description": "reference to an AssociationSpecification object",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "AssociationSpecificationRef": "#/components/schemas/AssociationSpecificationRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ]
      },
      "AssociationSpecificationRef_MVO": {
        "type": "object",
        "description": "reference to an AssociationSpecification object",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "AssociationSpecificationRef": "#/components/schemas/AssociationSpecificationRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "AttachmentOrDocumentRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "AttachmentRef": "#/components/schemas/AttachmentOrDocumentRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "A narrative text describing the content of the attachment"
              },
              "url": {
                "type": "string",
                "description": "Link to the attachment media/content"
              }
            },
            "description": "Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures"
          }
        ]
      },
      "CharacteristicSpecification": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecification": "#/components/schemas/CharacteristicSpecification"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique ID for the characteristic"
              },
              "name": {
                "type": "string",
                "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
              },
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
              },
              "description": {
                "type": "string",
                "description": "A narrative that explains the CharacteristicSpecification."
              },
              "configurable": {
                "type": "boolean",
                "description": "If true, the Boolean indicates that the target Characteristic is configurable"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "minCardinality": {
                "type": "integer",
                "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
              },
              "maxCardinality": {
                "type": "integer",
                "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
              },
              "isUnique": {
                "type": "boolean",
                "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
              },
              "regex": {
                "type": "string",
                "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
              },
              "extensible": {
                "type": "boolean",
                "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
              },
              "@valueSchemaLocation": {
                "type": "string",
                "description": "This (optional) field provides a link to the schema describing the value type."
              },
              "charSpecRelationship": {
                "type": "array",
                "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecificationRelationship"
                }
              },
              "characteristicValueSpecification": {
                "type": "array",
                "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicValueSpecification"
                }
              }
            },
            "description": "This class defines a characteristic specification."
          }
        ]
      },
      "CharacteristicSpecificationRelationship": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecificationRelationship": "#/components/schemas/CharacteristicSpecificationRelationship"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
              },
              "name": {
                "type": "string",
                "description": "Name of the target characteristic within the specification"
              },
              "characteristicSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the characteristic within the specification"
              },
              "parentSpecificationHref": {
                "type": "string",
                "description": "Hyperlink reference to the parent specification containing the target characteristic",
                "format": "uri"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "parentSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the parent specification containing the target characteristic"
              }
            },
            "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Characteristic specifications. The specification characteristic is embedded within the specification whose ID and href are in this entity, and identified by its ID."
          }
        ]
      },
      "CharacteristicSpecificationRelationship_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecificationRelationship": "#/components/schemas/CharacteristicSpecificationRelationship_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "name",
              "parentSpecificationId",
              "relationshipType"
            ],
            "type": "object",
            "properties": {
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
              },
              "name": {
                "type": "string",
                "description": "Name of the target characteristic within the specification"
              },
              "characteristicSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the characteristic within the specification"
              },
              "parentSpecificationHref": {
                "type": "string",
                "description": "Hyperlink reference to the parent specification containing the target characteristic",
                "format": "uri"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "parentSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the parent specification containing the target characteristic"
              }
            },
            "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Characteristic specifications. The specification characteristic is embedded within the specification whose ID and href are in this entity, and identified by its ID."
          }
        ]
      },
      "CharacteristicSpecificationRelationship_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecificationRelationship": "#/components/schemas/CharacteristicSpecificationRelationship_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "required": [
              "name",
              "parentSpecificationId",
              "relationshipType"
            ],
            "type": "object",
            "properties": {
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
              },
              "name": {
                "type": "string",
                "description": "Name of the target characteristic within the specification"
              },
              "characteristicSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the characteristic within the specification"
              },
              "parentSpecificationHref": {
                "type": "string",
                "description": "Hyperlink reference to the parent specification containing the target characteristic",
                "format": "uri"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "parentSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the parent specification containing the target characteristic"
              }
            },
            "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Characteristic specifications. The specification characteristic is embedded within the specification whose ID and href are in this entity, and identified by its ID."
          }
        ]
      },
      "CharacteristicSpecification_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecification": "#/components/schemas/CharacteristicSpecification_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "name",
              "valueType"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique ID for the characteristic"
              },
              "name": {
                "type": "string",
                "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
              },
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
              },
              "description": {
                "type": "string",
                "description": "A narrative that explains the CharacteristicSpecification."
              },
              "configurable": {
                "type": "boolean",
                "description": "If true, the Boolean indicates that the target Characteristic is configurable"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "minCardinality": {
                "type": "integer",
                "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
              },
              "maxCardinality": {
                "type": "integer",
                "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
              },
              "isUnique": {
                "type": "boolean",
                "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
              },
              "regex": {
                "type": "string",
                "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
              },
              "extensible": {
                "type": "boolean",
                "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
              },
              "@valueSchemaLocation": {
                "type": "string",
                "description": "This (optional) field provides a link to the schema describing the value type."
              },
              "charSpecRelationship": {
                "type": "array",
                "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecificationRelationship_FVO"
                }
              },
              "characteristicValueSpecification": {
                "type": "array",
                "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
                }
              }
            },
            "description": "This class defines a characteristic specification."
          }
        ]
      },
      "CharacteristicSpecification_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecification": "#/components/schemas/CharacteristicSpecification_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "required": [
              "name",
              "valueType"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique ID for the characteristic"
              },
              "name": {
                "type": "string",
                "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
              },
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
              },
              "description": {
                "type": "string",
                "description": "A narrative that explains the CharacteristicSpecification."
              },
              "configurable": {
                "type": "boolean",
                "description": "If true, the Boolean indicates that the target Characteristic is configurable"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "minCardinality": {
                "type": "integer",
                "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
              },
              "maxCardinality": {
                "type": "integer",
                "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
              },
              "isUnique": {
                "type": "boolean",
                "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
              },
              "regex": {
                "type": "string",
                "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
              },
              "extensible": {
                "type": "boolean",
                "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
              },
              "@valueSchemaLocation": {
                "type": "string",
                "description": "This (optional) field provides a link to the schema describing the value type."
              },
              "charSpecRelationship": {
                "type": "array",
                "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecificationRelationship_MVO"
                }
              },
              "characteristicValueSpecification": {
                "type": "array",
                "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
                }
              }
            },
            "description": "This class defines a characteristic specification."
          }
        ]
      },
      "CharacteristicValueSpecification": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicValueSpecification": "#/components/schemas/CharacteristicValueSpecification",
            "StringCharacteristicValueSpecification": "#/components/schemas/StringCharacteristicValueSpecification",
            "StringArrayCharacteristicValueSpecification": "#/components/schemas/StringArrayCharacteristicValueSpecification",
            "ObjectCharacteristicValueSpecification": "#/components/schemas/ObjectCharacteristicValueSpecification",
            "ObjectArrayCharacteristicValueSpecification": "#/components/schemas/ObjectArrayCharacteristicValueSpecification",
            "NumberCharacteristicValueSpecification": "#/components/schemas/NumberCharacteristicValueSpecification",
            "NumberArrayCharacteristicValueSpecification": "#/components/schemas/NumberArrayCharacteristicValueSpecification",
            "MapCharacteristicValueSpecification": "#/components/schemas/MapCharacteristicValueSpecification",
            "MapArrayCharacteristicValueSpecification": "#/components/schemas/MapArrayCharacteristicValueSpecification",
            "IntegerCharacteristicValueSpecification": "#/components/schemas/IntegerCharacteristicValueSpecification",
            "IntegerArrayCharacteristicValueSpecification": "#/components/schemas/IntegerArrayCharacteristicValueSpecification"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
              },
              "isDefault": {
                "type": "boolean",
                "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
              },
              "unitOfMeasure": {
                "type": "string",
                "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "valueFrom": {
                "type": "integer",
                "description": "The low range value that a characteristic can take on"
              },
              "valueTo": {
                "type": "integer",
                "description": "The upper range value that a characteristic can take on"
              },
              "rangeInterval": {
                "type": "string",
                "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
              },
              "regex": {
                "type": "string",
                "description": "A regular expression constraint for given value"
              }
            },
            "description": "specification of a value (number or text or an object) that can be assigned to a Characteristic. This is an abstract base class, the actual value is in one of the strongly-typed subclasses"
          }
        ]
      },
      "CharacteristicValueSpecification_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicValueSpecification": "#/components/schemas/CharacteristicValueSpecification_FVO",
            "StringCharacteristicValueSpecification": "#/components/schemas/StringCharacteristicValueSpecification_FVO",
            "StringArrayCharacteristicValueSpecification": "#/components/schemas/StringArrayCharacteristicValueSpecification_FVO",
            "ObjectCharacteristicValueSpecification": "#/components/schemas/ObjectCharacteristicValueSpecification_FVO",
            "ObjectArrayCharacteristicValueSpecification": "#/components/schemas/ObjectArrayCharacteristicValueSpecification_FVO",
            "NumberCharacteristicValueSpecification": "#/components/schemas/NumberCharacteristicValueSpecification_FVO",
            "NumberArrayCharacteristicValueSpecification": "#/components/schemas/NumberArrayCharacteristicValueSpecification_FVO",
            "MapCharacteristicValueSpecification": "#/components/schemas/MapCharacteristicValueSpecification_FVO",
            "MapArrayCharacteristicValueSpecification": "#/components/schemas/MapArrayCharacteristicValueSpecification_FVO",
            "IntegerCharacteristicValueSpecification": "#/components/schemas/IntegerCharacteristicValueSpecification_FVO",
            "IntegerArrayCharacteristicValueSpecification": "#/components/schemas/IntegerArrayCharacteristicValueSpecification_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "type": "object",
            "properties": {
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
              },
              "isDefault": {
                "type": "boolean",
                "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
              },
              "unitOfMeasure": {
                "type": "string",
                "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "valueFrom": {
                "type": "integer",
                "description": "The low range value that a characteristic can take on"
              },
              "valueTo": {
                "type": "integer",
                "description": "The upper range value that a characteristic can take on"
              },
              "rangeInterval": {
                "type": "string",
                "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
              },
              "regex": {
                "type": "string",
                "description": "A regular expression constraint for given value"
              }
            },
            "description": "specification of a value (number or text or an object) that can be assigned to a Characteristic. This is an abstract base class, the actual value is in one of the strongly-typed subclasses"
          }
        ]
      },
      "CharacteristicValueSpecification_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicValueSpecification": "#/components/schemas/CharacteristicValueSpecification_MVO",
            "StringCharacteristicValueSpecification": "#/components/schemas/StringCharacteristicValueSpecification_MVO",
            "StringArrayCharacteristicValueSpecification": "#/components/schemas/StringArrayCharacteristicValueSpecification_MVO",
            "ObjectCharacteristicValueSpecification": "#/components/schemas/ObjectCharacteristicValueSpecification_MVO",
            "ObjectArrayCharacteristicValueSpecification": "#/components/schemas/ObjectArrayCharacteristicValueSpecification_MVO",
            "NumberCharacteristicValueSpecification": "#/components/schemas/NumberCharacteristicValueSpecification_MVO",
            "NumberArrayCharacteristicValueSpecification": "#/components/schemas/NumberArrayCharacteristicValueSpecification_MVO",
            "MapCharacteristicValueSpecification": "#/components/schemas/MapCharacteristicValueSpecification_MVO",
            "MapArrayCharacteristicValueSpecification": "#/components/schemas/MapArrayCharacteristicValueSpecification_MVO",
            "IntegerCharacteristicValueSpecification": "#/components/schemas/IntegerCharacteristicValueSpecification_MVO",
            "IntegerArrayCharacteristicValueSpecification": "#/components/schemas/IntegerArrayCharacteristicValueSpecification_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
              },
              "isDefault": {
                "type": "boolean",
                "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
              },
              "unitOfMeasure": {
                "type": "string",
                "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "valueFrom": {
                "type": "integer",
                "description": "The low range value that a characteristic can take on"
              },
              "valueTo": {
                "type": "integer",
                "description": "The upper range value that a characteristic can take on"
              },
              "rangeInterval": {
                "type": "string",
                "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
              },
              "regex": {
                "type": "string",
                "description": "A regular expression constraint for given value"
              }
            },
            "description": "specification of a value (number or text or an object) that can be assigned to a Characteristic. This is an abstract base class, the actual value is in one of the strongly-typed subclasses"
          }
        ]
      },
      "ConstraintRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ConstraintRef": "#/components/schemas/ConstraintRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "constraint version"
              }
            },
            "description": "Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec."
          }
        ]
      },
      "ConstraintRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ConstraintRef": "#/components/schemas/ConstraintRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "constraint version"
              }
            },
            "description": "Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec."
          }
        ]
      },
      "ConstraintRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ConstraintRef": "#/components/schemas/ConstraintRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "constraint version"
              }
            },
            "description": "Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec."
          }
        ]
      },
      "Entity": {
        "type": "object",
        "description": "Base entity schema for use in TMForum Open-APIs. Property.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/Addressable"
          }
        ]
      },
      "EntityRef": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/Addressable"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the referred entity."
              },
              "href": {
                "type": "string",
                "description": "The URI of the referred entity.",
                "format": "uri"
              },
              "name": {
                "type": "string",
                "description": "Name of the referred entity."
              },
              "@referredType": {
                "type": "string",
                "description": "The actual type of the target instance when needed for disambiguation."
              }
            },
            "description": "Entity reference schema to be use for all entityRef class."
          }
        ]
      },
      "EntityRef_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "$ref": "#/components/schemas/Addressable_FVO"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the referred entity."
              },
              "href": {
                "type": "string",
                "description": "The URI of the referred entity.",
                "format": "uri"
              },
              "name": {
                "type": "string",
                "description": "Name of the referred entity."
              },
              "@referredType": {
                "type": "string",
                "description": "The actual type of the target instance when needed for disambiguation."
              }
            },
            "description": "Entity reference schema to be use for all entityRef class."
          }
        ]
      },
      "EntityRelationship": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "format": "uri"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "description": "The association role for this entity"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "associationSpec": {
            "$ref": "#/components/schemas/EntityRef"
          },
          "@baseType": {
            "type": "string",
            "description": "When sub-classing, this defines the super-class"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
          },
          "relationshipType": {
            "type": "string",
            "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
          },
          "id": {
            "type": "string"
          },
          "@referredType": {
            "type": "string"
          },
          "@type": {
            "type": "string"
          }
        },
        "description": "A uni-directionmal relationship from this entity to a target entity instance"
      },
      "EntityRelationship_FVO": {
        "required": [
          "@referredType",
          "@type",
          "id",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "format": "uri"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "description": "The association role for this entity"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "associationSpec": {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          "@baseType": {
            "type": "string",
            "description": "When sub-classing, this defines the super-class"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
          },
          "relationshipType": {
            "type": "string",
            "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
          },
          "id": {
            "type": "string"
          },
          "@referredType": {
            "type": "string"
          },
          "@type": {
            "type": "string"
          }
        },
        "description": "A uni-directionmal relationship from this entity to a target entity instance"
      },
      "EntityRelationship_MVO": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "format": "uri"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "description": "The association role for this entity"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "associationSpec": {
            "$ref": "#/components/schemas/EntityRef"
          },
          "@baseType": {
            "type": "string",
            "description": "When sub-classing, this defines the super-class"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
          },
          "relationshipType": {
            "type": "string",
            "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
          },
          "id": {
            "type": "string"
          },
          "@referredType": {
            "type": "string"
          },
          "@type": {
            "type": "string"
          }
        },
        "description": "A uni-directionmal relationship from this entity to a target entity instance"
      },
      "EntitySpecification": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "EntitySpecification": "#/components/schemas/EntitySpecification",
            "ServiceSpecification": "#/components/schemas/ServiceSpecification"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name given to the specification"
              },
              "description": {
                "type": "string",
                "description": "Description of the specification"
              },
              "lastUpdate": {
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this catalog item"
              },
              "isBundle": {
                "type": "boolean",
                "description": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true)."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "version": {
                "type": "string",
                "description": "specification version"
              },
              "attachment": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentOrDocumentRef"
                }
              },
              "targetEntitySchema": {
                "$ref": "#/components/schemas/TargetEntitySchema"
              },
              "specCharacteristic": {
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification"
                }
              },
              "relatedParty": {
                "type": "array",
                "description": "Parties who manage or otherwise have an interest in this specification",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef"
                }
              },
              "constraint": {
                "type": "array",
                "description": "This is a list of constraint references applied to this specification",
                "items": {
                  "$ref": "#/components/schemas/ConstraintRef"
                }
              },
              "entitySpecRelationship": {
                "type": "array",
                "description": "Relationship to another specification",
                "items": {
                  "$ref": "#/components/schemas/EntitySpecificationRelationship"
                }
              }
            },
            "description": "EntitySpecification is a class that offers characteristics to describe a type of entity. Entities are generic constructs that may be used to describe bespoke business entities that are not effectively covered by the existing SID model.\nFunctionally, the entity specification acts as a template by which entities may be instantiated and described. By sharing the same specification, these entities would therefore share the same set of characteristics.\nNote: The ‘configurable’ attribute on the specCharacteristics determines if an entity instantiated from the entity specification can override the value of the attribute. When set to false, the entity instance may not define a value that differs from the value in the specification."
          }
        ]
      },
      "EntitySpecificationRelationship": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "format": "uri"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "description": "The association role for this entity specification"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "associationSpec": {
            "$ref": "#/components/schemas/AssociationSpecificationRef"
          },
          "@baseType": {
            "type": "string"
          },
          "@schemaLocation": {
            "type": "string"
          },
          "relationshipType": {
            "type": "string",
            "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
          }
        },
        "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications."
      },
      "EntitySpecificationRelationship_FVO": {
        "required": [
          "associationSpec",
          "relationshipType",
          "role",
          "validFor"
        ],
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "format": "uri"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "description": "The association role for this entity specification"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "associationSpec": {
            "$ref": "#/components/schemas/AssociationSpecificationRef_FVO"
          },
          "@baseType": {
            "type": "string"
          },
          "@schemaLocation": {
            "type": "string"
          },
          "relationshipType": {
            "type": "string",
            "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
          }
        },
        "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications."
      },
      "EntitySpecificationRelationship_MVO": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "format": "uri"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "description": "The association role for this entity specification"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "associationSpec": {
            "$ref": "#/components/schemas/AssociationSpecificationRef_MVO"
          },
          "@baseType": {
            "type": "string"
          },
          "@schemaLocation": {
            "type": "string"
          },
          "relationshipType": {
            "type": "string",
            "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
          }
        },
        "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications."
      },
      "EntitySpecification_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "EntitySpecification": "#/components/schemas/EntitySpecification_FVO",
            "ServiceSpecification": "#/components/schemas/ServiceSpecification_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity_FVO"
          },
          {
            "required": [
              "name"
            ],
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name given to the specification"
              },
              "description": {
                "type": "string",
                "description": "Description of the specification"
              },
              "lastUpdate": {
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this catalog item"
              },
              "isBundle": {
                "type": "boolean",
                "description": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true)."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "version": {
                "type": "string",
                "description": "specification version"
              },
              "attachment": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentOrDocumentRef"
                }
              },
              "targetEntitySchema": {
                "$ref": "#/components/schemas/TargetEntitySchema_FVO"
              },
              "specCharacteristic": {
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification_FVO"
                }
              },
              "relatedParty": {
                "type": "array",
                "description": "Parties who manage or otherwise have an interest in this specification",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO"
                }
              },
              "constraint": {
                "type": "array",
                "description": "This is a list of constraint references applied to this specification",
                "items": {
                  "$ref": "#/components/schemas/ConstraintRef_FVO"
                }
              },
              "entitySpecRelationship": {
                "type": "array",
                "description": "Relationship to another specification",
                "items": {
                  "$ref": "#/components/schemas/EntitySpecificationRelationship_FVO"
                }
              }
            },
            "description": "EntitySpecification is a class that offers characteristics to describe a type of entity. Entities are generic constructs that may be used to describe bespoke business entities that are not effectively covered by the existing SID model.\nFunctionally, the entity specification acts as a template by which entities may be instantiated and described. By sharing the same specification, these entities would therefore share the same set of characteristics.\nNote: The ‘configurable’ attribute on the specCharacteristics determines if an entity instantiated from the entity specification can override the value of the attribute. When set to false, the entity instance may not define a value that differs from the value in the specification."
          }
        ]
      },
      "EntitySpecification_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "EntitySpecification": "#/components/schemas/EntitySpecification_MVO",
            "ServiceSpecification": "#/components/schemas/ServiceSpecification_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity_MVO"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name given to the specification"
              },
              "description": {
                "type": "string",
                "description": "Description of the specification"
              },
              "lastUpdate": {
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this catalog item"
              },
              "isBundle": {
                "type": "boolean",
                "description": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true)."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "version": {
                "type": "string",
                "description": "specification version"
              },
              "attachment": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentOrDocumentRef"
                }
              },
              "targetEntitySchema": {
                "$ref": "#/components/schemas/TargetEntitySchema_MVO"
              },
              "specCharacteristic": {
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification_MVO"
                }
              },
              "relatedParty": {
                "type": "array",
                "description": "Parties who manage or otherwise have an interest in this specification",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO"
                }
              },
              "constraint": {
                "type": "array",
                "description": "This is a list of constraint references applied to this specification",
                "items": {
                  "$ref": "#/components/schemas/ConstraintRef_MVO"
                }
              },
              "entitySpecRelationship": {
                "type": "array",
                "description": "Relationship to another specification",
                "items": {
                  "$ref": "#/components/schemas/EntitySpecificationRelationship_MVO"
                }
              }
            },
            "description": "EntitySpecification is a class that offers characteristics to describe a type of entity. Entities are generic constructs that may be used to describe bespoke business entities that are not effectively covered by the existing SID model.\nFunctionally, the entity specification acts as a template by which entities may be instantiated and described. By sharing the same specification, these entities would therefore share the same set of characteristics.\nNote: The ‘configurable’ attribute on the specCharacteristics determines if an entity instantiated from the entity specification can override the value of the attribute. When set to false, the entity instance may not define a value that differs from the value in the specification."
          }
        ]
      },
      "Entity_FVO": {
        "type": "object",
        "description": "Base entity schema for use in TMForum Open-APIs. Property.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "$ref": "#/components/schemas/Addressable_FVO"
          }
        ]
      },
      "Entity_MVO": {
        "type": "object",
        "description": "Base entity schema for use in TMForum Open-APIs. Property.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          }
        ]
      },
      "Extensible": {
        "required": [
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "When sub-classing, this defines the sub-class Extensible name"
          },
          "@baseType": {
            "type": "string",
            "description": "When sub-classing, this defines the super-class"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
          }
        },
        "description": "Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means that the Entity described by the schema  MUST be extended with the @type"
      },
      "Extensible_FVO": {
        "required": [
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "When sub-classing, this defines the sub-class Extensible name"
          },
          "@baseType": {
            "type": "string",
            "description": "When sub-classing, this defines the super-class"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
          }
        },
        "description": "Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means that the Entity described by the schema  MUST be extended with the @type"
      },
      "FeatureSpecification": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "FeatureSpecification": "#/components/schemas/FeatureSpecification"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Version of the feature specification"
              },
              "id": {
                "type": "string",
                "description": "feature identifier"
              },
              "isBundle": {
                "type": "boolean",
                "description": "A flag indicating if this is a feature group (true) or not (false)"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "featureSpecRelationship": {
                "type": "array",
                "description": "A dependency, exclusivity or aggratation relationship between/among feature specifications.",
                "items": {
                  "$ref": "#/components/schemas/FeatureSpecificationRelationship"
                }
              },
              "policyConstraint": {
                "type": "array",
                "description": "Reference to mangage a list of feature specification policy constraints",
                "items": {
                  "$ref": "#/components/schemas/PolicyRef"
                }
              },
              "isEnabled": {
                "type": "boolean",
                "description": "A flag indicating if the feature is enabled (true) or not (false)"
              },
              "featureSpecCharacteristic": {
                "type": "array",
                "description": "This is a list of characteristics for a particular feature",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification"
                }
              },
              "name": {
                "type": "string",
                "description": "This is the name for the feature."
              }
            },
            "description": "Specification for an entity features"
          }
        ]
      },
      "FeatureSpecificationRelationship": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "FeatureSpecificationRelationship": "#/components/schemas/FeatureSpecificationRelationship"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "relationshipType": {
                "type": "string",
                "description": "This is the type of the feature specification relationship.",
                "enum": [
                  "excluded",
                  "includes",
                  "may include",
                  "requires"
                ]
              },
              "featureId": {
                "type": "string",
                "description": "Unique identifier of the target feature specification."
              },
              "parentSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the parent specification containing the target feature"
              },
              "parentSpecificationHref": {
                "type": "string",
                "description": "Hyperlink reference to the parent specification containing the target feature",
                "format": "uri"
              },
              "name": {
                "type": "string",
                "description": "This is the name of the target feature specification."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              }
            },
            "description": "Relationship between feature specifications"
          }
        ]
      },
      "FeatureSpecificationRelationship_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "FeatureSpecificationRelationship": "#/components/schemas/FeatureSpecificationRelationship_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "name",
              "relationshipType"
            ],
            "type": "object",
            "properties": {
              "relationshipType": {
                "type": "string",
                "description": "This is the type of the feature specification relationship.",
                "enum": [
                  "excluded",
                  "includes",
                  "may include",
                  "requires"
                ]
              },
              "featureId": {
                "type": "string",
                "description": "Unique identifier of the target feature specification."
              },
              "parentSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the parent specification containing the target feature"
              },
              "parentSpecificationHref": {
                "type": "string",
                "description": "Hyperlink reference to the parent specification containing the target feature",
                "format": "uri"
              },
              "name": {
                "type": "string",
                "description": "This is the name of the target feature specification."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              }
            },
            "description": "Relationship between feature specifications"
          }
        ]
      },
      "FeatureSpecificationRelationship_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "FeatureSpecificationRelationship": "#/components/schemas/FeatureSpecificationRelationship_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "required": [
              "name",
              "relationshipType"
            ],
            "type": "object",
            "properties": {
              "relationshipType": {
                "type": "string",
                "description": "This is the type of the feature specification relationship.",
                "enum": [
                  "excluded",
                  "includes",
                  "may include",
                  "requires"
                ]
              },
              "featureId": {
                "type": "string",
                "description": "Unique identifier of the target feature specification."
              },
              "parentSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the parent specification containing the target feature"
              },
              "parentSpecificationHref": {
                "type": "string",
                "description": "Hyperlink reference to the parent specification containing the target feature",
                "format": "uri"
              },
              "name": {
                "type": "string",
                "description": "This is the name of the target feature specification."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              }
            },
            "description": "Relationship between feature specifications"
          }
        ]
      },
      "FeatureSpecification_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "FeatureSpecification": "#/components/schemas/FeatureSpecification_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "@type",
              "name"
            ],
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Version of the feature specification"
              },
              "id": {
                "type": "string",
                "description": "feature identifier"
              },
              "isBundle": {
                "type": "boolean",
                "description": "A flag indicating if this is a feature group (true) or not (false)"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "featureSpecRelationship": {
                "type": "array",
                "description": "A dependency, exclusivity or aggratation relationship between/among feature specifications.",
                "items": {
                  "$ref": "#/components/schemas/FeatureSpecificationRelationship_FVO"
                }
              },
              "policyConstraint": {
                "type": "array",
                "description": "Reference to mangage a list of feature specification policy constraints",
                "items": {
                  "$ref": "#/components/schemas/PolicyRef_FVO"
                }
              },
              "isEnabled": {
                "type": "boolean",
                "description": "A flag indicating if the feature is enabled (true) or not (false)"
              },
              "featureSpecCharacteristic": {
                "type": "array",
                "description": "This is a list of characteristics for a particular feature",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification_FVO"
                }
              },
              "name": {
                "type": "string",
                "description": "This is the name for the feature."
              }
            },
            "description": "Specification for an entity features"
          }
        ]
      },
      "FeatureSpecification_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "FeatureSpecification": "#/components/schemas/FeatureSpecification_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "required": [
              "@type",
              "name"
            ],
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Version of the feature specification"
              },
              "id": {
                "type": "string",
                "description": "feature identifier"
              },
              "isBundle": {
                "type": "boolean",
                "description": "A flag indicating if this is a feature group (true) or not (false)"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "featureSpecRelationship": {
                "type": "array",
                "description": "A dependency, exclusivity or aggratation relationship between/among feature specifications.",
                "items": {
                  "$ref": "#/components/schemas/FeatureSpecificationRelationship_MVO"
                }
              },
              "policyConstraint": {
                "type": "array",
                "description": "Reference to mangage a list of feature specification policy constraints",
                "items": {
                  "$ref": "#/components/schemas/PolicyRef_MVO"
                }
              },
              "isEnabled": {
                "type": "boolean",
                "description": "A flag indicating if the feature is enabled (true) or not (false)"
              },
              "featureSpecCharacteristic": {
                "type": "array",
                "description": "This is a list of characteristics for a particular feature",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification_MVO"
                }
              },
              "name": {
                "type": "string",
                "description": "This is the name for the feature."
              }
            },
            "description": "Specification for an entity features"
          }
        ]
      },
      "IntegerArrayCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array of format integer"
          }
        ]
      },
      "IntegerArrayCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array of format integer"
          }
        ]
      },
      "IntegerArrayCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array of format integer"
          }
        ]
      },
      "IntegerCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is an integer number"
          }
        ]
      },
      "IntegerCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is an integer number"
          }
        ]
      },
      "IntegerCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is an integer number"
          }
        ]
      },
      "IntentSpecificationRef": {
        "type": "object",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "IntentSpecificationRef": "#/components/schemas/IntentSpecificationRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "IntentSpecificationRef_FVO": {
        "type": "object",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "IntentSpecificationRef": "#/components/schemas/IntentSpecificationRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ]
      },
      "IntentSpecificationRef_MVO": {
        "type": "object",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "IntentSpecificationRef": "#/components/schemas/IntentSpecificationRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "MapArrayCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of mapped objects"
          }
        ]
      },
      "MapArrayCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of mapped objects"
          }
        ]
      },
      "MapArrayCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of mapped objects"
          }
        ]
      },
      "MapCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a mapped object"
          }
        ]
      },
      "MapCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a mapped object"
          }
        ]
      },
      "MapCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a mapped object"
          }
        ]
      },
      "NumberArrayCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array with no specific format "
          }
        ]
      },
      "NumberArrayCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array with no specific format "
          }
        ]
      },
      "NumberArrayCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array with no specific format "
          }
        ]
      },
      "NumberCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a number of no specific format"
          }
        ]
      },
      "NumberCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a number of no specific format"
          }
        ]
      },
      "NumberCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a number of no specific format"
          }
        ]
      },
      "ObjectArrayCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of objects"
          }
        ]
      },
      "ObjectArrayCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of objects"
          }
        ]
      },
      "ObjectArrayCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of objects"
          }
        ]
      },
      "ObjectCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is any object"
          }
        ]
      },
      "ObjectCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is any object"
          }
        ]
      },
      "ObjectCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is any object"
          }
        ]
      },
      "PartyRef": {
        "type": "object",
        "description": "A Party reference",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "PartyRefOrPartyRoleRef": {
        "type": "object",
        "description": "",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef",
            "PartyRoleRef": "#/components/schemas/PartyRoleRef"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/PartyRef"
          },
          {
            "$ref": "#/components/schemas/PartyRoleRef"
          }
        ]
      },
      "PartyRefOrPartyRoleRef_FVO": {
        "type": "object",
        "description": "",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef_FVO",
            "PartyRoleRef": "#/components/schemas/PartyRoleRef_FVO"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/PartyRef_FVO"
          },
          {
            "$ref": "#/components/schemas/PartyRoleRef_FVO"
          }
        ]
      },
      "PartyRefOrPartyRoleRef_MVO": {
        "type": "object",
        "description": "",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef_MVO",
            "PartyRoleRef": "#/components/schemas/PartyRoleRef_MVO"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/PartyRef_MVO"
          },
          {
            "$ref": "#/components/schemas/PartyRoleRef_MVO"
          }
        ]
      },
      "PartyRef_FVO": {
        "type": "object",
        "description": "A Party reference",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ]
      },
      "PartyRef_MVO": {
        "type": "object",
        "description": "A Party reference",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "PartyRoleRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRoleRef": "#/components/schemas/PartyRoleRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "partyId": {
                "type": "string",
                "description": "The identifier of the engaged party that is linked to the PartyRole object."
              },
              "partyName": {
                "type": "string",
                "description": "The name of the engaged party that is linked to the PartyRole object."
              }
            },
            "description": "Party role reference. A party role represents the part played by a party in a given context."
          }
        ]
      },
      "PartyRoleRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRoleRef": "#/components/schemas/PartyRoleRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "type": "object",
            "properties": {
              "partyId": {
                "type": "string",
                "description": "The identifier of the engaged party that is linked to the PartyRole object."
              },
              "partyName": {
                "type": "string",
                "description": "The name of the engaged party that is linked to the PartyRole object."
              }
            },
            "description": "Party role reference. A party role represents the part played by a party in a given context."
          }
        ]
      },
      "PartyRoleRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRoleRef": "#/components/schemas/PartyRoleRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "partyId": {
                "type": "string",
                "description": "The identifier of the engaged party that is linked to the PartyRole object."
              },
              "partyName": {
                "type": "string",
                "description": "The name of the engaged party that is linked to the PartyRole object."
              }
            },
            "description": "Party role reference. A party role represents the part played by a party in a given context."
          }
        ]
      },
      "PolicyRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PolicyRef": "#/components/schemas/PolicyRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "unique identifier"
              },
              "href": {
                "type": "string",
                "description": "Hyperlink reference",
                "format": "uri"
              },
              "version": {
                "type": "string"
              },
              "@type": {
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              }
            },
            "description": "Reference to managed Policy object"
          }
        ]
      },
      "PolicyRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PolicyRef": "#/components/schemas/PolicyRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "unique identifier"
              },
              "href": {
                "type": "string",
                "description": "Hyperlink reference",
                "format": "uri"
              },
              "version": {
                "type": "string"
              },
              "@type": {
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              }
            },
            "description": "Reference to managed Policy object"
          }
        ]
      },
      "PolicyRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PolicyRef": "#/components/schemas/PolicyRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "unique identifier"
              },
              "href": {
                "type": "string",
                "description": "Hyperlink reference",
                "format": "uri"
              },
              "version": {
                "type": "string"
              },
              "@type": {
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              }
            },
            "description": "Reference to managed Policy object"
          }
        ]
      },
      "RelatedPartyRefOrPartyRoleRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "RelatedPartyRefOrPartyRoleRef": "#/components/schemas/RelatedPartyRefOrPartyRoleRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "role": {
                "type": "string",
                "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
              },
              "partyOrPartyRole": {
                "$ref": "#/components/schemas/PartyRefOrPartyRoleRef"
              }
            },
            "description": "RelatedParty reference. A related party defines party or party role or its reference, linked to a specific entity"
          }
        ]
      },
      "RelatedPartyRefOrPartyRoleRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "RelatedPartyRefOrPartyRoleRef": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "role"
            ],
            "type": "object",
            "properties": {
              "role": {
                "type": "string",
                "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
              },
              "partyOrPartyRole": {
                "$ref": "#/components/schemas/PartyRefOrPartyRoleRef_FVO"
              }
            },
            "description": "RelatedParty reference. A related party defines party or party role or its reference, linked to a specific entity"
          }
        ]
      },
      "RelatedPartyRefOrPartyRoleRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "RelatedPartyRefOrPartyRoleRef": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "role": {
                "type": "string",
                "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
              },
              "partyOrPartyRole": {
                "$ref": "#/components/schemas/PartyRefOrPartyRoleRef_MVO"
              }
            },
            "description": "RelatedParty reference. A related party defines party or party role or its reference, linked to a specific entity"
          }
        ]
      },
      "ResourceSpecificationRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ResourceSpecificationRef": "#/components/schemas/ResourceSpecificationRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Resource Specification version"
              }
            },
            "description": "Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.\nA ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification."
          }
        ]
      },
      "ResourceSpecificationRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ResourceSpecificationRef": "#/components/schemas/ResourceSpecificationRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Resource Specification version"
              }
            },
            "description": "Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.\nA ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification."
          }
        ]
      },
      "ResourceSpecificationRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ResourceSpecificationRef": "#/components/schemas/ResourceSpecificationRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Resource Specification version"
              }
            },
            "description": "Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.\nA ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification."
          }
        ]
      },
      "ServiceLevelSpecificationRef": {
        "type": "object",
        "description": "A Service Level Specification represents a pre-defined or negotiated set of Service Level \nObjectives. In addition, certain consequences are associated with not meeting the Service Level \nObjectives. Service Level Agreements are expressed in terms of Service Level Specifications.",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ServiceLevelSpecificationRef": "#/components/schemas/ServiceLevelSpecificationRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "ServiceLevelSpecificationRef_FVO": {
        "required": [
          "@referredType",
          "id"
        ],
        "type": "object",
        "description": "A Service Level Specification represents a pre-defined or negotiated set of Service Level \nObjectives. In addition, certain consequences are associated with not meeting the Service Level \nObjectives. Service Level Agreements are expressed in terms of Service Level Specifications.",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ServiceLevelSpecificationRef": "#/components/schemas/ServiceLevelSpecificationRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ]
      },
      "ServiceLevelSpecificationRef_MVO": {
        "type": "object",
        "description": "A Service Level Specification represents a pre-defined or negotiated set of Service Level \nObjectives. In addition, certain consequences are associated with not meeting the Service Level \nObjectives. Service Level Agreements are expressed in terms of Service Level Specifications.",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ServiceLevelSpecificationRef": "#/components/schemas/ServiceLevelSpecificationRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "ServiceSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntitySpecification"
          },
          {
            "type": "object",
            "properties": {
              "resourceSpecification": {
                "type": "array",
                "description": "A list of resource specification references (ResourceSpecificationRef [*]). The ResourceSpecification is required for a service specification with type ResourceFacingServiceSpecification (RFSS).",
                "items": {
                  "$ref": "#/components/schemas/ResourceSpecificationRef"
                }
              },
              "serviceLevelSpecification": {
                "type": "array",
                "description": "A list of service level specifications related to this service specification, and which will need to be satisifiable for corresponding service instances; e.g. Gold, Platinum",
                "items": {
                  "$ref": "#/components/schemas/ServiceLevelSpecificationRef"
                }
              },
              "serviceSpecRelationship": {
                "type": "array",
                "description": "A list of service specification relationships related to this specification, e.g. migration, substitution, dependency or exclusivity relationship",
                "items": {
                  "$ref": "#/components/schemas/EntityRelationship"
                }
              },
              "intentSpecification": {
                "$ref": "#/components/schemas/IntentSpecificationRef"
              },
              "featureSpecification": {
                "type": "array",
                "description": "A list of Features for this specification.",
                "items": {
                  "$ref": "#/components/schemas/FeatureSpecification"
                }
              },
              "category": {
                "type": "string",
                "description": "Category of the target service like Telephony, InternetAccess, IP-Trunk and so on."
              }
            },
            "description": "ServiceSpecification is a class that offers characteristics to describe a type of service.\nFunctionally, it acts as a template by which Services may be instantiated. By sharing the same specification, these services would therefore share the same set of characteristics."
          }
        ]
      },
      "ServiceSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntitySpecification_FVO"
          },
          {
            "required": [
              "@referredType",
              "@schemaLocation",
              "@type",
              "entity",
              "id",
              "name",
              "parentSpecificationHref",
              "parentSpecificationId",
              "relationshipType",
              "value",
              "valueType"
            ],
            "type": "object",
            "properties": {
              "resourceSpecification": {
                "type": "array",
                "description": "A list of resource specification references (ResourceSpecificationRef [*]). The ResourceSpecification is required for a service specification with type ResourceFacingServiceSpecification (RFSS).",
                "items": {
                  "$ref": "#/components/schemas/ResourceSpecificationRef_FVO"
                }
              },
              "serviceLevelSpecification": {
                "type": "array",
                "description": "A list of service level specifications related to this service specification, and which will need to be satisifiable for corresponding service instances; e.g. Gold, Platinum",
                "items": {
                  "$ref": "#/components/schemas/ServiceLevelSpecificationRef_FVO"
                }
              },
              "serviceSpecRelationship": {
                "type": "array",
                "description": "A list of service specification relationships related to this specification, e.g. migration, substitution, dependency or exclusivity relationship",
                "items": {
                  "$ref": "#/components/schemas/EntityRelationship_FVO"
                }
              },
              "intentSpecification": {
                "$ref": "#/components/schemas/IntentSpecificationRef_FVO"
              },
              "featureSpecification": {
                "type": "array",
                "description": "A list of Features for this specification.",
                "items": {
                  "$ref": "#/components/schemas/FeatureSpecification_FVO"
                }
              },
              "category": {
                "type": "string",
                "description": "Category of the target service like Telephony, InternetAccess, IP-Trunk and so on."
              }
            },
            "description": "ServiceSpecification is a class that offers characteristics to describe a type of service.\nFunctionally, it acts as a template by which Services may be instantiated. By sharing the same specification, these services would therefore share the same set of characteristics."
          }
        ]
      },
      "ServiceSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntitySpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "resourceSpecification": {
                "type": "array",
                "description": "A list of resource specification references (ResourceSpecificationRef [*]). The ResourceSpecification is required for a service specification with type ResourceFacingServiceSpecification (RFSS).",
                "items": {
                  "$ref": "#/components/schemas/ResourceSpecificationRef_MVO"
                }
              },
              "serviceLevelSpecification": {
                "type": "array",
                "description": "A list of service level specifications related to this service specification, and which will need to be satisifiable for corresponding service instances; e.g. Gold, Platinum",
                "items": {
                  "$ref": "#/components/schemas/ServiceLevelSpecificationRef_MVO"
                }
              },
              "serviceSpecRelationship": {
                "type": "array",
                "description": "A list of service specification relationships related to this specification, e.g. migration, substitution, dependency or exclusivity relationship",
                "items": {
                  "$ref": "#/components/schemas/EntityRelationship_MVO"
                }
              },
              "intentSpecification": {
                "$ref": "#/components/schemas/IntentSpecificationRef_MVO"
              },
              "featureSpecification": {
                "type": "array",
                "description": "A list of Features for this specification.",
                "items": {
                  "$ref": "#/components/schemas/FeatureSpecification_MVO"
                }
              },
              "category": {
                "type": "string",
                "description": "Category of the target service like Telephony, InternetAccess, IP-Trunk and so on."
              }
            },
            "description": "ServiceSpecification is a class that offers characteristics to describe a type of service.\nFunctionally, it acts as a template by which Services may be instantiated. By sharing the same specification, these services would therefore share the same set of characteristics."
          }
        ]
      },
      "StringArrayCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of strings"
          }
        ]
      },
      "StringArrayCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of strings"
          }
        ]
      },
      "StringArrayCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of strings"
          }
        ]
      },
      "StringCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a string"
          }
        ]
      },
      "StringCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a string"
          }
        ]
      },
      "StringCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a string"
          }
        ]
      },
      "TargetEntitySchema": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "Class type of the target entity"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "This field provides a link to the schema describing the target entity"
          }
        },
        "description": "The reference object to the schema and type of target entity which is described by a specification"
      },
      "TargetEntitySchema_FVO": {
        "required": [
          "@schemaLocation",
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "Class type of the target entity"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "This field provides a link to the schema describing the target entity"
          }
        },
        "description": "The reference object to the schema and type of target entity which is described by a specification"
      },
      "TargetEntitySchema_MVO": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "Class type of the target entity"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "This field provides a link to the schema describing the target entity"
          }
        },
        "description": "The reference object to the schema and type of target entity which is described by a specification"
      },
      "TimePeriod": {
        "type": "object",
        "properties": {
          "startDateTime": {
            "type": "string",
            "description": "Start of the time period, using IETC-RFC-3339 format",
            "format": "date-time",
            "example": "1985-04-12T23:20:50.52Z"
          },
          "endDateTime": {
            "type": "string",
            "description": "End of the time period, using IETC-RFC-3339 format",
            "format": "date-time",
            "example": "1985-04-12T23:20:50.52Z"
          }
        },
        "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both"
      },
      "Error": {
        "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "Error": "#/components/schemas/Error"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "required": [
              "code",
              "reason"
            ],
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Application relevant detail, defined in the API or a common list."
              },
              "reason": {
                "type": "string",
                "description": "Explanation of the reason for the error which can be shown to a client user."
              },
              "message": {
                "type": "string",
                "description": "More details and corrective actions related to the error which can be shown to a client user."
              },
              "status": {
                "type": "string",
                "description": "HTTP Error code extension"
              },
              "referenceError": {
                "type": "string",
                "description": "URI of documentation describing the error."
              }
            }
          }
        ]
      },
      "JsonPatch": {
        "required": [
          "op",
          "path"
        ],
        "type": "object",
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to be performed",
            "enum": [
              "add",
              "remove",
              "replace",
              "move",
              "copy",
              "test"
            ]
          },
          "path": {
            "type": "string",
            "description": "A JSON-Pointer"
          },
          "value": {
            "description": "The value to be used within the operations."
          },
          "from": {
            "type": "string",
            "description": "A string containing a JSON Pointer value."
          }
        },
        "description": "A JSONPatch document as defined by RFC 6902"
      },
      "JsonPatchOperations": {
        "type": "array",
        "description": "JSONPatch Operations document as defined by RFC 6902",
        "items": {
          "$ref": "#/components/schemas/JsonPatch"
        }
      }
    },
    "responses": {
      "202": {
        "description": "Accepted"
      },
      "204": {
        "description": "Deleted"
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "405": {
        "description": "Method Not allowed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "409": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "501": {
        "description": "Not Implemented",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "503": {
        "description": "Service Unavailable",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "200ServiceSpecificationArray": {
        "description": "Success",
        "headers": {
          "X-Total-Count": {
            "$ref": "#/components/headers/X-Total-Count"
          },
          "X-Result-Count": {
            "$ref": "#/components/headers/X-Result-Count"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ServiceSpecification"
              }
            },
            "examples": {
              "ServiceSpecification_list_example": {
                "$ref": "#/components/examples/ServiceSpecification_list_example_response"
              }
            }
          }
        }
      },
      "200ServiceSpecification_Get": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ServiceSpecification"
            },
            "examples": {
              "ServiceSpecification_retrieve_example": {
                "$ref": "#/components/examples/ServiceSpecification_retrieve_example_response"
              }
            }
          }
        }
      },
      "200ServiceSpecification_Patch": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ServiceSpecification"
            },
            "examples": {
              "updateServiceSpecification_using_json": {
                "$ref": "#/components/examples/updateServiceSpecification_using_json_response"
              }
            }
          },
          "application/merge-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/ServiceSpecification"
            }
          },
          "application/json-patch+json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ServiceSpecification"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceSpecification"
                  }
                },
                {
                  "type": "string",
                  "nullable": true
                }
              ]
            }
          },
          "application/json-patch-query+json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ServiceSpecification"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceSpecification"
                  }
                },
                {
                  "type": "string",
                  "nullable": true
                }
              ]
            }
          }
        }
      },
      "201ServiceSpecification": {
        "description": "OK/Created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ServiceSpecification"
            },
            "examples": {
              "ServiceSpecification": {
                "$ref": "#/components/examples/ServiceSpecification_response"
              },
              "ServiceSpecification_with_Intent_Specification": {
                "$ref": "#/components/examples/ServiceSpecification_with_Intent_Specification_response"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "Id": {
        "name": "id",
        "in": "path",
        "description": "Identifier of the Resource",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "Fields": {
        "name": "fields",
        "in": "query",
        "description": "Comma-separated properties to be provided in response",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "Offset": {
        "name": "offset",
        "in": "query",
        "description": "Requested index for start of resources to be provided in response",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      },
      "Limit": {
        "name": "limit",
        "in": "query",
        "description": "Requested number of resources to be provided in response",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      }
    },
    "examples": {
      "ServiceSpecification_list_example_response": {
        "description": "Here's an example of a request for retrieving multiple service specifications.",
        "value": [
          {
            "id": "7655",
            "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/7655",
            "name": "Firewall Service",
            "description": "This service specification describes a firewall service that can be deployed in customer-premises equipment.",
            "version": "2.1",
            "validFor": {
              "startDateTime": "2017-08-23T00:00:00.000Z",
              "endDateTime": "2021-03-25T00:00:00.000Z"
            },
            "lastUpdate": "2020-08-15T00:00:00.000Z",
            "lifecycleStatus": "Active",
            "isBundle": false,
            "resourceSpecification": [
              {
                "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v4/resourceSpecification/42",
                "id": "42",
                "name": "Firewall",
                "version": "1.0",
                "@referredType": "ResourceFunctionSpec",
                "@type": "ResourceSpecificationRef",
                "@baseType": "",
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecificationRef.schema.json"
              }
            ],
            "attachment": [
              {
                "description": "This attachment gives a description of the firewall service with diagrams.",
                "href": "https://mycsp.com:8080/tmf-api/documentManagement/v4/attachment/22",
                "id": "22",
                "url": "https://mycsp.com:7070/docloader?docnum=3534536",
                "@attachmentType": "Document",
                "content": "",
                "mimeType": ".docx",
                "validFor": {
                  "startDateTime": "2017-08-23T00:00:00.000Z",
                  "endDateTime": "2021-03-25T00:00:00.000Z"
                },
                "size": {
                  "amount": 1532,
                  "units": "KB"
                },
                "name": "Firewall Service",
                "@type": "Attachment",
                "@baseType": "",
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Attachment.schema.json"
              }
            ],
            "specCharacteristic": [
              {
                "name": "operatingSystem",
                "id": "5843",
                "description": "This characteristic describes the operating system run by the service",
                "valueType": "string",
                "configurable": true,
                "validFor": {
                  "startDateTime": "2017-08-12T00:00:00.000Z",
                  "endDateTime": "2021-03-07T00:00:00.000Z"
                },
                "@valueSchemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/StringCharacteristic.schema.json",
                "minCardinality": 0,
                "maxCardinality": 1,
                "isUnique": true,
                "regex": "",
                "extensible": false,
                "characteristicValueSpecification": [
                  {
                    "valueType": "string",
                    "isDefault": true,
                    "value": "Android KitKat",
                    "validFor": {
                      "startDateTime": "2017-08-06T00:00:00.000Z",
                      "endDateTime": "2021-03-07T00:00:00.000Z"
                    },
                    "unitOfMeasure": "",
                    "rangeInterval": "open",
                    "@type": "CharacteristicValueSpecification",
                    "@baseType": "",
                    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicValueSpecification.schema.json"
                  }
                ],
                "charSpecRelationship": [
                  {
                    "relationshipType": "dependency",
                    "parentSpecificationId": "1741",
                    "parentSpecificationHref": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/1741",
                    "characteristicSpecificationId": "4690",
                    "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecificationCharacteristic/4690",
                    "name": "operatingSystem",
                    "validFor": {
                      "startDateTime": "2017-08-11T00:00:00.000Z",
                      "endDateTime": "2021-03-07T00:00:00.000Z"
                    },
                    "@type": "CharacteristicSpecificationRelationship",
                    "@baseType": "",
                    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicSpecificationRelationship.schema.json"
                  }
                ],
                "@type": "SpecCharacteristic",
                "@baseType": "",
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/SpecCharacteristic.schema.json"
              },
              {
                "name": "scalability",
                "description": "Scalability parameters for this resource facing service spec ",
                "valueType": "CapabilityScalable",
                "configurable": true,
                "validFor": {
                  "startDateTime": "2017-08-17T00:00:00.000Z",
                  "endDateTime": "2021-03-12T00:00:00.000Z"
                },
                "@valueSchemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/CapabilityScalable.schema.json",
                "minCardinality": 0,
                "maxCardinality": 1,
                "isUnique": true,
                "regex": "",
                "extensible": true,
                "characteristicValueSpecification": [
                  {
                    "valueType": "object",
                    "isDefault": true,
                    "value": {
                      "minInstances": 1,
                      "maxInstances": 1000
                    },
                    "validFor": {
                      "startDateTime": "2017-08-17T00:00:00.000Z",
                      "endDateTime": "2021-03-12T00:00:00.000Z"
                    },
                    "rangeInterval": "open",
                    "@type": "CharacteristicValueSpecification",
                    "@baseType": "",
                    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicValueSpecification.schema.json"
                  }
                ],
                "charSpecRelationship": [ ],
                "@type": "SpecCharacteristic",
                "@baseType": "",
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/SpecCharacteristic.schema.json"
              }
            ],
            "relatedParty": [
              {
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v4/organization/3643",
                "id": "3643",
                "name": "Firewall Express",
                "role": "Supplier",
                "@referredType": "PartyRole",
                "@type": "RelatedParty",
                "@baseType": "",
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/EngagedParty/RelatedParty.schema.json"
              }
            ],
            "serviceSpecRelationship": [
              {
                "relationshipType": "dependency",
                "role": "dependent",
                "id": "5563",
                "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/5563",
                "name": "Points to the Deep Packet Inspection service on which this Firewall service depends",
                "validFor": {
                  "startDateTime": "2017-08-25T00:00:00.000Z",
                  "endDateTime": "2021-03-25T00:00:00.000Z"
                },
                "@referredType": "ResourceFacingServiceSpecification",
                "@type": "ServiceSpecRelationship",
                "@baseType": "",
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ServiceSpecRelationship.schema.json"
              }
            ],
            "serviceLevelSpecification": [
              {
                "href": "https://mycsp.com:8080/tmf-api/serviceQualityManagement/v4/serviceLevelSpecification/8899",
                "id": "8899",
                "name": "Platinum",
                "@type": "ServiceLevelSpecificationRef",
                "@baseType": "",
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ServiceLevelSpecificationRef.schema.json"
              }
            ],
            "targetServiceSchema": {
              "@type": "RFS",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/RFS.schema.json"
            },
            "constraint": [
              {
                "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/1994",
                "id": "1994",
                "name": "firewallEligibilityRule",
                "version": "1.0",
                "@referredType": "Constraint",
                "@type": "ConstraintRef",
                "@baseType": "",
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json"
              }
            ],
            "entitySpecRelationship": [
              {
                "relationshipType": "ServiceSpecTestedVia",
                "role": "serviceUnderTest",
                "id": "3331",
                "href": "https://mycsp.com:8080/tmf-api/serviceTestManagement/v4/serviceTestSpec/3331",
                "name": "FirewallFunctionalTestSpec",
                "validFor": {
                  "startDateTime": "2017-08-25T00:00:00.000Z",
                  "endDateTime": "2021-03-25T00:00:00.000Z"
                },
                "@referredType": "FunctionalServiceTestSpec",
                "@type": "EntitySpecRelationship",
                "@baseType": "",
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntitySpecRelationship.schema.json"
              },
              {
                "relationshipType": "ServiceSpecMeasuredBy",
                "role": "serviceUnderTest",
                "id": "7316",
                "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/servicePerformanceSpec/7316",
                "name": "FirewallPerformanceSpec",
                "validFor": {
                  "startDateTime": "2017-08-25T00:00:00.000Z",
                  "endDateTime": "2021-03-25T00:00:00.000Z"
                },
                "@referredType": "ServicePerformanceSpec",
                "@type": "EntitySpecRelationship",
                "@baseType": "",
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntitySpecRelationship.schema.json"
              }
            ],
            "featureSpecification": [
              {
                "isEnabled": false,
                "isBundle": false,
                "id": "DPI-2221",
                "href": "",
                "name": "deep packet inspection",
                "validFor": {
                  "startDateTime": "2017-08-25T00:00:00.000Z",
                  "endDateTime": "2021-03-25T00:00:00.000Z"
                },
                "featureSpecRelationship": [ ],
                "featureSpecCharacteristic": [ ],
                "version": "1.0",
                "@type": "FeatureSpecification",
                "@baseType": "",
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/FeatureSpecification.schema.json"
              },
              {
                "isEnabled": true,
                "isBundle": false,
                "id": "IPS-2222",
                "href": "",
                "name": "Intrusion Prevention Systems ",
                "validFor": {
                  "startDateTime": "2017-08-25T00:00:00.000Z",
                  "endDateTime": "2021-03-25T00:00:00.000Z"
                },
                "featureSpecRelationship": [ ],
                "featureSpecCharacteristic": [ ],
                "version": "1.0",
                "@type": "FeatureSpecification",
                "@baseType": "",
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/FeatureSpecification.schema.json"
              }
            ],
            "@type": "ResourceFacingServiceSpecification",
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ResourceFacingServiceSpecification.schema.json",
            "@baseType": "ServiceSpecification"
          },
          {
            "id": "4444",
            "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/4444",
            "name": "CG-NAT Service",
            "description": "This service specification describes a NAT service that can be deployed in customer-premises equipment.",
            "version": "1.0",
            "validFor": {
              "startDateTime": "2020-08-23T00:00:00.000Z",
              "endDateTime": "2021-03-25T00:00:00.000Z"
            },
            "lastUpdate": "2020-08-25T00:00:00.000Z",
            "lifecycleStatus": "Defined",
            "isBundle": false,
            "resourceSpecification": [
              {
                "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v4/resourceSpecification/33",
                "id": "33",
                "name": "NAT",
                "version": "1.0",
                "@referredType": "ResourceFunctionSpec",
                "@type": "ResourceSpecificationRef",
                "@baseType": "",
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecificationRef.schema.json"
              }
            ],
            "attachment": [ ],
            "specCharacteristic": [
              {
                "name": "ipv6Enabled",
                "id": "55",
                "description": "This characteristic describes the operating system run by the service",
                "valueType": "boolean",
                "configurable": true,
                "validFor": {
                  "startDateTime": "2020-08-23T00:00:00.000Z",
                  "endDateTime": "2021-03-07T00:00:00.000Z"
                },
                "@valueSchemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/BooleanCharacteristic.schema.json",
                "minCardinality": 0,
                "maxCardinality": 1,
                "isUnique": true,
                "regex": "",
                "extensible": false,
                "characteristicValueSpecification": [
                  {
                    "valueType": "boolean",
                    "isDefault": true,
                    "value": true,
                    "validFor": {
                      "startDateTime": "2020-08-23T00:00:00.000Z",
                      "endDateTime": "2021-03-07T00:00:00.000Z"
                    },
                    "regex": "",
                    "valueFrom": "",
                    "valueTo": "",
                    "unitOfMeasure": "",
                    "rangeInterval": "open",
                    "@type": "CharacteristicValueSpecification",
                    "@baseType": "",
                    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicValueSpecification.schema.json"
                  }
                ],
                "charSpecRelationship": [ ],
                "@type": "SpecCharacteristic",
                "@baseType": "",
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/SpecCharacteristic.schema.json"
              }
            ],
            "relatedParty": [ ],
            "serviceSpecRelationship": [ ],
            "serviceLevelSpecification": [
              {
                "href": "https://mycsp.com:8080/tmf-api/serviceQualityManagement/v4/serviceLevelSpecification/5656",
                "id": "5656",
                "name": "Gold",
                "@type": "ServiceLevelSpecificationRef",
                "@baseType": "",
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ServiceLevelSpecificationRef.schema.json"
              }
            ],
            "targetServiceSchema": {
              "@type": "RFS",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/RFS.schema.json"
            },
            "constraint": [ ],
            "entitySpecRelationship": [ ],
            "featureSpecification": [ ],
            "@type": "ResourceFacingServiceSpecification",
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ResourceFacingServiceSpecification.schema.json",
            "@baseType": "ServiceSpecification"
          }
        ]
      },
      "ServiceSpecification_retrieve_example_response": {
        "description": "Here's an example of a request for retrieving a specific specification.",
        "value": {
          "id": "7655",
          "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/7655",
          "name": "Firewall Service",
          "description": "This service specification describes a firewall service that can be deployed in customer-premises equipment.",
          "version": "3.0",
          "validFor": {
            "startDateTime": "2017-08-23T00:00:00.000Z",
            "endDateTime": "2021-03-25T00:00:00.000Z"
          },
          "lastUpdate": "2020-08-15T00:00:00.000Z",
          "lifecycleStatus": "Active",
          "isBundle": false,
          "resourceSpecification": [
            {
              "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v4/resourceSpecification/42",
              "id": "42",
              "name": "Firewall",
              "version": "1.0",
              "@referredType": "ResourceFunctionSpec",
              "@type": "ResourceSpecificationRef",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecificationRef.schema.json"
            }
          ],
          "attachment": [
            {
              "description": "This attachment gives a description of the firewall service with diagrams.",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v4/attachment/22",
              "id": "22",
              "url": "https://mycsp.com:7070/docloader?docnum=3534536",
              "@attachmentType": "Document",
              "content": "",
              "mimeType": ".docx",
              "validFor": {
                "startDateTime": "2017-08-23T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "size": {
                "amount": 1532,
                "units": "KB"
              },
              "name": "Firewall Service",
              "@type": "Attachment",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Attachment.schema.json"
            }
          ],
          "specCharacteristic": [
            {
              "name": "operatingSystem",
              "id": "5843",
              "description": "This characteristic describes the operating system run by the service",
              "valueType": "string",
              "configurable": true,
              "validFor": {
                "startDateTime": "2017-08-12T00:00:00.000Z",
                "endDateTime": "2021-03-07T00:00:00.000Z"
              },
              "@valueSchemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/StringCharacteristic.schema.json",
              "minCardinality": 0,
              "maxCardinality": 1,
              "isUnique": true,
              "regex": "",
              "extensible": false,
              "characteristicValueSpecification": [
                {
                  "valueType": "string",
                  "isDefault": true,
                  "value": "Android KitKat",
                  "validFor": {
                    "startDateTime": "2017-08-06T00:00:00.000Z",
                    "endDateTime": "2021-03-07T00:00:00.000Z"
                  },
                  "unitOfMeasure": "",
                  "rangeInterval": "open",
                  "@type": "CharacteristicValueSpecification",
                  "@baseType": "",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicValueSpecification.schema.json"
                }
              ],
              "charSpecRelationship": [
                {
                  "relationshipType": "dependency",
                  "parentSpecificationId": "1741",
                  "parentSpecificationHref": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/1741",
                  "characteristicSpecificationId": "4690",
                  "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecificationCharacteristic/4690",
                  "name": "operatingSystem",
                  "validFor": {
                    "startDateTime": "2017-08-11T00:00:00.000Z",
                    "endDateTime": "2021-03-07T00:00:00.000Z"
                  },
                  "@type": "CharacteristicSpecificationRelationship",
                  "@baseType": "",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicSpecificationRelationship.schema.json"
                }
              ],
              "@type": "SpecCharacteristic",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/SpecCharacteristic.schema.json"
            },
            {
              "name": "scalability",
              "description": "Scalability parameters for this resource facing service spec ",
              "valueType": "CapabilityScalable",
              "configurable": true,
              "validFor": {
                "startDateTime": "2017-08-17T00:00:00.000Z",
                "endDateTime": "2021-03-12T00:00:00.000Z"
              },
              "@valueSchemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/CapabilityScalable.schema.json",
              "minCardinality": 0,
              "maxCardinality": 1,
              "isUnique": true,
              "regex": "",
              "extensible": true,
              "characteristicValueSpecification": [
                {
                  "valueType": "object",
                  "isDefault": true,
                  "value": {
                    "minInstances": 1,
                    "maxInstances": 1000
                  },
                  "validFor": {
                    "startDateTime": "2017-08-17T00:00:00.000Z",
                    "endDateTime": "2021-03-12T00:00:00.000Z"
                  },
                  "rangeInterval": "open",
                  "@type": "CharacteristicValueSpecification",
                  "@baseType": "",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicValueSpecification.schema.json"
                }
              ],
              "charSpecRelationship": [ ],
              "@type": "SpecCharacteristic",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/SpecCharacteristic.schema.json"
            }
          ],
          "relatedParty": [
            {
              "href": "https://mycsp.com:8080/tmf-api/partyManagement/v4/organization/3643",
              "id": "3643",
              "name": "Firewall Express",
              "role": "Supplier",
              "@referredType": "PartyRole",
              "@type": "RelatedParty",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/EngagedParty/RelatedParty.schema.json"
            }
          ],
          "serviceSpecRelationship": [
            {
              "relationshipType": "dependency",
              "role": "dependent",
              "id": "5563",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/5563",
              "name": "Points to the Deep Packet Inspection service on which this Firewall service depends",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "ResourceFacingServiceSpecification",
              "@type": "ServiceSpecRelationship",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ServiceSpecRelationship.schema.json"
            }
          ],
          "serviceLevelSpecification": [
            {
              "href": "https://mycsp.com:8080/tmf-api/serviceQualityManagement/v4/serviceLevelSpecification/8899",
              "id": "8899",
              "name": "Platinum",
              "@type": "ServiceLevelSpecificationRef",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ServiceLevelSpecificationRef.schema.json"
            }
          ],
          "targetServiceSchema": {
            "@type": "RFS",
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/RFS.schema.json"
          },
          "constraint": [
            {
              "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/1994",
              "id": "1994",
              "name": "firewallEligibilityRule",
              "version": "1.0",
              "@referredType": "Constraint",
              "@type": "ConstraintRef",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json"
            }
          ],
          "entitySpecRelationship": [
            {
              "relationshipType": "ServiceSpecTestedVia",
              "role": "serviceUnderTest",
              "id": "3331",
              "href": "https://mycsp.com:8080/tmf-api/serviceTestManagement/v4/serviceTestSpec/3331",
              "name": "FirewallFunctionalTestSpec",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "FunctionalServiceTestSpec",
              "@type": "EntitySpecRelationship",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntitySpecRelationship.schema.json"
            },
            {
              "relationshipType": "ServiceSpecMeasuredBy",
              "role": "serviceUnderTest",
              "id": "7316",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/servicePerformanceSpec/7316",
              "name": "FirewallPerformanceSpec",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "ServicePerformanceSpec",
              "@type": "EntitySpecRelationship",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntitySpecRelationship.schema.json"
            }
          ],
          "featureSpecification": [
            {
              "isEnabled": false,
              "isBundle": false,
              "id": "DPI-2221",
              "href": "",
              "name": "deep packet inspection",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "featureSpecRelationship": [ ],
              "featureSpecCharacteristic": [ ],
              "version": "1.0",
              "@type": "FeatureSpecification",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/FeatureSpecification.schema.json"
            },
            {
              "isEnabled": true,
              "isBundle": false,
              "id": "IPS-2222",
              "href": "",
              "name": "Intrusion Prevention Systems ",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "featureSpecRelationship": [ ],
              "featureSpecCharacteristic": [ ],
              "version": "1.0",
              "@type": "FeatureSpecification",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/FeatureSpecification.schema.json"
            }
          ],
          "@type": "ResourceFacingServiceSpecification",
          "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ResourceFacingServiceSpecification.schema.json",
          "@baseType": "ServiceSpecification"
        }
      },
      "ServiceSpecification_request": {
        "description": "POST ServiceSpecification request example - only a subset of service catalog attributes are used in this example",
        "value": {
          "name": "Firewall Service",
          "description": "This service specification describes a firewall service that can be deployed in customer-premises equipment.",
          "version": "2.1",
          "validFor": {
            "startDateTime": "2017-08-23T00:00:00.000Z",
            "endDateTime": "2021-03-25T00:00:00.000Z"
          },
          "lifecycleStatus": "Active",
          "resourceSpecification": [
            {
              "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v4/resourceSpecification/42",
              "id": "42",
              "name": "Firewall",
              "version": "1.0",
              "@referredType": "ResourceFunctionSpec",
              "@type": "ResourceSpecificationRef",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecificationRef.schema.json"
            }
          ],
          "attachment": [
            {
              "description": "This attachment gives a description of the firewall service with diagrams.",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v4/attachment/22",
              "id": "22",
              "url": "https://mycsp.com:7070/docloader?docnum=3534536",
              "@attachmentType": "Document",
              "mimeType": ".docx",
              "validFor": {
                "startDateTime": "2017-08-23T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "size": {
                "amount": 1532,
                "units": "KB"
              },
              "name": "Firewall Service",
              "@type": "Attachment",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Attachment.schema.json"
            }
          ],
          "specCharacteristic": [
            {
              "name": "operatingSystem",
              "id": "5843",
              "description": "This characteristic describes the operating system run by the service",
              "valueType": "string",
              "configurable": true,
              "validFor": {
                "startDateTime": "2017-08-12T00:00:00.000Z",
                "endDateTime": "2021-03-07T00:00:00.000Z"
              },
              "@valueSchemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/StringCharacteristic.schema.json",
              "minCardinality": 0,
              "maxCardinality": 1,
              "isUnique": true,
              "regex": "",
              "extensible": false,
              "characteristicValueSpecification": [
                {
                  "valueType": "string",
                  "isDefault": true,
                  "value": "Android KitKat",
                  "validFor": {
                    "startDateTime": "2017-08-06T00:00:00.000Z",
                    "endDateTime": "2021-03-07T00:00:00.000Z"
                  },
                  "rangeInterval": "open",
                  "@type": "CharacteristicValueSpecification",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicValueSpecification.schema.json"
                }
              ],
              "charSpecRelationship": [
                {
                  "relationshipType": "dependency",
                  "parentSpecificationId": "1741",
                  "parentSpecificationHref": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/1741",
                  "characteristicSpecificationId": "4690",
                  "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecificationCharacteristic/4690",
                  "name": "operatingSystem",
                  "validFor": {
                    "startDateTime": "2017-08-11T00:00:00.000Z",
                    "endDateTime": "2021-03-07T00:00:00.000Z"
                  },
                  "@type": "CharacteristicSpecificationRelationship",
                  "@baseType": "",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicSpecificationRelationship.schema.json"
                }
              ],
              "@type": "SpecCharacteristic",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/SpecCharacteristic.schema.json"
            },
            {
              "name": "scalability",
              "description": "Scalability parameters for this resource facing service spec ",
              "valueType": "CapabilityScalable",
              "configurable": true,
              "validFor": {
                "startDateTime": "2017-08-17T00:00:00.000Z",
                "endDateTime": "2021-03-12T00:00:00.000Z"
              },
              "@valueSchemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/CapabilityScalable.schema.json",
              "minCardinality": 0,
              "maxCardinality": 1,
              "isUnique": true,
              "regex": "",
              "extensible": true,
              "characteristicValueSpecification": [
                {
                  "valueType": "object",
                  "isDefault": true,
                  "value": {
                    "minInstances": 1,
                    "maxInstances": 1000
                  },
                  "validFor": {
                    "startDateTime": "2017-08-17T00:00:00.000Z",
                    "endDateTime": "2021-03-12T00:00:00.000Z"
                  },
                  "rangeInterval": "open",
                  "@type": "CharacteristicValueSpecification",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicValueSpecification.schema.json"
                }
              ],
              "@type": "SpecCharacteristic",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/SpecCharacteristic.schema.json"
            }
          ],
          "relatedParty": [
            {
              "href": "https://mycsp.com:8080/tmf-api/partyManagement/v4/organization/3643",
              "id": "3643",
              "name": "Firewall Express",
              "role": "Supplier",
              "@referredType": "PartyRole",
              "@type": "RelatedParty",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/EngagedParty/RelatedParty.schema.json"
            }
          ],
          "serviceSpecRelationship": [
            {
              "relationshipType": "dependency",
              "role": "dependent",
              "id": "5563",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/5563",
              "name": "Points to the Deep Packet Inspection service on which this Firewall service depends",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "ResourceFacingServiceSpecification",
              "@type": "ServiceSpecRelationship",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ServiceSpecRelationship.schema.json"
            }
          ],
          "serviceLevelSpecification": [
            {
              "href": "https://mycsp.com:8080/tmf-api/serviceQualityManagement/v4/serviceLevelSpecification/8899",
              "id": "8899",
              "name": "Platinum",
              "@type": "ServiceLevelSpecificationRef",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ServiceLevelSpecificationRef.schema.json"
            }
          ],
          "targetServiceSchema": {
            "@type": "RFS",
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/RFS.schema.json"
          },
          "constraint": [
            {
              "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/1994",
              "id": "1994",
              "name": "firewallEligibilityRule",
              "version": "1.0",
              "@referredType": "Constraint",
              "@type": "ConstraintRef",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json"
            }
          ],
          "entitySpecRelationship": [
            {
              "relationshipType": "ServiceSpecTestedVia",
              "role": "serviceUnderTest",
              "id": "3331",
              "href": "https://mycsp.com:8080/tmf-api/serviceTestManagement/v4/serviceTestSpec/3331",
              "name": "FirewallFunctionalTestSpec",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "FunctionalServiceTestSpec",
              "@type": "EntitySpecRelationship",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntitySpecRelationship.schema.json"
            },
            {
              "relationshipType": "ServiceSpecMeasuredBy",
              "role": "serviceUnderTest",
              "id": "7316",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/servicePerformanceSpec/7316",
              "name": "FirewallPerformanceSpec",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "ServicePerformanceSpec",
              "@type": "EntitySpecRelationship",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntitySpecRelationship.schema.json"
            }
          ],
          "featureSpecification": [
            {
              "isEnabled": false,
              "isBundle": false,
              "id": "DPI-2221",
              "name": "deep packet inspection",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "featureSpecRelationship": [ ],
              "featureSpecCharacteristic": [ ],
              "version": "1.0",
              "@type": "FeatureSpecification",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/FeatureSpecification.schema.json"
            },
            {
              "isEnabled": true,
              "isBundle": false,
              "id": "IPS-2222",
              "name": "Intrusion Prevention Systems ",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "featureSpecRelationship": [ ],
              "featureSpecCharacteristic": [ ],
              "version": "1.0",
              "@type": "FeatureSpecification",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/FeatureSpecification.schema.json"
            }
          ],
          "@type": "ResourceFacingServiceSpecification",
          "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ResourceFacingServiceSpecification.schema.json",
          "@baseType": "ServiceSpecification"
        }
      },
      "ServiceSpecification_response": {
        "description": "POST ServiceSpecification response description.",
        "value": {
          "id": "7655",
          "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/7655",
          "name": "Firewall Service",
          "description": "This service specification describes a firewall service that can be deployed in customer-premises equipment.",
          "version": "2.1",
          "validFor": {
            "startDateTime": "2017-08-23T00:00:00.000Z",
            "endDateTime": "2021-03-25T00:00:00.000Z"
          },
          "lastUpdate": "2020-08-15T00:00:00.000Z",
          "lifecycleStatus": "Active",
          "isBundle": false,
          "resourceSpecification": [
            {
              "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v4/resourceSpecification/42",
              "id": "42",
              "name": "Firewall",
              "version": "1.0",
              "@referredType": "ResourceFunctionSpec",
              "@type": "ResourceSpecificationRef",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecificationRef.schema.json"
            }
          ],
          "attachment": [
            {
              "description": "This attachment gives a description of the firewall service with diagrams.",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v4/attachment/22",
              "id": "22",
              "url": "https://mycsp.com:7070/docloader?docnum=3534536",
              "@attachmentType": "Document",
              "content": "",
              "mimeType": ".docx",
              "validFor": {
                "startDateTime": "2017-08-23T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "size": {
                "amount": 1532,
                "units": "KB"
              },
              "name": "Firewall Service",
              "@type": "Attachment",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Attachment.schema.json"
            }
          ],
          "specCharacteristic": [
            {
              "name": "operatingSystem",
              "id": "5843",
              "description": "This characteristic describes the operating system run by the service",
              "valueType": "string",
              "configurable": true,
              "validFor": {
                "startDateTime": "2017-08-12T00:00:00.000Z",
                "endDateTime": "2021-03-07T00:00:00.000Z"
              },
              "@valueSchemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/StringCharacteristic.schema.json",
              "minCardinality": 0,
              "maxCardinality": 1,
              "isUnique": true,
              "regex": "",
              "extensible": false,
              "characteristicValueSpecification": [
                {
                  "valueType": "string",
                  "isDefault": true,
                  "value": "Android KitKat",
                  "validFor": {
                    "startDateTime": "2017-08-06T00:00:00.000Z",
                    "endDateTime": "2021-03-07T00:00:00.000Z"
                  },
                  "regex": "",
                  "valueFrom": "",
                  "valueTo": "",
                  "unitOfMeasure": "",
                  "rangeInterval": "open",
                  "@type": "CharacteristicValueSpecification",
                  "@baseType": "",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicValueSpecification.schema.json"
                }
              ],
              "charSpecRelationship": [
                {
                  "relationshipType": "dependency",
                  "parentSpecificationId": "1741",
                  "parentSpecificationHref": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/1741",
                  "characteristicSpecificationId": "4690",
                  "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecificationCharacteristic/4690",
                  "name": "operatingSystem",
                  "validFor": {
                    "startDateTime": "2017-08-11T00:00:00.000Z",
                    "endDateTime": "2021-03-07T00:00:00.000Z"
                  },
                  "@type": "CharacteristicSpecificationRelationship",
                  "@baseType": "",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicSpecificationRelationship.schema.json"
                }
              ],
              "@type": "SpecCharacteristic",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/SpecCharacteristic.schema.json"
            },
            {
              "name": "scalability",
              "description": "Scalability parameters for this resource facing service spec ",
              "valueType": "CapabilityScalable",
              "configurable": true,
              "validFor": {
                "startDateTime": "2017-08-17T00:00:00.000Z",
                "endDateTime": "2021-03-12T00:00:00.000Z"
              },
              "@valueSchemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/CapabilityScalable.schema.json",
              "minCardinality": 0,
              "maxCardinality": 1,
              "isUnique": true,
              "regex": "",
              "extensible": true,
              "characteristicValueSpecification": [
                {
                  "valueType": "object",
                  "isDefault": true,
                  "value": {
                    "minInstances": 1,
                    "maxInstances": 1000
                  },
                  "validFor": {
                    "startDateTime": "2017-08-17T00:00:00.000Z",
                    "endDateTime": "2021-03-12T00:00:00.000Z"
                  },
                  "regex": "",
                  "valueFrom": "",
                  "valueTo": "",
                  "unitOfMeasure": "",
                  "rangeInterval": "open",
                  "@type": "CharacteristicValueSpecification",
                  "@baseType": "",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicValueSpecification.schema.json"
                }
              ],
              "charSpecRelationship": [ ],
              "@type": "SpecCharacteristic",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/SpecCharacteristic.schema.json"
            }
          ],
          "relatedParty": [
            {
              "href": "https://mycsp.com:8080/tmf-api/partyManagement/v4/organization/3643",
              "id": "3643",
              "name": "Firewall Express",
              "role": "Supplier",
              "@referredType": "PartyRole",
              "@type": "RelatedParty",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/EngagedParty/RelatedParty.schema.json"
            }
          ],
          "serviceSpecRelationship": [
            {
              "relationshipType": "dependency",
              "role": "dependent",
              "id": "5563",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/5563",
              "name": "Points to the Deep Packet Inspection service on which this Firewall service depends",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "ResourceFacingServiceSpecification",
              "@type": "ServiceSpecRelationship",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ServiceSpecRelationship.schema.json"
            }
          ],
          "serviceLevelSpecification": [
            {
              "href": "https://mycsp.com:8080/tmf-api/serviceQualityManagement/v4/serviceLevelSpecification/8899",
              "id": "8899",
              "name": "Platinum",
              "@type": "ServiceLevelSpecificationRef",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ServiceLevelSpecificationRef.schema.json"
            }
          ],
          "targetServiceSchema": {
            "@type": "RFS",
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/RFS.schema.json"
          },
          "constraint": [
            {
              "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/1994",
              "id": "1994",
              "name": "firewallEligibilityRule",
              "version": "1.0",
              "@referredType": "Constraint",
              "@type": "ConstraintRef",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json"
            }
          ],
          "entitySpecRelationship": [
            {
              "relationshipType": "ServiceSpecTestedVia",
              "role": "serviceUnderTest",
              "id": "3331",
              "href": "https://mycsp.com:8080/tmf-api/serviceTestManagement/v4/serviceTestSpec/3331",
              "name": "FirewallFunctionalTestSpec",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "FunctionalServiceTestSpec",
              "@type": "EntitySpecRelationship",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntitySpecRelationship.schema.json"
            },
            {
              "relationshipType": "ServiceSpecMeasuredBy",
              "role": "serviceUnderTest",
              "id": "7316",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/servicePerformanceSpec/7316",
              "name": "FirewallPerformanceSpec",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "ServicePerformanceSpec",
              "@type": "EntitySpecRelationship",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntitySpecRelationship.schema.json"
            }
          ],
          "featureSpecification": [
            {
              "isEnabled": false,
              "isBundle": false,
              "id": "DPI-2221",
              "href": "",
              "name": "deep packet inspection",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "featureSpecRelationship": [ ],
              "featureSpecCharacteristic": [ ],
              "version": "1.0",
              "@type": "FeatureSpecification",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/FeatureSpecification.schema.json"
            },
            {
              "isEnabled": true,
              "isBundle": false,
              "id": "IPS-2222",
              "href": "",
              "name": "Intrusion Prevention Systems ",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "featureSpecRelationship": [ ],
              "featureSpecCharacteristic": [ ],
              "version": "1.0",
              "@type": "FeatureSpecification",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/FeatureSpecification.schema.json"
            }
          ],
          "@type": "ResourceFacingServiceSpecification",
          "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ResourceFacingServiceSpecification.schema.json",
          "@baseType": "ServiceSpecification"
        }
      },
      "ServiceSpecification_with_Intent_Specification_request": {
        "description": "POST ServiceSpecification request example - only a subset of service catalog attributes are used in this example",
        "value": {
          "name": "Firewall Service",
          "description": "This service specification describes a firewall service that can be deployed in customer-premises equipment.",
          "version": "2.1",
          "validFor": {
            "startDateTime": "2017-08-23T00:00:00.000Z",
            "endDateTime": "2021-03-25T00:00:00.000Z"
          },
          "lifecycleStatus": "Active",
          "resourceSpecification": [
            {
              "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v4/resourceSpecification/42",
              "id": "42",
              "name": "Firewall",
              "version": "1.0",
              "@referredType": "ResourceFunctionSpec",
              "@type": "ResourceSpecificationRef",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecificationRef.schema.json"
            }
          ],
          "attachment": [
            {
              "description": "This attachment gives a description of the firewall service with diagrams.",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v4/attachment/22",
              "id": "22",
              "url": "https://mycsp.com:7070/docloader?docnum=3534536",
              "@attachmentType": "Document",
              "mimeType": ".docx",
              "validFor": {
                "startDateTime": "2017-08-23T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "size": {
                "amount": 1532,
                "units": "KB"
              },
              "name": "Firewall Service",
              "@type": "Attachment",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Attachment.schema.json"
            }
          ],
          "specCharacteristic": [
            {
              "name": "operatingSystem",
              "id": "5843",
              "description": "This characteristic describes the operating system run by the service",
              "valueType": "string",
              "configurable": true,
              "validFor": {
                "startDateTime": "2017-08-12T00:00:00.000Z",
                "endDateTime": "2021-03-07T00:00:00.000Z"
              },
              "@valueSchemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/StringCharacteristic.schema.json",
              "minCardinality": 0,
              "maxCardinality": 1,
              "isUnique": true,
              "regex": "",
              "extensible": false,
              "characteristicValueSpecification": [
                {
                  "valueType": "string",
                  "isDefault": true,
                  "value": "Android KitKat",
                  "validFor": {
                    "startDateTime": "2017-08-06T00:00:00.000Z",
                    "endDateTime": "2021-03-07T00:00:00.000Z"
                  },
                  "rangeInterval": "open",
                  "@type": "CharacteristicValueSpecification",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicValueSpecification.schema.json"
                }
              ],
              "charSpecRelationship": [
                {
                  "relationshipType": "dependency",
                  "parentSpecificationId": "1741",
                  "parentSpecificationHref": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/1741",
                  "characteristicSpecificationId": "4690",
                  "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecificationCharacteristic/4690",
                  "name": "operatingSystem",
                  "validFor": {
                    "startDateTime": "2017-08-11T00:00:00.000Z",
                    "endDateTime": "2021-03-07T00:00:00.000Z"
                  },
                  "@type": "CharacteristicSpecificationRelationship",
                  "@baseType": "",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicSpecificationRelationship.schema.json"
                }
              ],
              "@type": "SpecCharacteristic",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/SpecCharacteristic.schema.json"
            },
            {
              "name": "scalability",
              "description": "Scalability parameters for this resource facing service spec ",
              "valueType": "CapabilityScalable",
              "configurable": true,
              "validFor": {
                "startDateTime": "2017-08-17T00:00:00.000Z",
                "endDateTime": "2021-03-12T00:00:00.000Z"
              },
              "@valueSchemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/CapabilityScalable.schema.json",
              "minCardinality": 0,
              "maxCardinality": 1,
              "isUnique": true,
              "regex": "",
              "extensible": true,
              "characteristicValueSpecification": [
                {
                  "valueType": "object",
                  "isDefault": true,
                  "value": {
                    "minInstances": 1,
                    "maxInstances": 1000
                  },
                  "validFor": {
                    "startDateTime": "2017-08-17T00:00:00.000Z",
                    "endDateTime": "2021-03-12T00:00:00.000Z"
                  },
                  "rangeInterval": "open",
                  "@type": "CharacteristicValueSpecification",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicValueSpecification.schema.json"
                }
              ],
              "@type": "SpecCharacteristic",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/SpecCharacteristic.schema.json"
            }
          ],
          "relatedParty": [
            {
              "href": "https://mycsp.com:8080/tmf-api/partyManagement/v4/organization/3643",
              "id": "3643",
              "name": "Firewall Express",
              "role": "Supplier",
              "@referredType": "PartyRole",
              "@type": "RelatedParty",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/EngagedParty/RelatedParty.schema.json"
            }
          ],
          "serviceSpecRelationship": [
            {
              "relationshipType": "dependency",
              "role": "dependent",
              "id": "5563",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/5563",
              "name": "Points to the Deep Packet Inspection service on which this Firewall service depends",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "ResourceFacingServiceSpecification",
              "@type": "ServiceSpecRelationship",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ServiceSpecRelationship.schema.json"
            }
          ],
          "serviceLevelSpecification": [
            {
              "href": "https://mycsp.com:8080/tmf-api/serviceQualityManagement/v4/serviceLevelSpecification/8899",
              "id": "8899",
              "name": "Platinum",
              "@type": "ServiceLevelSpecificationRef",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ServiceLevelSpecificationRef.schema.json"
            }
          ],
          "targetServiceSchema": {
            "@type": "RFS",
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/RFS.schema.json"
          },
          "constraint": [
            {
              "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/1994",
              "id": "1994",
              "name": "firewallEligibilityRule",
              "version": "1.0",
              "@referredType": "Constraint",
              "@type": "ConstraintRef",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json"
            }
          ],
          "entitySpecRelationship": [
            {
              "relationshipType": "ServiceSpecTestedVia",
              "role": "serviceUnderTest",
              "id": "3331",
              "href": "https://mycsp.com:8080/tmf-api/serviceTestManagement/v4/serviceTestSpec/3331",
              "name": "FirewallFunctionalTestSpec",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "FunctionalServiceTestSpec",
              "@type": "EntitySpecRelationship",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntitySpecRelationship.schema.json"
            },
            {
              "relationshipType": "ServiceSpecMeasuredBy",
              "role": "serviceUnderTest",
              "id": "7316",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/servicePerformanceSpec/7316",
              "name": "FirewallPerformanceSpec",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "ServicePerformanceSpec",
              "@type": "EntitySpecRelationship",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntitySpecRelationship.schema.json"
            }
          ],
          "featureSpecification": [
            {
              "isEnabled": false,
              "isBundle": false,
              "id": "DPI-2221",
              "name": "deep packet inspection",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "featureSpecRelationship": [ ],
              "featureSpecCharacteristic": [ ],
              "version": "1.0",
              "@type": "FeatureSpecification",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/FeatureSpecification.schema.json"
            },
            {
              "isEnabled": true,
              "isBundle": false,
              "id": "IPS-2222",
              "name": "Intrusion Prevention Systems ",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "featureSpecRelationship": [ ],
              "featureSpecCharacteristic": [ ],
              "version": "1.0",
              "@type": "FeatureSpecification",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/FeatureSpecification.schema.json"
            }
          ],
          "intentSpecification": {
            "@type": "IntentSpecificationRef",
            "id": "EventLiveBroadcast_IntentSpec",
            "name": "EventLiveBroadcastIntentSpec",
            "@referredType": "IntentSpecification",
            "@href": "https://mycsp.com:8080/tmf-api/intent/v5/IntentSpecification/EventLiveBroadcast_IntentSpec"
          },
          "@type": "ResourceFacingServiceSpecification",
          "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ResourceFacingServiceSpecification.schema.json",
          "@baseType": "ServiceSpecification"
        }
      },
      "ServiceSpecification_with_Intent_Specification_response": {
        "description": "POST ServiceSpecification response description.",
        "value": {
          "id": "7655",
          "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/7655",
          "name": "Firewall Service",
          "description": "This service specification describes a firewall service that can be deployed in customer-premises equipment.",
          "version": "2.1",
          "validFor": {
            "startDateTime": "2017-08-23T00:00:00.000Z",
            "endDateTime": "2021-03-25T00:00:00.000Z"
          },
          "lastUpdate": "2020-08-15T00:00:00.000Z",
          "lifecycleStatus": "Active",
          "isBundle": false,
          "resourceSpecification": [
            {
              "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v4/resourceSpecification/42",
              "id": "42",
              "name": "Firewall",
              "version": "1.0",
              "@referredType": "ResourceFunctionSpec",
              "@type": "ResourceSpecificationRef",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecificationRef.schema.json"
            }
          ],
          "attachment": [
            {
              "description": "This attachment gives a description of the firewall service with diagrams.",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v4/attachment/22",
              "id": "22",
              "url": "https://mycsp.com:7070/docloader?docnum=3534536",
              "@attachmentType": "Document",
              "content": "",
              "mimeType": ".docx",
              "validFor": {
                "startDateTime": "2017-08-23T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "size": {
                "amount": 1532,
                "units": "KB"
              },
              "name": "Firewall Service",
              "@type": "Attachment",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Attachment.schema.json"
            }
          ],
          "specCharacteristic": [
            {
              "name": "operatingSystem",
              "id": "5843",
              "description": "This characteristic describes the operating system run by the service",
              "valueType": "string",
              "configurable": true,
              "validFor": {
                "startDateTime": "2017-08-12T00:00:00.000Z",
                "endDateTime": "2021-03-07T00:00:00.000Z"
              },
              "@valueSchemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/StringCharacteristic.schema.json",
              "minCardinality": 0,
              "maxCardinality": 1,
              "isUnique": true,
              "regex": "",
              "extensible": false,
              "characteristicValueSpecification": [
                {
                  "valueType": "string",
                  "isDefault": true,
                  "value": "Android KitKat",
                  "validFor": {
                    "startDateTime": "2017-08-06T00:00:00.000Z",
                    "endDateTime": "2021-03-07T00:00:00.000Z"
                  },
                  "rangeInterval": "open",
                  "@type": "CharacteristicValueSpecification",
                  "@baseType": "",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicValueSpecification.schema.json"
                }
              ],
              "charSpecRelationship": [
                {
                  "relationshipType": "dependency",
                  "parentSpecificationId": "1741",
                  "parentSpecificationHref": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/1741",
                  "characteristicSpecificationId": "4690",
                  "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecificationCharacteristic/4690",
                  "name": "operatingSystem",
                  "validFor": {
                    "startDateTime": "2017-08-11T00:00:00.000Z",
                    "endDateTime": "2021-03-07T00:00:00.000Z"
                  },
                  "@type": "CharacteristicSpecificationRelationship",
                  "@baseType": "",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicSpecificationRelationship.schema.json"
                }
              ],
              "@type": "SpecCharacteristic",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/SpecCharacteristic.schema.json"
            },
            {
              "name": "scalability",
              "description": "Scalability parameters for this resource facing service spec ",
              "valueType": "CapabilityScalable",
              "configurable": true,
              "validFor": {
                "startDateTime": "2017-08-17T00:00:00.000Z",
                "endDateTime": "2021-03-12T00:00:00.000Z"
              },
              "@valueSchemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/CapabilityScalable.schema.json",
              "minCardinality": 0,
              "maxCardinality": 1,
              "isUnique": true,
              "regex": "",
              "extensible": true,
              "characteristicValueSpecification": [
                {
                  "valueType": "object",
                  "isDefault": true,
                  "value": {
                    "minInstances": 1,
                    "maxInstances": 1000
                  },
                  "validFor": {
                    "startDateTime": "2017-08-17T00:00:00.000Z",
                    "endDateTime": "2021-03-12T00:00:00.000Z"
                  },
                  "rangeInterval": "open",
                  "@type": "CharacteristicValueSpecification",
                  "@baseType": "",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicValueSpecification.schema.json"
                }
              ],
              "charSpecRelationship": [ ],
              "@type": "SpecCharacteristic",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/SpecCharacteristic.schema.json"
            }
          ],
          "relatedParty": [
            {
              "href": "https://mycsp.com:8080/tmf-api/partyManagement/v4/organization/3643",
              "id": "3643",
              "name": "Firewall Express",
              "role": "Supplier",
              "@referredType": "PartyRole",
              "@type": "RelatedParty",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/EngagedParty/RelatedParty.schema.json"
            }
          ],
          "serviceSpecRelationship": [
            {
              "relationshipType": "dependency",
              "role": "dependent",
              "id": "5563",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/5563",
              "name": "Points to the Deep Packet Inspection service on which this Firewall service depends",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "ResourceFacingServiceSpecification",
              "@type": "ServiceSpecRelationship",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ServiceSpecRelationship.schema.json"
            }
          ],
          "serviceLevelSpecification": [
            {
              "href": "https://mycsp.com:8080/tmf-api/serviceQualityManagement/v4/serviceLevelSpecification/8899",
              "id": "8899",
              "name": "Platinum",
              "@type": "ServiceLevelSpecificationRef",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ServiceLevelSpecificationRef.schema.json"
            }
          ],
          "targetServiceSchema": {
            "@type": "RFS",
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/RFS.schema.json"
          },
          "constraint": [
            {
              "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/1994",
              "id": "1994",
              "name": "firewallEligibilityRule",
              "version": "1.0",
              "@referredType": "Constraint",
              "@type": "ConstraintRef",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json"
            }
          ],
          "entitySpecRelationship": [
            {
              "relationshipType": "ServiceSpecTestedVia",
              "role": "serviceUnderTest",
              "id": "3331",
              "href": "https://mycsp.com:8080/tmf-api/serviceTestManagement/v4/serviceTestSpec/3331",
              "name": "FirewallFunctionalTestSpec",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "FunctionalServiceTestSpec",
              "@type": "EntitySpecRelationship",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntitySpecRelationship.schema.json"
            },
            {
              "relationshipType": "ServiceSpecMeasuredBy",
              "role": "serviceUnderTest",
              "id": "7316",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/servicePerformanceSpec/7316",
              "name": "FirewallPerformanceSpec",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "ServicePerformanceSpec",
              "@type": "EntitySpecRelationship",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntitySpecRelationship.schema.json"
            }
          ],
          "featureSpecification": [
            {
              "isEnabled": false,
              "isBundle": false,
              "id": "DPI-2221",
              "href": "",
              "name": "deep packet inspection",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "featureSpecRelationship": [ ],
              "featureSpecCharacteristic": [ ],
              "version": "1.0",
              "@type": "FeatureSpecification",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/FeatureSpecification.schema.json"
            },
            {
              "isEnabled": true,
              "isBundle": false,
              "id": "IPS-2222",
              "href": "",
              "name": "Intrusion Prevention Systems ",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "featureSpecRelationship": [ ],
              "featureSpecCharacteristic": [ ],
              "version": "1.0",
              "@type": "FeatureSpecification",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/FeatureSpecification.schema.json"
            }
          ],
          "intentSpecification": {
            "@type": "IntentSpecificationRef",
            "id": "EventLiveBroadcast_IntentSpec",
            "name": "EventLiveBroadcastIntentSpec",
            "@referredType": "IntentSpecification",
            "@href": "/intent/v5/IntentSpecification/EventLiveBroadcast_IntentSpec"
          },
          "@type": "ResourceFacingServiceSpecification",
          "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ResourceFacingServiceSpecification.schema.json",
          "@baseType": "ServiceSpecification"
        }
      },
      "updateServiceSpecification_using_json_request": {
        "description": "PATCH ServiceSpecification request leveraging json application example",
        "value": {
          "version": "3.1",
          "validFor": {
            "startDateTime": "2017-08-23T00:00:00.000Z",
            "endDateTime": "2025-09-23T00:00:00.000Z"
          }
        }
      },
      "updateServiceSpecification_using_json_response": {
        "description": "ServiceSpecification representation.",
        "value": {
          "id": "7655",
          "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/7655",
          "name": "Firewall Service",
          "description": "This service specification describes a firewall service that can be deployed in customer-premises equipment.",
          "version": "3.0",
          "validFor": {
            "startDateTime": "2017-08-23T00:00:00.000Z",
            "endDateTime": "2021-03-25T00:00:00.000Z"
          },
          "lastUpdate": "2020-08-15T00:00:00.000Z",
          "lifecycleStatus": "Active",
          "isBundle": false,
          "resourceSpecification": [
            {
              "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v4/resourceSpecification/42",
              "id": "42",
              "name": "Firewall",
              "version": "1.0",
              "@referredType": "ResourceFunctionSpec",
              "@type": "ResourceSpecificationRef",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Resource/ResourceSpecificationRef.schema.json"
            }
          ],
          "attachment": [
            {
              "description": "This attachment gives a description of the firewall service with diagrams.",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v4/attachment/22",
              "id": "22",
              "url": "https://mycsp.com:7070/docloader?docnum=3534536",
              "@attachmentType": "Document",
              "content": "",
              "mimeType": ".docx",
              "validFor": {
                "startDateTime": "2017-08-23T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "size": {
                "amount": 1532,
                "units": "KB"
              },
              "name": "Firewall Service",
              "@type": "Attachment",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Attachment.schema.json"
            }
          ],
          "specCharacteristic": [
            {
              "name": "operatingSystem",
              "id": "5843",
              "description": "This characteristic describes the operating system run by the service",
              "valueType": "string",
              "configurable": true,
              "validFor": {
                "startDateTime": "2017-08-12T00:00:00.000Z",
                "endDateTime": "2021-03-07T00:00:00.000Z"
              },
              "@valueSchemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/StringCharacteristic.schema.json",
              "minCardinality": 0,
              "maxCardinality": 1,
              "isUnique": true,
              "regex": "",
              "extensible": false,
              "characteristicValueSpecification": [
                {
                  "valueType": "string",
                  "isDefault": true,
                  "value": "Android KitKat",
                  "validFor": {
                    "startDateTime": "2017-08-06T00:00:00.000Z",
                    "endDateTime": "2021-03-07T00:00:00.000Z"
                  },
                  "rangeInterval": "open",
                  "@type": "CharacteristicValueSpecification",
                  "@baseType": "",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicValueSpecification.schema.json"
                }
              ],
              "charSpecRelationship": [
                {
                  "relationshipType": "dependency",
                  "parentSpecificationId": "1741",
                  "parentSpecificationHref": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/1741",
                  "characteristicSpecificationId": "4690",
                  "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecificationCharacteristic/4690",
                  "name": "operatingSystem",
                  "validFor": {
                    "startDateTime": "2017-08-11T00:00:00.000Z",
                    "endDateTime": "2021-03-07T00:00:00.000Z"
                  },
                  "@type": "CharacteristicSpecificationRelationship",
                  "@baseType": "",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicSpecificationRelationship.schema.json"
                }
              ],
              "@type": "SpecCharacteristic",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/SpecCharacteristic.schema.json"
            },
            {
              "name": "scalability",
              "description": "Scalability parameters for this resource facing service spec ",
              "valueType": "CapabilityScalable",
              "configurable": true,
              "validFor": {
                "startDateTime": "2017-08-17T00:00:00.000Z",
                "endDateTime": "2021-03-12T00:00:00.000Z"
              },
              "@valueSchemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/CapabilityScalable.schema.json",
              "minCardinality": 0,
              "maxCardinality": 1,
              "isUnique": true,
              "regex": "",
              "extensible": true,
              "characteristicValueSpecification": [
                {
                  "valueType": "object",
                  "isDefault": true,
                  "value": {
                    "minInstances": 1,
                    "maxInstances": 1000
                  },
                  "validFor": {
                    "startDateTime": "2017-08-17T00:00:00.000Z",
                    "endDateTime": "2021-03-12T00:00:00.000Z"
                  },
                  "rangeInterval": "open",
                  "@type": "CharacteristicValueSpecification",
                  "@baseType": "",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/CharacteristicValueSpecification.schema.json"
                }
              ],
              "charSpecRelationship": [ ],
              "@type": "SpecCharacteristic",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/SpecCharacteristic.schema.json"
            }
          ],
          "relatedParty": [
            {
              "href": "https://mycsp.com:8080/tmf-api/partyManagement/v4/organization/3643",
              "id": "3643",
              "name": "Firewall Express",
              "role": "Supplier",
              "@referredType": "PartyRole",
              "@type": "RelatedParty",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/EngagedParty/RelatedParty.schema.json"
            }
          ],
          "serviceSpecRelationship": [
            {
              "relationshipType": "dependency",
              "role": "dependent",
              "id": "5563",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/5563",
              "name": "Points to the Deep Packet Inspection service on which this Firewall service depends",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "ResourceFacingServiceSpecification",
              "@type": "ServiceSpecRelationship",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ServiceSpecRelationship.schema.json"
            }
          ],
          "serviceLevelSpecification": [
            {
              "href": "https://mycsp.com:8080/tmf-api/serviceQualityManagement/v4/serviceLevelSpecification/8899",
              "id": "8899",
              "name": "Platinum",
              "@type": "ServiceLevelSpecificationRef",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ServiceLevelSpecificationRef.schema.json"
            }
          ],
          "targetServiceSchema": {
            "@type": "RFS",
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/RFS.schema.json"
          },
          "constraint": [
            {
              "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/1994",
              "id": "1994",
              "name": "firewallEligibilityRule",
              "version": "1.0",
              "@referredType": "Constraint",
              "@type": "ConstraintRef",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json"
            }
          ],
          "entitySpecRelationship": [
            {
              "relationshipType": "ServiceSpecTestedVia",
              "role": "serviceUnderTest",
              "id": "3331",
              "href": "https://mycsp.com:8080/tmf-api/serviceTestManagement/v4/serviceTestSpec/3331",
              "name": "FirewallFunctionalTestSpec",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "FunctionalServiceTestSpec",
              "@type": "EntitySpecRelationship",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntitySpecRelationship.schema.json"
            },
            {
              "relationshipType": "ServiceSpecMeasuredBy",
              "role": "serviceUnderTest",
              "id": "7316",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/servicePerformanceSpec/7316",
              "name": "FirewallPerformanceSpec",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "@referredType": "ServicePerformanceSpec",
              "@type": "EntitySpecRelationship",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntitySpecRelationship.schema.json"
            }
          ],
          "featureSpecification": [
            {
              "isEnabled": false,
              "isBundle": false,
              "id": "DPI-2221",
              "href": "",
              "name": "deep packet inspection",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "featureSpecRelationship": [ ],
              "featureSpecCharacteristic": [ ],
              "version": "1.0",
              "@type": "FeatureSpecification",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/FeatureSpecification.schema.json"
            },
            {
              "isEnabled": true,
              "isBundle": false,
              "id": "IPS-2222",
              "href": "",
              "name": "Intrusion Prevention Systems ",
              "validFor": {
                "startDateTime": "2017-08-25T00:00:00.000Z",
                "endDateTime": "2021-03-25T00:00:00.000Z"
              },
              "featureSpecRelationship": [ ],
              "featureSpecCharacteristic": [ ],
              "version": "1.0",
              "@type": "FeatureSpecification",
              "@baseType": "",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/FeatureSpecification.schema.json"
            }
          ],
          "@type": "ResourceFacingServiceSpecification",
          "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Service/ResourceFacingServiceSpecification.schema.json",
          "@baseType": "ServiceSpecification"
        }
      }
    },
    "requestBodies": {
      "ServiceSpecification_FVO": {
        "description": "The ServiceSpecification to be created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ServiceSpecification_FVO"
            },
            "examples": {
              "ServiceSpecification": {
                "$ref": "#/components/examples/ServiceSpecification_request"
              },
              "ServiceSpecification_with_Intent_Specification": {
                "$ref": "#/components/examples/ServiceSpecification_with_Intent_Specification_request"
              }
            }
          }
        },
        "required": true
      },
      "ServiceSpecification_MVO": {
        "description": "The ServiceSpecification to be patched",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ServiceSpecification_MVO"
            },
            "examples": {
              "updateServiceSpecification_using_json": {
                "$ref": "#/components/examples/updateServiceSpecification_using_json_request"
              }
            }
          },
          "application/merge-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/ServiceSpecification_MVO"
            }
          },
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/JsonPatchOperations"
            }
          },
          "application/json-patch-query+json": {
            "schema": {
              "$ref": "#/components/schemas/JsonPatchOperations"
            }
          }
        },
        "required": true
      }
    },
    "headers": {
      "X-Total-Count": {
        "description": "Total number of items matching criteria",
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "integer"
        }
      },
      "X-Result-Count": {
        "description": "Actual number of items returned in the response body",
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "integer"
        }
      }
    },
    "securitySchemes": { }
  }
}