{
  "openapi": "3.0.1",
  "info": {
    "title": "Trouble Ticket",
    "description": "**TMF API Reference : TMF - 621 Trouble Ticket**\nThe Trouble Ticket API provides a standardized client interface to Trouble Ticket Management Systems for creating, tracking and managing trouble tickets as a result of an issue or problem identified by a customer or another system. \nExamples of Trouble Ticket API originators (clients) include CRM applications, network management or fault management systems, or other Trouble Ticket management systems (e.g. B2B).\nThe API supports the ability to send requests to create a new trouble ticket specifying the nature and severity of the trouble or issue as well as all necessary related information. The API also includes mechanisms to search for and update existing trouble tickets. Notifications are defined to provide information when a trouble ticket has been updated, including status changes. A basic set of states of a trouble ticket has been specified (as an example) to handle trouble ticket lifecycle management.\nTrouble Ticketing API manages trouble ticket resource:\n  -\tA trouble ticket represents a record, or an issue raised by requestor that need to be solved, used for reporting and managing the resolution of problems, incidents or request \n -\tMain trouble ticket attributes are its description, severity, type, related dates (creation, expected resolution, resolution), state and related information (change reason and change date), related parties (originator, owner, reviser, etc.), related entities (product, product order, customer bill) and notes \n Trouble Ticket API performs the following operations on trouble ticket: \n -\tRetrieval of a trouble ticket or a collection of trouble ticket depending on filter criteria \n -\tPartial update of a trouble ticket \n -\tCreation of a trouble ticket \n \tNotification of events on trouble ticket: \n \t-\tTrouble ticket state change \n \t-\tTrouble ticket attribute value change \n \t-\tTrouble ticket resoled \n \t-\tTrouble ticket delete (typically restricted to admin role) \n \t-\tTrouble ticket created  \n \t-\tTrouble ticket Information required \n Trouble Ticket API performs the following operations on trouble ticket specification \n-\tRetrieval of a trouble ticket specification or a collection of trouble ticket specification depending on filter criteria \n -\tPartial update of a trouble ticket specification \n-\tCreation of a trouble ticket specification \n-\tNotification of events on trouble ticket specification: \n \t-\tTrouble ticket specification state change \n \t-\tTrouble ticket specification attribute value change \n \t-\tTrouble ticket specification delete (typically restricted to admin role) \n \t-\tTrouble ticket specification created ",
    "version": "5.0.0"
  },
  "servers": [
    {
      "url": "/psi-api/troubleTicket/v2/"
    }
  ],
  "tags": [
    {
      "name": "troubleTicket",
      "description": "Operations for TroubleTicket Resource"
    },
    {
      "name": "troubleTicketSpecification",
      "description": "Operations for TroubleTicketSpecification Resource"
    }
  ],
  "paths": {
    "/troubleTicket": {
      "get": {
        "tags": [
          "troubleTicket"
        ],
        "summary": "List or find TroubleTicket objects",
        "description": "List or find TroubleTicket objects",
        "operationId": "listTroubleTicket",
        "parameters": [
          {
            "$ref": "#/components/parameters/Fields"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200TroubleTicketArray"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "tags": [
          "troubleTicket"
        ],
        "summary": "Creates a TroubleTicket",
        "description": "This operation creates a TroubleTicket entity.",
        "operationId": "createTroubleTicket",
        "parameters": [
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/TroubleTicket_FVO"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201TroubleTicket"
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/troubleTicket/{id}": {
      "get": {
        "tags": [
          "troubleTicket"
        ],
        "summary": "Retrieves a TroubleTicket by ID",
        "description": "This operation retrieves a TroubleTicket entity. Attribute selection enabled for all first level attributes.",
        "operationId": "retrieveTroubleTicket",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          },
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200TroubleTicket_Get"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "tags": [
          "troubleTicket"
        ],
        "summary": "Deletes a TroubleTicket",
        "description": "This operation deletes a TroubleTicket entity.",
        "operationId": "deleteTroubleTicket",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "responses": {
          "202": {
            "$ref": "#/components/responses/202"
          },
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "tags": [
          "troubleTicket"
        ],
        "summary": "Updates partially a TroubleTicket",
        "description": "This operation updates partially a TroubleTicket entity.",
        "operationId": "patchTroubleTicket",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          },
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/TroubleTicket_MVO"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200TroubleTicket_Patch"
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/troubleTicketSpecification": {
      "get": {
        "tags": [
          "troubleTicketSpecification"
        ],
        "summary": "List or find TroubleTicketSpecification objects",
        "description": "List or find TroubleTicketSpecification objects",
        "operationId": "listTroubleTicketSpecification",
        "parameters": [
          {
            "$ref": "#/components/parameters/Fields"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200TroubleTicketSpecificationArray"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "tags": [
          "troubleTicketSpecification"
        ],
        "summary": "Creates a TroubleTicketSpecification",
        "description": "This operation creates a TroubleTicketSpecification entity.",
        "operationId": "createTroubleTicketSpecification",
        "parameters": [
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/TroubleTicketSpecification_FVO"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201TroubleTicketSpecification"
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/troubleTicketSpecification/{id}": {
      "get": {
        "tags": [
          "troubleTicketSpecification"
        ],
        "summary": "Retrieves a TroubleTicketSpecification by ID",
        "description": "This operation retrieves a TroubleTicketSpecification entity. Attribute selection enabled for all first level attributes.",
        "operationId": "retrieveTroubleTicketSpecification",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          },
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200TroubleTicketSpecification_Get"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "tags": [
          "troubleTicketSpecification"
        ],
        "summary": "Deletes a TroubleTicketSpecification",
        "description": "This operation deletes a TroubleTicketSpecification entity.",
        "operationId": "deleteTroubleTicketSpecification",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "responses": {
          "202": {
            "$ref": "#/components/responses/202"
          },
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "tags": [
          "troubleTicketSpecification"
        ],
        "summary": "Updates partially a TroubleTicketSpecification",
        "description": "This operation updates partially a TroubleTicketSpecification entity.",
        "operationId": "patchTroubleTicketSpecification",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          },
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/TroubleTicketSpecification_MVO"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200TroubleTicketSpecification_Patch"
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Addressable": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "Hyperlink reference",
            "format": "uri"
          },
          "id": {
            "type": "string",
            "description": "unique identifier"
          }
        },
        "description": "Base schema for adressable entities"
      },
      "Addressable_FVO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique identifier"
          }
        },
        "description": "Base schema for adressable entities"
      },
      "AttachmentOrDocumentRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "AttachmentRef": "#/components/schemas/AttachmentOrDocumentRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "A narrative text describing the content of the attachment"
              },
              "url": {
                "type": "string",
                "description": "Link to the attachment media/content"
              }
            },
            "description": "Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures"
          }
        ]
      },
      "BooleanArrayCharacteristic": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "boolean"
                }
              }
            },
            "description": "A characteristic which value is an array of Boolean(s)."
          }
        ]
      },
      "BooleanArrayCharacteristic_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_FVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "boolean"
                }
              }
            },
            "description": "A characteristic which value is an array of Boolean(s)."
          }
        ]
      },
      "BooleanArrayCharacteristic_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_MVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "boolean"
                }
              }
            },
            "description": "A characteristic which value is an array of Boolean(s)."
          }
        ]
      },
      "BooleanCharacteristic": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean",
                "description": "Value of the characteristic"
              }
            },
            "description": "A characteristic which value is a Boolean."
          }
        ]
      },
      "BooleanCharacteristic_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_FVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean",
                "description": "Value of the characteristic"
              }
            },
            "description": "A characteristic which value is a Boolean."
          }
        ]
      },
      "BooleanCharacteristic_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_MVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean",
                "description": "Value of the characteristic"
              }
            },
            "description": "A characteristic which value is a Boolean."
          }
        ]
      },
      "ChannelRef": {
        "type": "object",
        "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ChannelRef": "#/components/schemas/ChannelRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "ChannelRef_FVO": {
        "type": "object",
        "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ChannelRef": "#/components/schemas/ChannelRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ]
      },
      "ChannelRef_MVO": {
        "type": "object",
        "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ChannelRef": "#/components/schemas/ChannelRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "Characteristic": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "Characteristic": "#/components/schemas/Characteristic",
            "StringCharacteristic": "#/components/schemas/StringCharacteristic",
            "StringArrayCharacteristic": "#/components/schemas/StringArrayCharacteristic",
            "ObjectCharacteristic": "#/components/schemas/ObjectCharacteristic",
            "ObjectArrayCharacteristic": "#/components/schemas/ObjectArrayCharacteristic",
            "NumberCharacteristic": "#/components/schemas/NumberCharacteristic",
            "NumberArrayCharacteristic": "#/components/schemas/NumberArrayCharacteristic",
            "IntegerCharacteristic": "#/components/schemas/IntegerCharacteristic",
            "IntegerArrayCharacteristic": "#/components/schemas/IntegerArrayCharacteristic",
            "FloatCharacteristic": "#/components/schemas/FloatCharacteristic",
            "FloatArrayCharacteristic": "#/components/schemas/FloatArrayCharacteristic",
            "BooleanCharacteristic": "#/components/schemas/BooleanCharacteristic",
            "BooleanArrayCharacteristic": "#/components/schemas/BooleanArrayCharacteristic"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the characteristic"
              },
              "name": {
                "type": "string",
                "description": "Name of the characteristic"
              },
              "valueType": {
                "type": "string",
                "description": "Data type of the value of the characteristic"
              },
              "characteristicRelationship": {
                "type": "array",
                "description": "Collection of characteristic relationships",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicRelationship"
                }
              },
              "unitOfMeasure": {
                "type": "string",
                "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning them to numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
              }
            },
            "description": "Describes a given characteristic of an object or entity through a name/value pair."
          }
        ]
      },
      "CharacteristicRelationship": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicRelationship": "#/components/schemas/CharacteristicRelationship"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the characteristic"
              },
              "relationshipType": {
                "type": "string",
                "description": "The type of relationship"
              }
            },
            "description": "Another Characteristic that is related to the current Characteristic;"
          }
        ]
      },
      "CharacteristicRelationship_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicRelationship": "#/components/schemas/CharacteristicRelationship_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "id",
              "relationshipType"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the characteristic"
              },
              "relationshipType": {
                "type": "string",
                "description": "The type of relationship"
              }
            },
            "description": "Another Characteristic that is related to the current Characteristic;"
          }
        ]
      },
      "CharacteristicRelationship_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicRelationship": "#/components/schemas/CharacteristicRelationship_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the characteristic"
              },
              "relationshipType": {
                "type": "string",
                "description": "The type of relationship"
              }
            },
            "description": "Another Characteristic that is related to the current Characteristic;"
          }
        ]
      },
      "CharacteristicSpecification": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecification": "#/components/schemas/CharacteristicSpecification"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique ID for the characteristic"
              },
              "name": {
                "type": "string",
                "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
              },
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
              },
              "description": {
                "type": "string",
                "description": "A narrative that explains the CharacteristicSpecification."
              },
              "configurable": {
                "type": "boolean",
                "description": "If true, the Boolean indicates that the target Characteristic is configurable"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "minCardinality": {
                "type": "integer",
                "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
              },
              "maxCardinality": {
                "type": "integer",
                "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
              },
              "isUnique": {
                "type": "boolean",
                "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
              },
              "regex": {
                "type": "string",
                "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
              },
              "extensible": {
                "type": "boolean",
                "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
              },
              "@valueSchemaLocation": {
                "type": "string",
                "description": "This (optional) field provides a link to the schema describing the value type."
              },
              "charSpecRelationship": {
                "type": "array",
                "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecificationRelationship"
                }
              },
              "characteristicValueSpecification": {
                "type": "array",
                "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicValueSpecification"
                }
              }
            },
            "description": "This class defines a characteristic specification."
          }
        ]
      },
      "CharacteristicSpecificationRelationship": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecificationRelationship": "#/components/schemas/CharacteristicSpecificationRelationship"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
              },
              "name": {
                "type": "string",
                "description": "Name of the target characteristic within the specification"
              },
              "characteristicSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the characteristic within the specification"
              },
              "parentSpecificationHref": {
                "type": "string",
                "description": "Hyperlink reference to the parent specification containing the target characteristic",
                "format": "uri"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "parentSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the parent specification containing the target characteristic"
              }
            },
            "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Characteristic specifications. The specification characteristic is embedded within the specification whose ID and href are in this entity, and identified by its ID."
          }
        ]
      },
      "CharacteristicSpecificationRelationship_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecificationRelationship": "#/components/schemas/CharacteristicSpecificationRelationship_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "name",
              "parentSpecificationId",
              "relationshipType"
            ],
            "type": "object",
            "properties": {
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
              },
              "name": {
                "type": "string",
                "description": "Name of the target characteristic within the specification"
              },
              "characteristicSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the characteristic within the specification"
              },
              "parentSpecificationHref": {
                "type": "string",
                "description": "Hyperlink reference to the parent specification containing the target characteristic",
                "format": "uri"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "parentSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the parent specification containing the target characteristic"
              }
            },
            "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Characteristic specifications. The specification characteristic is embedded within the specification whose ID and href are in this entity, and identified by its ID."
          }
        ]
      },
      "CharacteristicSpecificationRelationship_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecificationRelationship": "#/components/schemas/CharacteristicSpecificationRelationship_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "required": [
              "name",
              "parentSpecificationId",
              "relationshipType"
            ],
            "type": "object",
            "properties": {
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
              },
              "name": {
                "type": "string",
                "description": "Name of the target characteristic within the specification"
              },
              "characteristicSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the characteristic within the specification"
              },
              "parentSpecificationHref": {
                "type": "string",
                "description": "Hyperlink reference to the parent specification containing the target characteristic",
                "format": "uri"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "parentSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the parent specification containing the target characteristic"
              }
            },
            "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Characteristic specifications. The specification characteristic is embedded within the specification whose ID and href are in this entity, and identified by its ID."
          }
        ]
      },
      "CharacteristicSpecification_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecification": "#/components/schemas/CharacteristicSpecification_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "name",
              "valueType"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique ID for the characteristic"
              },
              "name": {
                "type": "string",
                "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
              },
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
              },
              "description": {
                "type": "string",
                "description": "A narrative that explains the CharacteristicSpecification."
              },
              "configurable": {
                "type": "boolean",
                "description": "If true, the Boolean indicates that the target Characteristic is configurable"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "minCardinality": {
                "type": "integer",
                "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
              },
              "maxCardinality": {
                "type": "integer",
                "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
              },
              "isUnique": {
                "type": "boolean",
                "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
              },
              "regex": {
                "type": "string",
                "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
              },
              "extensible": {
                "type": "boolean",
                "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
              },
              "@valueSchemaLocation": {
                "type": "string",
                "description": "This (optional) field provides a link to the schema describing the value type."
              },
              "charSpecRelationship": {
                "type": "array",
                "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecificationRelationship_FVO"
                }
              },
              "characteristicValueSpecification": {
                "type": "array",
                "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
                }
              }
            },
            "description": "This class defines a characteristic specification."
          }
        ]
      },
      "CharacteristicSpecification_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecification": "#/components/schemas/CharacteristicSpecification_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "required": [
              "name",
              "valueType"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique ID for the characteristic"
              },
              "name": {
                "type": "string",
                "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
              },
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
              },
              "description": {
                "type": "string",
                "description": "A narrative that explains the CharacteristicSpecification."
              },
              "configurable": {
                "type": "boolean",
                "description": "If true, the Boolean indicates that the target Characteristic is configurable"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "minCardinality": {
                "type": "integer",
                "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
              },
              "maxCardinality": {
                "type": "integer",
                "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
              },
              "isUnique": {
                "type": "boolean",
                "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
              },
              "regex": {
                "type": "string",
                "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
              },
              "extensible": {
                "type": "boolean",
                "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
              },
              "@valueSchemaLocation": {
                "type": "string",
                "description": "This (optional) field provides a link to the schema describing the value type."
              },
              "charSpecRelationship": {
                "type": "array",
                "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecificationRelationship_MVO"
                }
              },
              "characteristicValueSpecification": {
                "type": "array",
                "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
                }
              }
            },
            "description": "This class defines a characteristic specification."
          }
        ]
      },
      "CharacteristicValueSpecification": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicValueSpecification": "#/components/schemas/CharacteristicValueSpecification",
            "StringCharacteristicValueSpecification": "#/components/schemas/StringCharacteristicValueSpecification",
            "StringArrayCharacteristicValueSpecification": "#/components/schemas/StringArrayCharacteristicValueSpecification",
            "ObjectCharacteristicValueSpecification": "#/components/schemas/ObjectCharacteristicValueSpecification",
            "ObjectArrayCharacteristicValueSpecification": "#/components/schemas/ObjectArrayCharacteristicValueSpecification",
            "NumberCharacteristicValueSpecification": "#/components/schemas/NumberCharacteristicValueSpecification",
            "NumberArrayCharacteristicValueSpecification": "#/components/schemas/NumberArrayCharacteristicValueSpecification",
            "MapCharacteristicValueSpecification": "#/components/schemas/MapCharacteristicValueSpecification",
            "MapArrayCharacteristicValueSpecification": "#/components/schemas/MapArrayCharacteristicValueSpecification",
            "IntegerCharacteristicValueSpecification": "#/components/schemas/IntegerCharacteristicValueSpecification",
            "IntegerArrayCharacteristicValueSpecification": "#/components/schemas/IntegerArrayCharacteristicValueSpecification"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
              },
              "isDefault": {
                "type": "boolean",
                "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
              },
              "unitOfMeasure": {
                "type": "string",
                "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "valueFrom": {
                "type": "integer",
                "description": "The low range value that a characteristic can take on"
              },
              "valueTo": {
                "type": "integer",
                "description": "The upper range value that a characteristic can take on"
              },
              "rangeInterval": {
                "type": "string",
                "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
              },
              "regex": {
                "type": "string",
                "description": "A regular expression constraint for given value"
              }
            },
            "description": "specification of a value (number or text or an object) that can be assigned to a Characteristic. This is an abstract base class, the actual value is in one of the strongly-typed subclasses"
          }
        ]
      },
      "CharacteristicValueSpecification_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicValueSpecification": "#/components/schemas/CharacteristicValueSpecification_FVO",
            "StringCharacteristicValueSpecification": "#/components/schemas/StringCharacteristicValueSpecification_FVO",
            "StringArrayCharacteristicValueSpecification": "#/components/schemas/StringArrayCharacteristicValueSpecification_FVO",
            "ObjectCharacteristicValueSpecification": "#/components/schemas/ObjectCharacteristicValueSpecification_FVO",
            "ObjectArrayCharacteristicValueSpecification": "#/components/schemas/ObjectArrayCharacteristicValueSpecification_FVO",
            "NumberCharacteristicValueSpecification": "#/components/schemas/NumberCharacteristicValueSpecification_FVO",
            "NumberArrayCharacteristicValueSpecification": "#/components/schemas/NumberArrayCharacteristicValueSpecification_FVO",
            "MapCharacteristicValueSpecification": "#/components/schemas/MapCharacteristicValueSpecification_FVO",
            "MapArrayCharacteristicValueSpecification": "#/components/schemas/MapArrayCharacteristicValueSpecification_FVO",
            "IntegerCharacteristicValueSpecification": "#/components/schemas/IntegerCharacteristicValueSpecification_FVO",
            "IntegerArrayCharacteristicValueSpecification": "#/components/schemas/IntegerArrayCharacteristicValueSpecification_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "type": "object",
            "properties": {
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
              },
              "isDefault": {
                "type": "boolean",
                "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
              },
              "unitOfMeasure": {
                "type": "string",
                "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "valueFrom": {
                "type": "integer",
                "description": "The low range value that a characteristic can take on"
              },
              "valueTo": {
                "type": "integer",
                "description": "The upper range value that a characteristic can take on"
              },
              "rangeInterval": {
                "type": "string",
                "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
              },
              "regex": {
                "type": "string",
                "description": "A regular expression constraint for given value"
              }
            },
            "description": "specification of a value (number or text or an object) that can be assigned to a Characteristic. This is an abstract base class, the actual value is in one of the strongly-typed subclasses"
          }
        ]
      },
      "CharacteristicValueSpecification_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicValueSpecification": "#/components/schemas/CharacteristicValueSpecification_MVO",
            "StringCharacteristicValueSpecification": "#/components/schemas/StringCharacteristicValueSpecification_MVO",
            "StringArrayCharacteristicValueSpecification": "#/components/schemas/StringArrayCharacteristicValueSpecification_MVO",
            "ObjectCharacteristicValueSpecification": "#/components/schemas/ObjectCharacteristicValueSpecification_MVO",
            "ObjectArrayCharacteristicValueSpecification": "#/components/schemas/ObjectArrayCharacteristicValueSpecification_MVO",
            "NumberCharacteristicValueSpecification": "#/components/schemas/NumberCharacteristicValueSpecification_MVO",
            "NumberArrayCharacteristicValueSpecification": "#/components/schemas/NumberArrayCharacteristicValueSpecification_MVO",
            "MapCharacteristicValueSpecification": "#/components/schemas/MapCharacteristicValueSpecification_MVO",
            "MapArrayCharacteristicValueSpecification": "#/components/schemas/MapArrayCharacteristicValueSpecification_MVO",
            "IntegerCharacteristicValueSpecification": "#/components/schemas/IntegerCharacteristicValueSpecification_MVO",
            "IntegerArrayCharacteristicValueSpecification": "#/components/schemas/IntegerArrayCharacteristicValueSpecification_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
              },
              "isDefault": {
                "type": "boolean",
                "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
              },
              "unitOfMeasure": {
                "type": "string",
                "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "valueFrom": {
                "type": "integer",
                "description": "The low range value that a characteristic can take on"
              },
              "valueTo": {
                "type": "integer",
                "description": "The upper range value that a characteristic can take on"
              },
              "rangeInterval": {
                "type": "string",
                "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
              },
              "regex": {
                "type": "string",
                "description": "A regular expression constraint for given value"
              }
            },
            "description": "specification of a value (number or text or an object) that can be assigned to a Characteristic. This is an abstract base class, the actual value is in one of the strongly-typed subclasses"
          }
        ]
      },
      "Characteristic_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "Characteristic": "#/components/schemas/Characteristic_FVO",
            "StringCharacteristic": "#/components/schemas/StringCharacteristic_FVO",
            "StringArrayCharacteristic": "#/components/schemas/StringArrayCharacteristic_FVO",
            "ObjectCharacteristic": "#/components/schemas/ObjectCharacteristic_FVO",
            "ObjectArrayCharacteristic": "#/components/schemas/ObjectArrayCharacteristic_FVO",
            "NumberCharacteristic": "#/components/schemas/NumberCharacteristic_FVO",
            "NumberArrayCharacteristic": "#/components/schemas/NumberArrayCharacteristic_FVO",
            "IntegerCharacteristic": "#/components/schemas/IntegerCharacteristic_FVO",
            "IntegerArrayCharacteristic": "#/components/schemas/IntegerArrayCharacteristic_FVO",
            "FloatCharacteristic": "#/components/schemas/FloatCharacteristic_FVO",
            "FloatArrayCharacteristic": "#/components/schemas/FloatArrayCharacteristic_FVO",
            "BooleanCharacteristic": "#/components/schemas/BooleanCharacteristic_FVO",
            "BooleanArrayCharacteristic": "#/components/schemas/BooleanArrayCharacteristic_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "name"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the characteristic"
              },
              "name": {
                "type": "string",
                "description": "Name of the characteristic"
              },
              "valueType": {
                "type": "string",
                "description": "Data type of the value of the characteristic"
              },
              "characteristicRelationship": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicRelationship_FVO"
                }
              },
              "unitOfMeasure": {
                "type": "string",
                "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning them to numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
              }
            },
            "description": "Describes a given characteristic of an object or entity through a name/value pair."
          }
        ]
      },
      "Characteristic_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "Characteristic": "#/components/schemas/Characteristic_MVO",
            "StringCharacteristic": "#/components/schemas/StringCharacteristic_MVO",
            "StringArrayCharacteristic": "#/components/schemas/StringArrayCharacteristic_MVO",
            "ObjectCharacteristic": "#/components/schemas/ObjectCharacteristic_MVO",
            "ObjectArrayCharacteristic": "#/components/schemas/ObjectArrayCharacteristic_MVO",
            "NumberCharacteristic": "#/components/schemas/NumberCharacteristic_MVO",
            "NumberArrayCharacteristic": "#/components/schemas/NumberArrayCharacteristic_MVO",
            "IntegerCharacteristic": "#/components/schemas/IntegerCharacteristic_MVO",
            "IntegerArrayCharacteristic": "#/components/schemas/IntegerArrayCharacteristic_MVO",
            "FloatCharacteristic": "#/components/schemas/FloatCharacteristic_MVO",
            "FloatArrayCharacteristic": "#/components/schemas/FloatArrayCharacteristic_MVO",
            "BooleanCharacteristic": "#/components/schemas/BooleanCharacteristic_MVO",
            "BooleanArrayCharacteristic": "#/components/schemas/BooleanArrayCharacteristic_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the characteristic"
              },
              "name": {
                "type": "string",
                "description": "Name of the characteristic"
              },
              "valueType": {
                "type": "string",
                "description": "Data type of the value of the characteristic"
              },
              "characteristicRelationship": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicRelationship_MVO"
                }
              },
              "unitOfMeasure": {
                "type": "string",
                "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning them to numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
              }
            },
            "description": "Describes a given characteristic of an object or entity through a name/value pair."
          }
        ]
      },
      "Entity": {
        "type": "object",
        "description": "Base entity schema for use in TMForum Open-APIs. Property.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/Addressable"
          }
        ]
      },
      "EntityRef": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/Addressable"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the referred entity."
              },
              "href": {
                "type": "string",
                "description": "The URI of the referred entity.",
                "format": "uri"
              },
              "name": {
                "type": "string",
                "description": "Name of the referred entity."
              },
              "@referredType": {
                "type": "string",
                "description": "The actual type of the target instance when needed for disambiguation."
              }
            },
            "description": "Entity reference schema to be use for all entityRef class."
          }
        ]
      },
      "EntityRef_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "$ref": "#/components/schemas/Addressable_FVO"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the referred entity."
              },
              "href": {
                "type": "string",
                "description": "The URI of the referred entity.",
                "format": "uri"
              },
              "name": {
                "type": "string",
                "description": "Name of the referred entity."
              },
              "@referredType": {
                "type": "string",
                "description": "The actual type of the target instance when needed for disambiguation."
              }
            },
            "description": "Entity reference schema to be use for all entityRef class."
          }
        ]
      },
      "Entity_FVO": {
        "type": "object",
        "description": "Base entity schema for use in TMForum Open-APIs. Property.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "$ref": "#/components/schemas/Addressable_FVO"
          }
        ]
      },
      "Entity_MVO": {
        "type": "object",
        "description": "Base entity schema for use in TMForum Open-APIs. Property.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          }
        ]
      },
      "Extensible": {
        "required": [
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "When sub-classing, this defines the sub-class Extensible name"
          },
          "@baseType": {
            "type": "string",
            "description": "When sub-classing, this defines the super-class"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
          }
        },
        "description": "Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means that the Entity described by the schema  MUST be extended with the @type"
      },
      "Extensible_FVO": {
        "required": [
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "When sub-classing, this defines the sub-class Extensible name"
          },
          "@baseType": {
            "type": "string",
            "description": "When sub-classing, this defines the super-class"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
          }
        },
        "description": "Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means that the Entity described by the schema  MUST be extended with the @type"
      },
      "ExternalIdentifier": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ExternalIdentifier": "#/components/schemas/ExternalIdentifier"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "Name of the external system that owns the entity.",
                "example": "MagentoCommerce"
              },
              "externalIdentifierType": {
                "type": "string",
                "description": "Type of the identification, typically would be the type of the entity within the external system",
                "example": "ProductOrder"
              },
              "id": {
                "type": "string",
                "description": "identification of the entity within the external system."
              }
            },
            "description": "An identification of an entity that is owned by or originates in a software system different from the current system, for example a ProductOrder handed off from a commerce platform into an order handling system. The structure identifies the system itself, the nature of the entity within the system (e.g. class name) and the unique ID of the entity within the system. It is anticipated that multiple external IDs can be held for a single entity, e.g. if the entity passed through multiple systems on the way to the current system. In this case the consumer is expected to sequence the IDs in the array in reverse order of provenance, i.e. most recent system first in the list."
          }
        ]
      },
      "ExternalIdentifier_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ExternalIdentifier": "#/components/schemas/ExternalIdentifier_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "Name of the external system that owns the entity.",
                "example": "MagentoCommerce"
              },
              "externalIdentifierType": {
                "type": "string",
                "description": "Type of the identification, typically would be the type of the entity within the external system",
                "example": "ProductOrder"
              },
              "id": {
                "type": "string",
                "description": "identification of the entity within the external system."
              }
            },
            "description": "An identification of an entity that is owned by or originates in a software system different from the current system, for example a ProductOrder handed off from a commerce platform into an order handling system. The structure identifies the system itself, the nature of the entity within the system (e.g. class name) and the unique ID of the entity within the system. It is anticipated that multiple external IDs can be held for a single entity, e.g. if the entity passed through multiple systems on the way to the current system. In this case the consumer is expected to sequence the IDs in the array in reverse order of provenance, i.e. most recent system first in the list."
          }
        ]
      },
      "ExternalIdentifier_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ExternalIdentifier": "#/components/schemas/ExternalIdentifier_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "Name of the external system that owns the entity.",
                "example": "MagentoCommerce"
              },
              "externalIdentifierType": {
                "type": "string",
                "description": "Type of the identification, typically would be the type of the entity within the external system",
                "example": "ProductOrder"
              },
              "id": {
                "type": "string",
                "description": "identification of the entity within the external system."
              }
            },
            "description": "An identification of an entity that is owned by or originates in a software system different from the current system, for example a ProductOrder handed off from a commerce platform into an order handling system. The structure identifies the system itself, the nature of the entity within the system (e.g. class name) and the unique ID of the entity within the system. It is anticipated that multiple external IDs can be held for a single entity, e.g. if the entity passed through multiple systems on the way to the current system. In this case the consumer is expected to sequence the IDs in the array in reverse order of provenance, i.e. most recent system first in the list."
          }
        ]
      },
      "FloatCharacteristic": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Value of the characteristic",
                "format": "float"
              }
            },
            "description": "A characteristic which value is a Float."
          }
        ]
      },
      "FloatCharacteristic_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_FVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Value of the characteristic",
                "format": "float"
              }
            },
            "description": "A characteristic which value is a Float."
          }
        ]
      },
      "FloatCharacteristic_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_MVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Value of the characteristic",
                "format": "float"
              }
            },
            "description": "A characteristic which value is a Float."
          }
        ]
      },
      "IntegerArrayCharacteristic": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            },
            "description": "A characteristic which value is an array of Integer(s)."
          }
        ]
      },
      "IntegerArrayCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array of format integer"
          }
        ]
      },
      "IntegerArrayCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array of format integer"
          }
        ]
      },
      "IntegerArrayCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array of format integer"
          }
        ]
      },
      "IntegerArrayCharacteristic_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_FVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            },
            "description": "A characteristic which value is an array of Integer(s)."
          }
        ]
      },
      "IntegerArrayCharacteristic_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_MVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            },
            "description": "A characteristic which value is an array of Integer(s)."
          }
        ]
      },
      "IntegerCharacteristic": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "description": "Value of the characteristic"
              }
            },
            "description": "A characteristic which value is a Integer."
          }
        ]
      },
      "IntegerCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is an integer number"
          }
        ]
      },
      "IntegerCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is an integer number"
          }
        ]
      },
      "IntegerCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is an integer number"
          }
        ]
      },
      "IntegerCharacteristic_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_FVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "description": "Value of the characteristic"
              }
            },
            "description": "A characteristic which value is a Integer."
          }
        ]
      },
      "IntegerCharacteristic_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_MVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "description": "Value of the characteristic"
              }
            },
            "description": "A characteristic which value is a Integer."
          }
        ]
      },
      "JsonPatch": {
        "required": [
          "op",
          "path"
        ],
        "type": "object",
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to be performed",
            "enum": [
              "add",
              "remove",
              "replace",
              "move",
              "copy",
              "test"
            ]
          },
          "path": {
            "type": "string",
            "description": "A JSON-Pointer"
          },
          "value": {
            "description": "The value to be used within the operations."
          },
          "from": {
            "type": "string",
            "description": "A string containing a JSON Pointer value."
          }
        },
        "description": "A JSONPatch document as defined by RFC 6902"
      },
      "MapArrayCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of mapped objects"
          }
        ]
      },
      "MapArrayCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of mapped objects"
          }
        ]
      },
      "MapArrayCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of mapped objects"
          }
        ]
      },
      "MapCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a mapped object"
          }
        ]
      },
      "MapCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a mapped object"
          }
        ]
      },
      "MapCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a mapped object"
          }
        ]
      },
      "Note": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "Note": "#/components/schemas/Note"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier of the note within its containing entity",
                "example": "afa9-3d90aaa8da0f"
              },
              "author": {
                "type": "string",
                "description": "Author of the note",
                "example": "Mr. N. Bene"
              },
              "date": {
                "type": "string",
                "description": "Date of the note",
                "format": "date-time",
                "example": "2020-11-20T08:00:00Z"
              },
              "text": {
                "type": "string",
                "description": "Text of the note",
                "example": "This is important"
              }
            },
            "description": "Extra information about a given entity"
          }
        ]
      },
      "Note_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "Note": "#/components/schemas/Note_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier of the note within its containing entity",
                "example": "afa9-3d90aaa8da0f"
              },
              "author": {
                "type": "string",
                "description": "Author of the note",
                "example": "Mr. N. Bene"
              },
              "date": {
                "type": "string",
                "description": "Date of the note",
                "format": "date-time",
                "example": "2020-11-20T08:00:00Z"
              },
              "text": {
                "type": "string",
                "description": "Text of the note",
                "example": "This is important"
              }
            },
            "description": "Extra information about a given entity"
          }
        ]
      },
      "Note_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "Note": "#/components/schemas/Note_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier of the note within its containing entity",
                "example": "afa9-3d90aaa8da0f"
              },
              "author": {
                "type": "string",
                "description": "Author of the note",
                "example": "Mr. N. Bene"
              },
              "date": {
                "type": "string",
                "description": "Date of the note",
                "format": "date-time",
                "example": "2020-11-20T08:00:00Z"
              },
              "text": {
                "type": "string",
                "description": "Text of the note",
                "example": "This is important"
              }
            },
            "description": "Extra information about a given entity"
          }
        ]
      },
      "NumberArrayCharacteristic": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "description": "A characteristic which value is an array of Number(s)."
          }
        ]
      },
      "NumberArrayCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array with no specific format "
          }
        ]
      },
      "NumberArrayCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array with no specific format "
          }
        ]
      },
      "NumberArrayCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array with no specific format "
          }
        ]
      },
      "NumberArrayCharacteristic_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_FVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "description": "A characteristic which value is an array of Number(s)."
          }
        ]
      },
      "NumberArrayCharacteristic_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_MVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "description": "A characteristic which value is an array of Number(s)."
          }
        ]
      },
      "NumberCharacteristic": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Value of the characteristic"
              }
            },
            "description": "A characteristic which value is a Number."
          }
        ]
      },
      "NumberCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a number of no specific format"
          }
        ]
      },
      "NumberCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a number of no specific format"
          }
        ]
      },
      "NumberCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a number of no specific format"
          }
        ]
      },
      "NumberCharacteristic_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_FVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Value of the characteristic"
              }
            },
            "description": "A characteristic which value is a Number."
          }
        ]
      },
      "NumberCharacteristic_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_MVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Value of the characteristic"
              }
            },
            "description": "A characteristic which value is a Number."
          }
        ]
      },
      "ObjectArrayCharacteristic": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            },
            "description": "A characteristic which value is an array of Object(s)."
          }
        ]
      },
      "ObjectArrayCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of objects"
          }
        ]
      },
      "ObjectArrayCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of objects"
          }
        ]
      },
      "ObjectArrayCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of objects"
          }
        ]
      },
      "ObjectArrayCharacteristic_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_FVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            },
            "description": "A characteristic which value is an array of Object(s)."
          }
        ]
      },
      "ObjectArrayCharacteristic_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_MVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            },
            "description": "A characteristic which value is an array of Object(s)."
          }
        ]
      },
      "ObjectCharacteristic": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "description": "Value of the characteristic"
              }
            },
            "description": "A characteristic which value is a Object."
          }
        ]
      },
      "ObjectCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is any object"
          }
        ]
      },
      "ObjectCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is any object"
          }
        ]
      },
      "ObjectCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is any object"
          }
        ]
      },
      "ObjectCharacteristic_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_FVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "description": "Value of the characteristic"
              }
            },
            "description": "A characteristic which value is a Object."
          }
        ]
      },
      "ObjectCharacteristic_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_MVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "description": "Value of the characteristic"
              }
            },
            "description": "A characteristic which value is a Object."
          }
        ]
      },
      "PartyRef": {
        "type": "object",
        "description": "A Party reference",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "PartyRefOrPartyRoleRef": {
        "type": "object",
        "description": "",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef",
            "PartyRoleRef": "#/components/schemas/PartyRoleRef"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/PartyRef"
          },
          {
            "$ref": "#/components/schemas/PartyRoleRef"
          }
        ]
      },
      "PartyRefOrPartyRoleRef_FVO": {
        "type": "object",
        "description": "",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef_FVO",
            "PartyRoleRef": "#/components/schemas/PartyRoleRef_FVO"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/PartyRef_FVO"
          },
          {
            "$ref": "#/components/schemas/PartyRoleRef_FVO"
          }
        ]
      },
      "PartyRefOrPartyRoleRef_MVO": {
        "type": "object",
        "description": "",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef_MVO",
            "PartyRoleRef": "#/components/schemas/PartyRoleRef_MVO"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/PartyRef_MVO"
          },
          {
            "$ref": "#/components/schemas/PartyRoleRef_MVO"
          }
        ]
      },
      "PartyRef_FVO": {
        "type": "object",
        "description": "A Party reference",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ]
      },
      "PartyRef_MVO": {
        "type": "object",
        "description": "A Party reference",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "PartyRoleRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRoleRef": "#/components/schemas/PartyRoleRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "partyId": {
                "type": "string",
                "description": "The identifier of the engaged party that is linked to the PartyRole object."
              },
              "partyName": {
                "type": "string",
                "description": "The name of the engaged party that is linked to the PartyRole object."
              }
            },
            "description": "Party role reference. A party role represents the part played by a party in a given context."
          }
        ]
      },
      "PartyRoleRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRoleRef": "#/components/schemas/PartyRoleRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "type": "object",
            "properties": {
              "partyId": {
                "type": "string",
                "description": "The identifier of the engaged party that is linked to the PartyRole object."
              },
              "partyName": {
                "type": "string",
                "description": "The name of the engaged party that is linked to the PartyRole object."
              }
            },
            "description": "Party role reference. A party role represents the part played by a party in a given context."
          }
        ]
      },
      "PartyRoleRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRoleRef": "#/components/schemas/PartyRoleRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "partyId": {
                "type": "string",
                "description": "The identifier of the engaged party that is linked to the PartyRole object."
              },
              "partyName": {
                "type": "string",
                "description": "The name of the engaged party that is linked to the PartyRole object."
              }
            },
            "description": "Party role reference. A party role represents the part played by a party in a given context."
          }
        ]
      },
      "RelatedEntity": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "RelatedEntity": "#/components/schemas/RelatedEntity"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "role": {
                "type": "string"
              },
              "entity": {
                "$ref": "#/components/schemas/EntityRef"
              }
            },
            "description": "A reference to an entity, where the type of the entity is not known in advance."
          }
        ]
      },
      "RelatedEntity_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "RelatedEntity": "#/components/schemas/RelatedEntity_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "entity",
              "role"
            ],
            "type": "object",
            "properties": {
              "role": {
                "type": "string"
              },
              "entity": {
                "$ref": "#/components/schemas/EntityRef_FVO"
              }
            },
            "description": "A reference to an entity, where the type of the entity is not known in advance."
          }
        ]
      },
      "RelatedEntity_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "RelatedEntity": "#/components/schemas/RelatedEntity_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "role": {
                "type": "string"
              },
              "entity": {
                "$ref": "#/components/schemas/EntityRef"
              }
            },
            "description": "A reference to an entity, where the type of the entity is not known in advance."
          }
        ]
      },
      "RelatedPartyRefOrPartyRoleRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "RelatedPartyRefOrPartyRoleRef": "#/components/schemas/RelatedPartyRefOrPartyRoleRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "role": {
                "type": "string",
                "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
              },
              "partyOrPartyRole": {
                "$ref": "#/components/schemas/PartyRefOrPartyRoleRef"
              }
            },
            "description": "RelatedParty reference. A related party defines party or party role or its reference, linked to a specific entity"
          }
        ]
      },
      "RelatedPartyRefOrPartyRoleRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "RelatedPartyRefOrPartyRoleRef": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "role"
            ],
            "type": "object",
            "properties": {
              "role": {
                "type": "string",
                "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
              },
              "partyOrPartyRole": {
                "$ref": "#/components/schemas/PartyRefOrPartyRoleRef_FVO"
              }
            },
            "description": "RelatedParty reference. A related party defines party or party role or its reference, linked to a specific entity"
          }
        ]
      },
      "RelatedPartyRefOrPartyRoleRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "RelatedPartyRefOrPartyRoleRef": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "role": {
                "type": "string",
                "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
              },
              "partyOrPartyRole": {
                "$ref": "#/components/schemas/PartyRefOrPartyRoleRef_MVO"
              }
            },
            "description": "RelatedParty reference. A related party defines party or party role or its reference, linked to a specific entity"
          }
        ]
      },
      "StatusChange": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "StatusChange": "#/components/schemas/StatusChange"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "statusChangeDate": {
                "type": "string",
                "description": "The date and time the status changed.",
                "format": "date-time"
              },
              "statusChangeReason": {
                "type": "string",
                "description": "The reason why the status changed."
              },
              "status": {
                "$ref": "#/components/schemas/TroubleTicketStatusType"
              }
            },
            "description": "Holds the status, reasons and associated date the status changed, populated by the server"
          }
        ]
      },
      "StatusChange_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "StatusChange": "#/components/schemas/StatusChange_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "statusChangeDate": {
                "type": "string",
                "description": "The date and time the status changed.",
                "format": "date-time"
              },
              "statusChangeReason": {
                "type": "string",
                "description": "The reason why the status changed."
              },
              "status": {
                "$ref": "#/components/schemas/TroubleTicketStatusType"
              }
            },
            "description": "Holds the status, reasons and associated date the status changed, populated by the server"
          }
        ]
      },
      "StringArrayCharacteristic": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "description": "A characteristic which value is an array of String(s)."
          }
        ]
      },
      "StringArrayCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of strings"
          }
        ]
      },
      "StringArrayCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of strings"
          }
        ]
      },
      "StringArrayCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of strings"
          }
        ]
      },
      "StringArrayCharacteristic_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_FVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "description": "A characteristic which value is an array of String(s)."
          }
        ]
      },
      "StringArrayCharacteristic_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_MVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "description": "A characteristic which value is an array of String(s)."
          }
        ]
      },
      "StringCharacteristic": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Value of the characteristic"
              }
            },
            "description": "A characteristic which value is a String."
          }
        ]
      },
      "StringCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a string"
          }
        ]
      },
      "StringCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a string"
          }
        ]
      },
      "StringCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a string"
          }
        ]
      },
      "StringCharacteristic_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_FVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Value of the characteristic"
              }
            },
            "description": "A characteristic which value is a String."
          }
        ]
      },
      "StringCharacteristic_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_MVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Value of the characteristic"
              }
            },
            "description": "A characteristic which value is a String."
          }
        ]
      },
      "TimePeriod": {
        "type": "object",
        "properties": {
          "startDateTime": {
            "type": "string",
            "description": "Start of the time period, using IETC-RFC-3339 format",
            "format": "date-time",
            "example": "1985-04-12T23:20:50.52Z"
          },
          "endDateTime": {
            "type": "string",
            "description": "End of the time period, using IETC-RFC-3339 format",
            "format": "date-time",
            "example": "1985-04-12T23:20:50.52Z"
          }
        },
        "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both"
      },
      "TroubleTicket": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "TroubleTicket": "#/components/schemas/TroubleTicket"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the trouble ticket, typically a short description provided by the user that create the ticket"
              },
              "description": {
                "type": "string",
                "description": "Description of the trouble or issue"
              },
              "severity": {
                "type": "string",
                "description": "The severity of the issue. Indicate the implication of the issue on the expected functionality e.g. of a system, application, service etc.. \nSeverity values can be for example : Critical, Major, Minor"
              },
              "ticketType": {
                "type": "string",
                "description": "represent a business type of the trouble ticket e.g. incident, complain, request"
              },
              "attachment": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentOrDocumentRef"
                }
              },
              "channel": {
                "$ref": "#/components/schemas/ChannelRef"
              },
              "creationDate": {
                "type": "string",
                "description": "The date on which the trouble ticket was created",
                "format": "date-time"
              },
              "requestedResolutionDate": {
                "type": "string",
                "description": "The resolution date requested by the user",
                "format": "date-time"
              },
              "expectedResolutionDate": {
                "type": "string",
                "description": "The expected resolution date determined by the trouble ticket system",
                "format": "date-time"
              },
              "resolutionDate": {
                "type": "string",
                "description": "The date and time the trouble ticket was resolved",
                "format": "date-time"
              },
              "externalIdentifier": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalIdentifier"
                }
              },
              "lastUpdate": {
                "type": "string",
                "description": "The date and time that the trouble ticket was last updated",
                "format": "date-time"
              },
              "note": {
                "type": "array",
                "description": "The note(s) that are associated to the ticket.",
                "items": {
                  "$ref": "#/components/schemas/Note"
                }
              },
              "priority": {
                "type": "string",
                "description": "The priority of the trouble ticket and how quickly the issue should be resolved. Example: Critical, High, Medium, Low. The value is set by the ticket management system considering the severity, ticket type etc..."
              },
              "relatedEntity": {
                "type": "array",
                "description": "An entity that is related to the ticket such as a bill, a product, etc. The entity against which the ticket is associated.",
                "items": {
                  "$ref": "#/components/schemas/RelatedEntity"
                }
              },
              "relatedParty": {
                "type": "array",
                "description": "The related party(ies) that are associated to the ticket.",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef"
                }
              },
              "status": {
                "$ref": "#/components/schemas/TroubleTicketStatusType"
              },
              "statusChangeDate": {
                "type": "string",
                "description": "The date and time the status changed.",
                "format": "date-time"
              },
              "statusChangeReason": {
                "type": "string",
                "description": "The reason for changing the status"
              },
              "statusChangeHistory": {
                "type": "array",
                "description": "The status change history that are associated to the ticket. Populated by the server",
                "items": {
                  "$ref": "#/components/schemas/StatusChange"
                }
              },
              "troubleTicketRelationship": {
                "type": "array",
                "description": "A list of trouble ticket relationships (TroubleTicketRelationship [*]). Represents a relationship between trouble tickets",
                "items": {
                  "$ref": "#/components/schemas/TroubleTicketRelationship"
                }
              },
              "troubleTicketSpecification": {
                "$ref": "#/components/schemas/TroubleTicketSpecificationRef"
              },
              "troubleTicketCharacteristic": {
                "type": "array",
                "description": "List of characteristics of the trouble ticket",
                "items": {
                  "$ref": "#/components/schemas/Characteristic"
                }
              }
            },
            "description": "A trouble ticket is a record of an issue that is created, tracked, and managed by a trouble ticket management system"
          }
        ]
      },
      "TroubleTicketRelationship": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "TroubleTicketRelationship": "#/components/schemas/TroubleTicketRelationship"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the related trouble ticket"
              },
              "name": {
                "type": "string",
                "description": "Name of the trouble ticket"
              },
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship"
              }
            },
            "description": "Represents a relationship between trouble tickets"
          }
        ]
      },
      "TroubleTicketRelationship_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "TroubleTicketRelationship": "#/components/schemas/TroubleTicketRelationship_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "required": [
              "id",
              "relationshipType"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the related trouble ticket"
              },
              "name": {
                "type": "string",
                "description": "Name of the trouble ticket"
              },
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship"
              }
            },
            "description": "Represents a relationship between trouble tickets"
          }
        ]
      },
      "TroubleTicketRelationship_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "TroubleTicketRelationship": "#/components/schemas/TroubleTicketRelationship_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the related trouble ticket"
              },
              "name": {
                "type": "string",
                "description": "Name of the trouble ticket"
              },
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship"
              }
            },
            "description": "Represents a relationship between trouble tickets"
          }
        ]
      },
      "TroubleTicketSpecification": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "TroubleTicketSpecification": "#/components/schemas/TroubleTicketSpecification"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name given to the specification"
              },
              "description": {
                "type": "string",
                "description": "Description of the specification"
              },
              "lifecycleStatus": {
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this specification such as inDesign,active,rejected,retired"
              },
              "specCharacteristic": {
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification"
                }
              },
              "relatedParty": {
                "type": "array",
                "description": "Parties who manage or otherwise have an interest in this specification",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef"
                }
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "version": {
                "type": "string",
                "description": "The version of the trouble ticket specification, in case it is desired to maintain multiple versions of trouble ticket specifications"
              },
              "creationDate": {
                "type": "string",
                "description": "The date on which the trouble ticket specification was created",
                "format": "date-time"
              },
              "lastUpdate": {
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              }
            },
            "description": "TroubleTicketSpecification defines the common attributes and relationships of a set of related trouble tickets, while trouble ticket defines a specific instance that is based on a particular trouble ticket specification."
          }
        ]
      },
      "TroubleTicketSpecificationRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "TroubleTicketSpecificationRef": "#/components/schemas/TroubleTicketSpecificationRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "The version of the trouble ticket specification, in case it is desired to maintain multiple versions of trouble ticket specifications"
              }
            },
            "description": "reference to an TroubleTicketSpecification object"
          }
        ]
      },
      "TroubleTicketSpecificationRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "TroubleTicketSpecificationRef": "#/components/schemas/TroubleTicketSpecificationRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "The version of the trouble ticket specification, in case it is desired to maintain multiple versions of trouble ticket specifications"
              }
            },
            "description": "reference to an TroubleTicketSpecification object"
          }
        ]
      },
      "TroubleTicketSpecificationRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "TroubleTicketSpecificationRef": "#/components/schemas/TroubleTicketSpecificationRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "The version of the trouble ticket specification, in case it is desired to maintain multiple versions of trouble ticket specifications"
              }
            },
            "description": "reference to an TroubleTicketSpecification object"
          }
        ]
      },
      "TroubleTicketSpecification_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "TroubleTicketSpecification": "#/components/schemas/TroubleTicketSpecification_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity_FVO"
          },
          {
            "required": [
              "name"
            ],
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name given to the specification"
              },
              "description": {
                "type": "string",
                "description": "Description of the specification"
              },
              "lifecycleStatus": {
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this specification such as inDesign,active,rejected,retired"
              },
              "specCharacteristic": {
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification_FVO"
                }
              },
              "relatedParty": {
                "type": "array",
                "description": "Parties who manage or otherwise have an interest in this specification",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO"
                }
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "version": {
                "type": "string",
                "description": "The version of the trouble ticket specification, in case it is desired to maintain multiple versions of trouble ticket specifications"
              }
            },
            "description": "TroubleTicketSpecification defines the common attributes and relationships of a set of related trouble tickets, while trouble ticket defines a specific instance that is based on a particular trouble ticket specification."
          }
        ]
      },
      "TroubleTicketSpecification_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "TroubleTicketSpecification": "#/components/schemas/TroubleTicketSpecification_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity_MVO"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name given to the specification"
              },
              "description": {
                "type": "string",
                "description": "Description of the specification"
              },
              "lifecycleStatus": {
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this specification such as inDesign,active,rejected,retired"
              },
              "specCharacteristic": {
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification_MVO"
                }
              },
              "relatedParty": {
                "type": "array",
                "description": "Parties who manage or otherwise have an interest in this specification",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO"
                }
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "version": {
                "type": "string",
                "description": "The version of the trouble ticket specification, in case it is desired to maintain multiple versions of trouble ticket specifications"
              }
            },
            "description": "TroubleTicketSpecification defines the common attributes and relationships of a set of related trouble tickets, while trouble ticket defines a specific instance that is based on a particular trouble ticket specification."
          }
        ]
      },
      "TroubleTicketStatusType": {
        "type": "string",
        "description": "Possible values for the status of the trouble ticket",
        "enum": [
          "acknowledged",
          "rejected",
          "pending",
          "held",
          "inProgress",
          "cancelled",
          "closed",
          "resolved"
        ]
      },
      "TroubleTicket_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "TroubleTicket": "#/components/schemas/TroubleTicket_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity_FVO"
          },
          {
            "required": [
              "description",
              "severity",
              "ticketType"
            ],
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the trouble ticket, typically a short description provided by the user that create the ticket"
              },
              "description": {
                "type": "string",
                "description": "Description of the trouble or issue"
              },
              "severity": {
                "type": "string",
                "description": "The severity of the issue. Indicate the implication of the issue on the expected functionality e.g. of a system, application, service etc.. \nSeverity values can be for example : Critical, Major, Minor"
              },
              "ticketType": {
                "type": "string",
                "description": "represent a business type of the trouble ticket e.g. incident, complain, request"
              },
              "attachment": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentOrDocumentRef"
                }
              },
              "channel": {
                "$ref": "#/components/schemas/ChannelRef_FVO"
              },
              "requestedResolutionDate": {
                "type": "string",
                "description": "The resolution date requested by the user",
                "format": "date-time"
              },
              "expectedResolutionDate": {
                "type": "string",
                "description": "The expected resolution date determined by the trouble ticket system",
                "format": "date-time"
              },
              "resolutionDate": {
                "type": "string",
                "description": "The date and time the trouble ticket was resolved",
                "format": "date-time"
              },
              "externalIdentifier": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalIdentifier_FVO"
                }
              },
              "note": {
                "type": "array",
                "description": "The note(s) that are associated to the ticket.",
                "items": {
                  "$ref": "#/components/schemas/Note_FVO"
                }
              },
              "priority": {
                "type": "string",
                "description": "The priority of the trouble ticket and how quickly the issue should be resolved. Example: Critical, High, Medium, Low. The value is set by the ticket management system considering the severity, ticket type etc..."
              },
              "relatedEntity": {
                "type": "array",
                "description": "An entity that is related to the ticket such as a bill, a product, etc. The entity against which the ticket is associated.",
                "items": {
                  "$ref": "#/components/schemas/RelatedEntity_FVO"
                }
              },
              "relatedParty": {
                "type": "array",
                "description": "The related party(ies) that are associated to the ticket.",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO"
                }
              },
              "status": {
                "$ref": "#/components/schemas/TroubleTicketStatusType"
              },
              "statusChangeDate": {
                "type": "string",
                "description": "The date and time the status changed.",
                "format": "date-time"
              },
              "statusChangeReason": {
                "type": "string",
                "description": "The reason for changing the status"
              },
              "troubleTicketRelationship": {
                "type": "array",
                "description": "A list of trouble ticket relationships (TroubleTicketRelationship [*]). Represents a relationship between trouble tickets",
                "items": {
                  "$ref": "#/components/schemas/TroubleTicketRelationship_FVO"
                }
              },
              "troubleTicketSpecification": {
                "$ref": "#/components/schemas/TroubleTicketSpecificationRef_FVO"
              },
              "troubleTicketCharacteristic": {
                "type": "array",
                "description": "List of characteristics of the trouble ticket",
                "items": {
                  "$ref": "#/components/schemas/Characteristic_FVO"
                }
              }
            },
            "description": "A trouble ticket is a record of an issue that is created, tracked, and managed by a trouble ticket management system"
          }
        ]
      },
      "TroubleTicket_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "TroubleTicket": "#/components/schemas/TroubleTicket_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity_MVO"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the trouble ticket, typically a short description provided by the user that create the ticket"
              },
              "description": {
                "type": "string",
                "description": "Description of the trouble or issue"
              },
              "severity": {
                "type": "string",
                "description": "The severity of the issue. Indicate the implication of the issue on the expected functionality e.g. of a system, application, service etc.. \nSeverity values can be for example : Critical, Major, Minor"
              },
              "ticketType": {
                "type": "string",
                "description": "represent a business type of the trouble ticket e.g. incident, complain, request"
              },
              "attachment": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentOrDocumentRef"
                }
              },
              "channel": {
                "$ref": "#/components/schemas/ChannelRef_MVO"
              },
              "requestedResolutionDate": {
                "type": "string",
                "description": "The resolution date requested by the user",
                "format": "date-time"
              },
              "expectedResolutionDate": {
                "type": "string",
                "description": "The expected resolution date determined by the trouble ticket system",
                "format": "date-time"
              },
              "resolutionDate": {
                "type": "string",
                "description": "The date and time the trouble ticket was resolved",
                "format": "date-time"
              },
              "externalIdentifier": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalIdentifier_MVO"
                }
              },
              "note": {
                "type": "array",
                "description": "The note(s) that are associated to the ticket.",
                "items": {
                  "$ref": "#/components/schemas/Note_MVO"
                }
              },
              "priority": {
                "type": "string",
                "description": "The priority of the trouble ticket and how quickly the issue should be resolved. Example: Critical, High, Medium, Low. The value is set by the ticket management system considering the severity, ticket type etc..."
              },
              "relatedEntity": {
                "type": "array",
                "description": "An entity that is related to the ticket such as a bill, a product, etc. The entity against which the ticket is associated.",
                "items": {
                  "$ref": "#/components/schemas/RelatedEntity_MVO"
                }
              },
              "relatedParty": {
                "type": "array",
                "description": "The related party(ies) that are associated to the ticket.",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO"
                }
              },
              "status": {
                "$ref": "#/components/schemas/TroubleTicketStatusType"
              },
              "statusChangeReason": {
                "type": "string",
                "description": "The reason for changing the status"
              },
              "statusChangeHistory": {
                "type": "array",
                "description": "The status change history that are associated to the ticket. Populated by the server",
                "items": {
                  "$ref": "#/components/schemas/StatusChange_MVO"
                }
              },
              "troubleTicketRelationship": {
                "type": "array",
                "description": "A list of trouble ticket relationships (TroubleTicketRelationship [*]). Represents a relationship between trouble tickets",
                "items": {
                  "$ref": "#/components/schemas/TroubleTicketRelationship_MVO"
                }
              },
              "troubleTicketSpecification": {
                "$ref": "#/components/schemas/TroubleTicketSpecificationRef_MVO"
              },
              "troubleTicketCharacteristic": {
                "type": "array",
                "description": "List of characteristics of the trouble ticket",
                "items": {
                  "$ref": "#/components/schemas/Characteristic_MVO"
                }
              }
            },
            "description": "A trouble ticket is a record of an issue that is created, tracked, and managed by a trouble ticket management system"
          }
        ]
      },
      "Error": {
        "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "Error": "#/components/schemas/Error"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "required": [
              "code",
              "reason"
            ],
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Application relevant detail, defined in the API or a common list."
              },
              "reason": {
                "type": "string",
                "description": "Explanation of the reason for the error which can be shown to a client user."
              },
              "message": {
                "type": "string",
                "description": "More details and corrective actions related to the error which can be shown to a client user."
              },
              "status": {
                "type": "string",
                "description": "HTTP Error code extension"
              },
              "referenceError": {
                "type": "string",
                "description": "URI of documentation describing the error."
              }
            }
          }
        ]
      },
      "JsonPatchOperations": {
        "type": "array",
        "description": "JSONPatch Operations document as defined by RFC 6902",
        "items": {
          "$ref": "#/components/schemas/JsonPatch"
        }
      },
      "FloatArrayCharacteristic": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "float"
                }
              }
            },
            "description": "A characteristic which value is an array of Float(s)."
          }
        ]
      },
      "FloatArrayCharacteristic_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_FVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "float"
                }
              }
            },
            "description": "A characteristic which value is an array of Float(s)."
          }
        ]
      },
      "FloatArrayCharacteristic_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Characteristic_MVO"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "float"
                }
              }
            },
            "description": "A characteristic which value is an array of Float(s)."
          }
        ]
      }
    },
    "responses": {
      "202": {
        "description": "Accepted"
      },
      "204": {
        "description": "Deleted"
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "405": {
        "description": "Method Not allowed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "409": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "501": {
        "description": "Not Implemented",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "503": {
        "description": "Service Unavailable",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "200TroubleTicketArray": {
        "description": "Success",
        "headers": {
          "X-Total-Count": {
            "$ref": "#/components/headers/X-Total-Count"
          },
          "X-Result-Count": {
            "$ref": "#/components/headers/X-Result-Count"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TroubleTicket"
              }
            },
            "examples": {
              "TroubleTicket_list_with_filter_and_fields_example": {
                "$ref": "#/components/examples/TroubleTicket_list_with_filter_and_fields_example_response"
              },
              "TroubleTicket_list_example": {
                "$ref": "#/components/examples/TroubleTicket_list_example_response"
              }
            }
          }
        }
      },
      "200TroubleTicket_Get": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TroubleTicket"
            },
            "examples": {
              "TroubleTicket_retrieve_example": {
                "$ref": "#/components/examples/TroubleTicket_retrieve_example_response"
              }
            }
          }
        }
      },
      "200TroubleTicket_Patch": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TroubleTicket"
            },
            "examples": {
              "TroubleTicket_partialupdate_example_application_json": {
                "$ref": "#/components/examples/TroubleTicket_partialupdate_example_application_json_response"
              }
            }
          },
          "application/merge-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/TroubleTicket"
            },
            "examples": {
              "TroubleTicket_partialupdate_example_application_merge_json": {
                "$ref": "#/components/examples/TroubleTicket_partialupdate_example_application_merge_json_response"
              }
            }
          },
          "application/json-patch+json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TroubleTicket"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TroubleTicket"
                  }
                },
                {
                  "type": "string",
                  "nullable": true
                }
              ]
            },
            "examples": {
              "TroubleTicket_partialupdate_example_application_json_patch": {
                "$ref": "#/components/examples/TroubleTicket_partialupdate_example_application_json_patch_response"
              }
            }
          },
          "application/json-patch-query+json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TroubleTicket"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TroubleTicket"
                  }
                },
                {
                  "type": "string",
                  "nullable": true
                }
              ]
            },
            "examples": {
              "TroubleTicket_partialupdate_example_application_json_patch_query": {
                "$ref": "#/components/examples/TroubleTicket_partialupdate_example_application_json_patch_query_response"
              }
            }
          }
        }
      },
      "201TroubleTicket": {
        "description": "OK/Created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TroubleTicket"
            },
            "examples": {
              "TroubleTicket_create_example": {
                "$ref": "#/components/examples/TroubleTicket_create_example_response"
              }
            }
          }
        }
      },
      "200TroubleTicketSpecificationArray": {
        "description": "Success",
        "headers": {
          "X-Total-Count": {
            "$ref": "#/components/headers/X-Total-Count"
          },
          "X-Result-Count": {
            "$ref": "#/components/headers/X-Result-Count"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TroubleTicketSpecification"
              }
            },
            "examples": {
              "TroubleTicketSpecification_with_filter_and_fields_list_example": {
                "$ref": "#/components/examples/TroubleTicketSpecification_with_filter_and_fields_list_example_response"
              },
              "TroubleTicketSpecification_list_example": {
                "$ref": "#/components/examples/TroubleTicketSpecification_list_example_response"
              }
            }
          }
        }
      },
      "200TroubleTicketSpecification_Get": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TroubleTicketSpecification"
            },
            "examples": {
              "TroubleTicketSpecification_retrieve_example": {
                "$ref": "#/components/examples/TroubleTicketSpecification_retrieve_example_response"
              }
            }
          }
        }
      },
      "200TroubleTicketSpecification_Patch": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TroubleTicketSpecification"
            },
            "examples": {
              "TroubleTicketSpecification_partialupdate_application_json": {
                "$ref": "#/components/examples/TroubleTicketSpecification_partialupdate_application_json_response"
              }
            }
          },
          "application/merge-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/TroubleTicketSpecification"
            },
            "examples": {
              "TroubleTicketSpecification_partialupdate_application_merge_json": {
                "$ref": "#/components/examples/TroubleTicketSpecification_partialupdate_application_merge_json_response"
              }
            }
          },
          "application/json-patch+json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TroubleTicketSpecification"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TroubleTicketSpecification"
                  }
                },
                {
                  "type": "string",
                  "nullable": true
                }
              ]
            },
            "examples": {
              "TroubleTicketSpecification_partialupdate_application_json_patch": {
                "$ref": "#/components/examples/TroubleTicketSpecification_partialupdate_application_json_patch_response"
              }
            }
          },
          "application/json-patch-query+json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TroubleTicketSpecification"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TroubleTicketSpecification"
                  }
                },
                {
                  "type": "string",
                  "nullable": true
                }
              ]
            },
            "examples": {
              "TroubleTicketSpecification_partialupdate_application_json_patch_query": {
                "$ref": "#/components/examples/TroubleTicketSpecification_partialupdate_application_json_patch_query_response"
              }
            }
          }
        }
      },
      "201TroubleTicketSpecification": {
        "description": "OK/Created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TroubleTicketSpecification"
            },
            "examples": {
              "TroubleTicketSpecification_create_example": {
                "$ref": "#/components/examples/TroubleTicketSpecification_create_example_response"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "Id": {
        "name": "id",
        "in": "path",
        "description": "Identifier of the Resource",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "Fields": {
        "name": "fields",
        "in": "query",
        "description": "Comma-separated properties to be provided in response",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "Offset": {
        "name": "offset",
        "in": "query",
        "description": "Requested index for start of resources to be provided in response",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      },
      "Limit": {
        "name": "limit",
        "in": "query",
        "description": "Requested number of resources to be provided in response",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      }
    },
    "examples": {
      "TroubleTicket_list_with_filter_and_fields_example_response": {
        "description": "Here's an example of a request for retrieving a list of trouble ticket(s). The given filter criteria is priority High and fields id,href,name,@type,priority",
        "value": [
          {
            "id": "3180",
            "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3180",
            "name": "complaint over last bill",
            "priority": "High",
            "@type": "TroubleTicket"
          },
          {
            "id": "3256",
            "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3256",
            "name": "Commerce problem",
            "priority": "High",
            "@type": "TroubleTicket"
          },
          {
            "id": "4563",
            "href": "https://mycsp.com:8080/tmf-api/troubleTicket/5/troubleTicket/4563",
            "name": "Network latency",
            "priority": "High",
            "@type": "TroubleTicket"
          }
        ]
      },
      "TroubleTicket_list_example_response": {
        "description": "Here's an example of a request for retrieving a list of trouble ticket(s).",
        "value": [
          {
            "id": "3256",
            "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3256",
            "creationDate": "2023-05-31T07:34:45.968Z",
            "description": "I ordered a new mobile line 2 week ago, but the mobile device did not arrived",
            "expectedResolutionDate": "2019-06-10T07:34:45.968Z",
            "lastUpdate": "2023-05-31T07:34:45.968Z",
            "name": "Commerce problem",
            "priority": "High",
            "requestedResolutionDate": "2022-05-31T07:34:45.968Z",
            "resolutionDate": "2023-05-31T07:34:45.968Z",
            "severity": "Minor",
            "status": "resolved",
            "statusChangeDate": "2023-05-31T07:34:45.968Z",
            "statusChangeReason": "Apply full credit",
            "ticketType": "Commerce Issue",
            "troubleTicketCharacteristic": [
              {
                "id": "1",
                "name": "orderReferenceNumber",
                "valueType": "string",
                "value": "Order_888",
                "@type": "StringCharacteristic"
              },
              {
                "id": "2",
                "name": "orderCreationDate",
                "valueType": "string",
                "value": "2023-05-31",
                "@type": "StringCharacteristic"
              }
            ],
            "attachment": [
              {
                "description": "Scanned Order",
                "attachmentType": "orderCopy",
                "mimeType": "image/png",
                "name": "New Mobile Order",
                "url": "https://mycsp.com:7070/docloader?docnum=3534888",
                "@type": "AttachmentRef"
              }
            ],
            "channel": {
              "id": "8774",
              "name": "self service",
              "@type": "ChannelRef"
            },
            "note": [
              {
                "id": "77458",
                "author": "Jack Smith",
                "date": "2023-05-31T07:34:45.968Z",
                "text": "I did not recived the mobile device",
                "@type": "Note"
              }
            ],
            "relatedEntity": [
              {
                "role": "disputedOrder",
                "@type": "RelatedEntity",
                "entity": {
                  "id": "Order_888",
                  "href": "https://mycsp.com:8080/tmf-api/productOrdering/v5/productOrder/Order_888",
                  "name": "New Mobile Order",
                  "@type": "EntityRef",
                  "@referredType": "ProductOrder"
                }
              }
            ],
            "relatedParty": [
              {
                "role": "member",
                "partyOrPartyRole": {
                  "id": "9866",
                  "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/9866",
                  "name": "Sandy Smith",
                  "@type": "PartyRef",
                  "@referredType": "Individual"
                },
                "@type": "RelatedPartyRefOrPartyRoleRef"
              },
              {
                "role": "reporter",
                "partyOrPartyRole": {
                  "id": "9877",
                  "name": "Jacob Jac Miller",
                  "@type": "PartyRef",
                  "@referredType": "Individual"
                },
                "@type": "RelatedPartyRefOrPartyRoleRef"
              },
              {
                "role": "customer",
                "partyOrPartyRole": {
                  "id": "9176",
                  "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/customer/9176",
                  "name": "Jack Smith",
                  "@type": "PartyRoleRef",
                  "@referredType": "Customer"
                },
                "@type": "RelatedPartyRefOrPartyRoleRef"
              }
            ],
            "statusChangeHistory": [
              {
                "statusChangeDate": "2023-05-28T07:34:45.968Z",
                "statusChangeReason": "trouble ticket created ",
                "status": "acknowledged",
                "@type": "StatusChange"
              },
              {
                "statusChangeDate": "2023-05-28T08:34:45.968Z",
                "statusChangeReason": "start process",
                "status": "inProgress",
                "@type": "StatusChange"
              },
              {
                "statusChangeDate": "2023-05-31T07:34:45.968Z",
                "statusChangeReason": "Resend new device to the customer",
                "status": "resolved",
                "@type": "StatusChange"
              }
            ],
            "@type": "TroubleTicket"
          },
          {
            "id": "3180",
            "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3180",
            "creationDate": "2022-05-31T07:34:45.968Z",
            "description": "I do not accept the last VOD charge, since the movie was constantly interrupted, I had to quick watching the movie in the middle ",
            "expectedResolutionDate": "2019-06-10T07:34:45.968Z",
            "lastUpdate": "2022-05-31T07:34:45.968Z",
            "name": "complaint over last bill",
            "priority": "High",
            "requestedResolutionDate": "2022-05-31T07:34:45.968Z",
            "resolutionDate": "2022-05-31T07:34:45.968Z",
            "severity": "Minor",
            "status": "resolved",
            "statusChangeDate": "2022-05-31T07:34:45.968Z",
            "statusChangeReason": "Apply full credit",
            "ticketType": "Bill Dispute",
            "troubleTicketCharacteristic": [
              {
                "id": "1",
                "name": "disputeAmount",
                "valueType": "number",
                "value": "40",
                "@type": "NumberCharacteristic"
              },
              {
                "id": "2",
                "name": "creditAmount",
                "valueType": "number",
                "value": "40",
                "characteristicRelationship": [
                  {
                    "id": "4",
                    "relationshipType": "dependency",
                    "@type": "CharacteristicRelationship"
                  }
                ],
                "@type": "NubmerCharacteristic"
              },
              {
                "id": "3",
                "name": "currency",
                "valueType": "string",
                "value": "USD",
                "@type": "StringCharacteristic"
              },
              {
                "id": "4",
                "name": "creditReason",
                "valueType": "string",
                "value": "Network connectivity issues",
                "@type": "StringCharacteristic"
              }
            ],
            "attachment": [
              {
                "description": "Scanned disputed bill",
                "attachmentType": "billCopy",
                "mimeType": "image/png",
                "name": "March Bill",
                "url": "https://mycsp.com:7070/docloader?docnum=3534555",
                "@type": "AttachmentRef"
              }
            ],
            "channel": {
              "id": "8774",
              "name": "self service",
              "@type": "ChannelRef"
            },
            "note": [
              {
                "id": "77456",
                "author": "Jack Smith",
                "date": "2019-05-31T07:34:45.968Z",
                "text": "This is quite important, please approach me as soon as possible",
                "@type": "Note"
              }
            ],
            "relatedEntity": [
              {
                "role": "disputedBill",
                "@type": "RelatedEntity",
                "entity": {
                  "id": "3472",
                  "href": "https://mycsp.com:8080/tmf-api/customerBillManagement/v5/customerBill/8297",
                  "name": "March 2019 Bill",
                  "@type": "EntityRef",
                  "@referredType": "CustomerBill"
                }
              }
            ],
            "relatedParty": [
              {
                "role": "member",
                "partyOrPartyRole": {
                  "id": "9866",
                  "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/9866",
                  "name": "Sandy Smith",
                  "@type": "PartyRef",
                  "@referredType": "Individual"
                },
                "@type": "RelatedPartyRefOrPartyRoleRef"
              },
              {
                "role": "reporter",
                "partyOrPartyRole": {
                  "id": "9877",
                  "name": "Jacob Jac Miller",
                  "@type": "PartyRef",
                  "@referredType": "Individual"
                },
                "@type": "RelatedPartyRefOrPartyRoleRef"
              },
              {
                "role": "customer",
                "partyOrPartyRole": {
                  "id": "9176",
                  "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/customer/9176",
                  "name": "Jack Smith",
                  "@type": "PartyRoleRef",
                  "@referredType": "Customer"
                },
                "@type": "RelatedPartyRefOrPartyRoleRef"
              }
            ],
            "statusChangeHistory": [
              {
                "statusChangeDate": "2022-05-28T07:34:45.968Z",
                "statusChangeReason": "trouble ticket created ",
                "status": "acknowledged",
                "@type": "StatusChange"
              },
              {
                "statusChangeDate": "2022-05-28T08:34:45.968Z",
                "statusChangeReason": "start process",
                "status": "inProgress",
                "@type": "StatusChange"
              },
              {
                "statusChangeDate": "2022-05-29T07:34:45.968Z",
                "statusChangeReason": "Need more information from the customer",
                "status": "pending",
                "@type": "StatusChange"
              },
              {
                "statusChangeDate": "2022-05-31T07:34:45.968Z",
                "statusChangeReason": "Apply full credit",
                "status": "resolved",
                "@type": "StatusChange"
              }
            ],
            "troubleTicketRelationship": [
              {
                "id": "567433",
                "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/567433",
                "name": "Network Coverage",
                "relationshipType": "dependecy",
                "@type": "TroubleTicketRelationship"
              }
            ],
            "externalIdentifier": [
              {
                "id": "3331234",
                "owner": "BMC Remedy",
                "externalIdentifierType": "Incident",
                "@type": "ExternalIdentifier"
              }
            ],
            "@type": "TroubleTicket"
          }
        ]
      },
      "TroubleTicket_retrieve_example_response": {
        "description": "Here's an example of a request for retrieving a spesific trouble ticket with id 3180.",
        "value": {
          "id": "3180",
          "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3180",
          "creationDate": "2022-05-31T07:34:45.968Z",
          "description": "I do not accept the last VOD charge, since the movie was constantly interrupted, I had to quick watching the movie in the middle ",
          "expectedResolutionDate": "2019-06-10T07:34:45.968Z",
          "lastUpdate": "2022-05-31T07:34:45.968Z",
          "name": "complaint over last bill",
          "priority": "High",
          "requestedResolutionDate": "2022-05-31T07:34:45.968Z",
          "resolutionDate": "2022-05-31T07:34:45.968Z",
          "severity": "Minor",
          "status": "resolved",
          "statusChangeDate": "2022-05-31T07:34:45.968Z",
          "statusChangeReason": "Apply full credit",
          "ticketType": "Bill Dispute",
          "troubleTicketCharacteristic": [
            {
              "id": "1",
              "name": "disputeAmount",
              "valueType": "number",
              "value": "40",
              "@type": "NumberCharacteristic"
            },
            {
              "id": "2",
              "name": "creditAmount",
              "valueType": "number",
              "value": "40",
              "characteristicRelationship": [
                {
                  "id": "4",
                  "relationshipType": "dependency",
                  "@type": "CharacteristicRelationship"
                }
              ],
              "@type": "NubmerCharacteristic"
            },
            {
              "id": "3",
              "name": "currency",
              "valueType": "string",
              "value": "USD",
              "@type": "StringCharacteristic"
            },
            {
              "id": "4",
              "name": "creditReason",
              "valueType": "string",
              "value": "Network connectivity issues",
              "@type": "StringCharacteristic"
            }
          ],
          "attachment": [
            {
              "description": "Scanned disputed bill",
              "attachmentType": "billCopy",
              "mimeType": "image/png",
              "name": "March Bill",
              "url": "https://mycsp.com:7070/docloader?docnum=3534555",
              "@type": "AttachmentRef"
            }
          ],
          "channel": {
            "id": "8774",
            "name": "self service",
            "@type": "ChannelRef"
          },
          "note": [
            {
              "id": "77456",
              "author": "Jack Smith",
              "date": "2019-05-31T07:34:45.968Z",
              "text": "This is quite important, please approach me as soon as possible",
              "@type": "Note"
            }
          ],
          "relatedEntity": [
            {
              "role": "disputedBill",
              "@type": "RelatedEntity",
              "entity": {
                "id": "3472",
                "href": "https://mycsp.com:8080/tmf-api/customerBillManagement/v4/customerBill/8297",
                "name": "March 2019 Bill",
                "@type": "EntityRef",
                "@referredType": "CustomerBill"
              }
            }
          ],
          "relatedParty": [
            {
              "role": "member",
              "partyOrPartyRole": {
                "id": "9866",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/9866",
                "name": "Sandy Smith",
                "@type": "PartyRef",
                "@referredType": "Individual"
              },
              "@type": "RelatedPartyRefOrPartyRoleRef"
            },
            {
              "role": "reporter",
              "partyOrPartyRole": {
                "id": "9877",
                "name": "Jacob Jac Miller",
                "@type": "PartyRef",
                "@referredType": "Individual"
              },
              "@type": "RelatedPartyRefOrPartyRoleRef"
            },
            {
              "role": "customer",
              "partyOrPartyRole": {
                "id": "9176",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v4/customer/9176",
                "name": "Jack Smith",
                "@type": "PartyRoleRef",
                "@referredType": "Customer"
              },
              "@type": "RelatedPartyRefOrPartyRoleRef"
            }
          ],
          "statusChangeHistory": [
            {
              "statusChangeDate": "2022-05-28T07:34:45.968Z",
              "statusChangeReason": "trouble ticket created ",
              "status": "acknowledged",
              "@type": "StatusChange"
            },
            {
              "statusChangeDate": "2022-05-28T08:34:45.968Z",
              "statusChangeReason": "start process",
              "status": "inProgress",
              "@type": "StatusChange"
            },
            {
              "statusChangeDate": "2022-05-29T07:34:45.968Z",
              "statusChangeReason": "Need more information from the customer",
              "status": "pending",
              "@type": "StatusChange"
            },
            {
              "statusChangeDate": "2022-05-31T07:34:45.968Z",
              "statusChangeReason": "Apply full credit",
              "status": "resolved",
              "@type": "StatusChange"
            }
          ],
          "troubleTicketRelationship": [
            {
              "id": "567433",
              "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/567433",
              "name": "Network Coverage",
              "relationshipType": "dependecy",
              "@type": "TroubleTicketRelationship"
            }
          ],
          "externalIdentifier": [
            {
              "id": "3331234",
              "owner": "BMC Remedy",
              "externalIdentifierType": "Incident",
              "@type": "ExternalIdentifier"
            }
          ],
          "@schemaLocation": "https://mycsp.com:8080/tmf-api/troubleTicket/5/schema/troubleTicket.yaml",
          "@type": "TroubleTicket"
        }
      },
      "TroubleTicketSpecification_with_filter_and_fields_list_example_response": {
        "description": "Here's an example of a request for retrieving a list of trouble ticket specification(s). The given criteria is lifecycleStatus is active, and fields id,href,name,@type,lifecycleStatus",
        "value": [
          {
            "id": "453180",
            "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicketSpecification/453180",
            "name": "Billing Dispute",
            "lifecycleStatus": "active",
            "@type": "TroubleTicketSpecification"
          },
          {
            "id": "453256",
            "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicketSpecification/453256",
            "name": "Technical TroubleTicket Specification",
            "lifecycleStatus": "active",
            "@type": "TroubleTicketSpecification"
          },
          {
            "id": "454563",
            "href": "https://mycsp.com:8080/tmf-api/troubleTicket/5/troubleTicketSpecification/454563",
            "name": "Network and latency TicketSpecification",
            "lifecycleStatus": "active",
            "@type": "TroubleTicketSpecification"
          }
        ]
      },
      "TroubleTicketSpecification_list_example_response": {
        "description": "Here's an example of a request for retrieving a list of trouble ticket specification(s).       ",
        "value": [
          {
            "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicketSpecification/453180",
            "id": "453180",
            "name": "Bill Dispute",
            "lifecycleStatus": "active",
            "@type": "TroubleTicketSpecification",
            "description": "This trouble ticket specification describes the characteristic and rules to apply when creating a Trouble Ticket for Billing issues...",
            "creationDate": "2022-05-22T10:36:30.709Z",
            "lastUpdate": "2022-06-22T10:36:30.709Z",
            "relatedParty": [
              {
                "role": "approver",
                "@referredType": "Individual",
                "partyOrPartyRole": {
                  "id": "6678",
                  "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/6678",
                  "name": "Sara Smith",
                  "@type": "PartyRef",
                  "@referredType": "Individual"
                },
                "@type": "RelatedPartyRefOrPartyRoleRef"
              }
            ],
            "specCharacteristic": [
              {
                "id": "1",
                "configurable": true,
                "description": "The amount that is on dispute, it can be the entire charge amount or partial amount of the charge",
                "maxCardinality": 0,
                "minCardinality": 1,
                "name": "disputeAmount",
                "valueType": "number",
                "@type": "CharacteristicSpecification"
              },
              {
                "id": "2",
                "configurable": true,
                "description": "The positive amount to be credit, it can be equal or less than the dispute amount. In case credit is given a credit reason must be provided. In case no credit is given a reject reason must be provided",
                "maxCardinality": 0,
                "minCardinality": 1,
                "name": "creditAmount",
                "valueType": "number",
                "charSpecRelationship": [
                  {
                    "@type": "CharacteristicSpecificationRelationship",
                    "characteristicSpecificationId": "3",
                    "name": "creditReason",
                    "relationshipType": "dependency",
                    "parentSpecificationId": "25632415"
                  }
                ],
                "@type": "CharacteristicSpecification"
              },
              {
                "id": "3",
                "configurable": true,
                "description": "The reason for giving the credit, in case credit apply. In case no credit apply a reject reason must be provided",
                "maxCardinality": 0,
                "minCardinality": 1,
                "name": "creditReason",
                "valueType": "string",
                "@type": "CharacteristicSpecification"
              },
              {
                "id": "4",
                "configurable": true,
                "description": "The reason for rejecting the dispute, in case no credit apply.",
                "maxCardinality": 0,
                "minCardinality": 1,
                "name": "rejectReason",
                "valueType": "string",
                "@type": "CharacteristicSpecification"
              },
              {
                "id": "5",
                "configurable": true,
                "description": "Currency (ISO4217 norm uses 3 letters to define the currency)",
                "maxCardinality": 0,
                "minCardinality": 1,
                "name": "currency",
                "valueType": "string",
                "@type": "CharacteristicSpecification"
              }
            ],
            "validFor": {
              "startDateTime": "2023-06-22T23:20:50.52Z"
            },
            "version": "1"
          },
          {
            "id": "453256",
            "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicketSpecification/453256",
            "name": "Commerce Issue",
            "lifecycleStatus": "active",
            "@type": "TroubleTicketSpecification",
            "description": "This trouble ticket specification describes the characteristic and rules to apply when creating a Trouble Ticket for Commerce issues...",
            "creationDate": "2023-06-22T10:36:30.709Z",
            "lastUpdate": "2023-06-23T10:36:30.709Z",
            "relatedParty": [
              {
                "role": "approver",
                "@referredType": "Individual",
                "partyOrPartyRole": {
                  "id": "6678",
                  "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/6678",
                  "name": "Sara Smith",
                  "@type": "PartyRef",
                  "@referredType": "Individual"
                },
                "@type": "RelatedPartyRefOrPartyRoleRef"
              }
            ],
            "specCharacteristic": [
              {
                "id": "1",
                "configurable": true,
                "description": "The Order reference nubmer that has an issue",
                "maxCardinality": 0,
                "minCardinality": 1,
                "name": "orderReferenceNumber",
                "valueType": "string",
                "@type": "CharacteristicSpecification"
              },
              {
                "id": "2",
                "configurable": true,
                "description": "The creation date of the order that has an issue.",
                "maxCardinality": 0,
                "minCardinality": 0,
                "name": "orderCreationDate",
                "valueType": "string",
                "@type": "CharacteristicSpecification"
              }
            ],
            "validFor": {
              "startDateTime": "2023-06-23T23:20:50.52Z"
            },
            "version": "1"
          }
        ]
      },
      "TroubleTicketSpecification_retrieve_example_response": {
        "description": "Here's an example of a request for retrieving a spesific trouble ticket specification.",
        "value": {
          "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicketSpecification/25632415",
          "id": "25632415",
          "name": "Bill Dispute",
          "@type": "TroubleTicketSpecification",
          "description": "This trouble ticket specification describes the characteristic and rules to apply when creating a Trouble Ticket...",
          "creationDate": "2022-05-22T10:36:30.709Z",
          "lastUpdate": "2022-06-22T10:36:30.709Z",
          "relatedParty": [
            {
              "role": "approver",
              "@referredType": "Individual",
              "partyOrPartyRole": {
                "id": "6678",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/6678",
                "name": "Sara Smith",
                "@type": "PartyRef",
                "@referredType": "Individual"
              },
              "@type": "RelatedPartyRefOrPartyRoleRef"
            }
          ],
          "lifecycleStatus": "active",
          "specCharacteristic": [
            {
              "id": "1",
              "configurable": true,
              "description": "The amount that is on dispute, it can be the entire charge amount or partial amount of the charge",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "disputeAmount",
              "valueType": "number",
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "2",
              "configurable": true,
              "description": "The positive amount to be credit, it can be equal or less than the dispute amount. In case credit is given a credit reason must be provided. In case no credit is given a reject reason must be provided",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "creditAmount",
              "valueType": "number",
              "charSpecRelationship": [
                {
                  "@type": "CharacteristicSpecificationRelationship",
                  "characteristicSpecificationId": "3",
                  "name": "creditReason",
                  "relationshipType": "dependency",
                  "parentSpecificationId": "25632415"
                }
              ],
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "3",
              "configurable": true,
              "description": "The reason for giving the credit, in case credit apply. In case no credit apply a reject reason must be provided",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "creditReason",
              "valueType": "string",
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "4",
              "configurable": true,
              "description": "The reason for rejecting the dispute, in case no credit apply.",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "rejectReason",
              "valueType": "string",
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "5",
              "configurable": true,
              "description": "Currency (ISO4217 norm uses 3 letters to define the currency)",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "currency",
              "valueType": "string",
              "@type": "CharacteristicSpecification"
            }
          ],
          "validFor": {
            "startDateTime": "2022-06-22T23:20:50.52Z"
          },
          "version": "1"
        }
      },
      "TroubleTicket_create_example_request": {
        "description": "POST trouble ticket request example - only a subset of trouble ticket attributes are used in this example",
        "value": {
          "name": "complaint over last bill",
          "description": "I do not accept the last VOD charge, since the movie was constantly interrupted, I had to quick watching the movie in the middle ",
          "severity": "Major",
          "status": "inProgress",
          "ticketType": "Bill Dispute",
          "expectedResolutionDate": "2019-06-10T07:34:45.968Z",
          "requestedResolutionDate": "2022-05-31T07:34:45.968Z",
          "attachment": [
            {
              "id": "34345",
              "description": "Scanned disputed bill",
              "attachmentType": "billCopy",
              "mimeType": "image/png",
              "name": "March Bill",
              "url": "https://mycsp.com:7070/docloader?docnum=3534555",
              "@type": "AttachmentRef"
            }
          ],
          "channel": {
            "id": "8774",
            "name": "self service",
            "@type": "ChannelRef"
          },
          "note": [
            {
              "id": "77456",
              "author": "Jack Smith",
              "date": "2022-05-31T07:34:45.968Z",
              "text": "This is quite important, please aproch me as soon as posible",
              "@type": "Note"
            }
          ],
          "relatedEntity": [
            {
              "role": "disputedBill",
              "@type": "RelatedEntity",
              "entity": {
                "id": "3472",
                "href": "https://mycsp.com:8080/tmf-api/customerBillManagement/v5/customerBill/8297",
                "name": "March 2019 Bill",
                "@type": "EntityRef",
                "@referredType": "CustomerBill"
              }
            }
          ],
          "relatedParty": [
            {
              "role": "member",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "partyOrPartyRole": {
                "id": "9866",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/9866",
                "name": "Sandy Smith",
                "@type": "PartyRef",
                "@referredType": "Individual"
              }
            },
            {
              "role": "reporter",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "partyOrPartyRole": {
                "id": "9867",
                "name": "Jacob Jac Miller",
                "@type": "PartyRef",
                "@referredType": "Individual"
              }
            },
            {
              "role": "customer",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "partyOrPartyRole": {
                "id": "9176",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v4/customer/9176",
                "name": "Jack Smith",
                "@type": "PartyRoleRef",
                "@referredType": "Customer"
              }
            }
          ],
          "@type": "TroubleTicket"
        }
      },
      "TroubleTicket_create_example_response": {
        "description": "POST Trouble Ticket response description.",
        "value": {
          "id": "3180",
          "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v4/troubleTicket/3180",
          "creationDate": "2022-05-31T07:34:45.968Z",
          "description": "I do not accept the last VOD charge, since the movie was constantly interrupted, I had to quick watching the movie in the middle ",
          "expectedResolutionDate": "2019-06-10T07:34:45.968Z",
          "lastUpdate": "2022-05-31T07:34:45.968Z",
          "name": "complaint over last bill",
          "priority": "High",
          "requestedResolutionDate": "2019-05-31T07:34:45.968Z",
          "severity": "Major",
          "status": "pending",
          "statusChangeDate": "2019-05-31T07:34:45.968Z",
          "statusChangeReason": "Need more information from the customer",
          "ticketType": "Bill Dispute",
          "attachment": [
            {
              "description": "Scanned disputed bill",
              "attachmentType": "billCopy",
              "mimeType": "image/png",
              "name": "March Bill",
              "url": "https://mycsp.com:7070/docloader?docnum=3534555",
              "@type": "AttachmentRef"
            }
          ],
          "channel": {
            "id": "8774",
            "name": "self service",
            "@type": "ChannelRef"
          },
          "note": [
            {
              "id": "77456",
              "author": "Jack Smith",
              "date": "2019-05-31T07:34:45.968Z",
              "text": "This is quite important, please approach  me as soon as possible",
              "@type": "Note"
            }
          ],
          "relatedEntity": [
            {
              "role": "disputedBill",
              "@type": "RelatedEntity",
              "entity": {
                "id": "3472",
                "href": "https://mycsp.com:8080/tmf-api/customerBillManagement/v5/customerBill/8297",
                "name": "March 2019 Bill",
                "@type": "EntityRef",
                "@referredType": "CustomerBill"
              }
            }
          ],
          "relatedParty": [
            {
              "role": "member",
              "partyOrPartyRole": {
                "id": "9866",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/9866",
                "name": "Sandy Smith",
                "@type": "PartyRef",
                "@referredType": "Individual"
              },
              "@type": "RelatedPartyRefOrPartyRoleRef"
            },
            {
              "role": "reporter",
              "partyOrPartyRole": {
                "id": "9877",
                "name": "Jacob Jac Miller",
                "@type": "PartyRef",
                "@referredType": "Individual"
              },
              "@type": "RelatedPartyRefOrPartyRoleRef"
            },
            {
              "role": "customer",
              "partyOrPartyRole": {
                "id": "9176",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v4/customer/9176",
                "name": "Jack Smith",
                "@type": "PartyRoleRef",
                "@referredType": "Customer"
              },
              "@type": "RelatedPartyRefOrPartyRoleRef"
            }
          ],
          "statusChangeHistory": [
            {
              "statusChangeDate": "2019-05-31T07:34:45.968Z",
              "statusChangeReason": "Need more information from the customer",
              "status": "pending",
              "@type": "StatusChange"
            }
          ],
          "troubleTicketRelationship": [
            {
              "id": "567433",
              "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/567433",
              "name": "Network Coverage",
              "relationshipType": "dependecy",
              "@type": "TroubleTicketRelationship"
            }
          ],
          "@schemaLocation": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/schema/troubleTicket.yaml",
          "@type": "TroubleTicket"
        }
      },
      "TroubleTicketSpecification_create_example_request": {
        "description": "POST trouble ticket request example - only a subset of trouble ticket specification attributes are used in this example",
        "value": {
          "@type": "TroubleTicketSpecification",
          "description": "This trouble ticket specification describes the characteristic and rules to apply when creating a Trouble Ticket...",
          "name": "Bill Dispute",
          "relatedParty": [
            {
              "role": "approver",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "@referredType": "Individual",
              "partyOrPartyRole": {
                "id": "6678",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/6678",
                "name": "Sara Smith",
                "@type": "PartyRef",
                "@referredType": "Individual"
              }
            }
          ],
          "specCharacteristic": [
            {
              "id": "1",
              "configurable": true,
              "description": "The amount that is on dispute, it can be the entire charge amount or partial amount of the charge",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "disputeAmount",
              "valueType": "number",
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "2",
              "configurable": true,
              "description": "The positive amount to be credit, it can be equal or less than the dispute amount. In case credit is given a credit reason must be provided. In case no credit is given a reject reason must be provided",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "creditAmount",
              "valueType": "number",
              "@type": "CharacteristicSpecification",
              "charSpecRelationship": [
                {
                  "@type": "CharacteristicSpecRelationship",
                  "@baseType": "CharacteristicSpecRelationship",
                  "@schemaLocation": "/someUri",
                  "characteristicSpecificationId": "3",
                  "name": "creditReason",
                  "relationshipType": "dependency",
                  "parentSpecificationId": "25632415"
                }
              ]
            },
            {
              "id": "3",
              "configurable": true,
              "description": "The reason for giving the credit, in case credit apply. In case no credit apply a reject reason must be provided",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "creditReason",
              "valueType": "string",
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "4",
              "configurable": true,
              "description": "The reason for rejecting the dispute, in case no credit apply.",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "rejectReason",
              "valueType": "string",
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "5",
              "configurable": true,
              "description": "Currency (ISO4217 norm uses 3 letters to define the currency)",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "currency",
              "valueType": "string",
              "@type": "CharacteristicSpecification"
            }
          ],
          "validFor": {
            "startDateTime": "2022-06-22T23:20:50.52Z"
          },
          "version": "1"
        }
      },
      "TroubleTicketSpecification_create_example_response": {
        "description": "POST Trouble Ticket Specification response description.",
        "value": {
          "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicketSpecification/25632415",
          "id": "25632415",
          "@type": "TroubleTicketSpecification",
          "description": "This trouble ticket specification describes the characteristic and rules to apply when creating a Trouble Ticket...",
          "creationDate": "2022-05-22T10:36:30.709Z",
          "lastUpdate": "2022-06-22T10:36:30.709Z",
          "name": "Bill Dispute",
          "relatedParty": [
            {
              "role": "approver",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "@referredType": "Individual",
              "partyOrPartyRole": {
                "id": "6678",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/6678",
                "name": "Sara Smith",
                "@type": "PartyRef",
                "@referredType": "Individual"
              }
            }
          ],
          "lifecycleStatus": "inDesgin",
          "specCharacteristic": [
            {
              "id": "1",
              "configurable": true,
              "description": "The amount that is on dispute, it can be the entire charge amount or partial amount of the charge",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "disputeAmount",
              "valueType": "number",
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "2",
              "configurable": true,
              "description": "The positive amount to be credit, it can be equal or less than the dispute amount. In case credit is given a credit reason must be provided. In case no credit is given a reject reason must be provided",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "creditAmount",
              "valueType": "number",
              "@type": "CharacteristicSpecification",
              "charSpecRelationship": [
                {
                  "@type": "CharacteristicSpecificationRelationship",
                  "@schemaLocation": "string",
                  "characteristicSpecificationId": "3",
                  "name": "creditReason",
                  "relationshipType": "dependency",
                  "parentSpecificationId": "25632415"
                }
              ]
            },
            {
              "id": "3",
              "configurable": true,
              "description": "The reason for giving the credit, in case credit apply. In case no credit apply a reject reason must be provided",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "creditReason",
              "valueType": "string",
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "4",
              "configurable": true,
              "description": "The reason for rejecting the dispute, in case no credit apply.",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "rejectReason",
              "valueType": "string",
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "5",
              "configurable": true,
              "description": "Currency (ISO4217 norm uses 3 letters to define the currency)",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "currency",
              "valueType": "string",
              "@type": "CharacteristicSpecification"
            }
          ],
          "validFor": {
            "startDateTime": "2022-06-22T23:20:50.52Z"
          },
          "version": "1"
        }
      },
      "TroubleTicket_partialupdate_example_application_json_request": {
        "description": "Here's an example of a request for updating a trouble ticket - set status to resolved. This example illustrating patch application/json",
        "value": {
          "@type": "TroubleTicket",
          "status": "resolved",
          "statusChangeReason": "Give credit and resent bill to customer"
        }
      },
      "TroubleTicket_partialupdate_example_application_json_response": {
        "description": "Response message",
        "value": {
          "id": "3180",
          "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3180",
          "creationDate": "2022-05-31T07:34:45.968Z",
          "description": "I do not accept the last VOD charge, since the movie was constantly interrupted, I had to quick watching the movie in the middle ",
          "expectedResolutionDate": "2019-06-10T07:34:45.968Z",
          "lastUpdate": "2022-06-01T07:34:45.968Z",
          "name": "complaint over last bill",
          "priority": "High",
          "requestedResDateolutionDate": "2022-05-31T07:34:45.968Z",
          "resolutionDate": "2022-06-01T07:34:45.968Z",
          "severity": "Major",
          "status": "resolved",
          "statusChangeDate": "2022-06-01T07:34:45.968Z",
          "statusChangeReason": "Give credit and resent bill to customer",
          "ticketType": "Bill Dispute",
          "attachment": [
            {
              "description": "Scanned disputed bill",
              "attachmentType": "billCopy",
              "mimeType": "image/png",
              "name": "March Bill",
              "url": "https://mycsp.com:7070/docloader?docnum=3534555",
              "@type": "AttachmentRef"
            }
          ],
          "channel": {
            "id": "8774",
            "name": "self service",
            "@type": "ChannelRef"
          },
          "note": [
            {
              "id": "77456",
              "author": "Jack Smith",
              "date": "2022-05-31T07:34:45.968Z",
              "text": "This is quite important, please approach me as soon as possible",
              "@type": "Note"
            }
          ],
          "relatedEntity": [
            {
              "id": "3472",
              "href": "https://mycsp.com:8080/tmf-api/customerBillManagement/v5/customerBill/8297",
              "name": "March 2022 Bill",
              "role": "disputedBill",
              "@type": "RelatedEntity",
              "@referredType": "CustomerBill"
            }
          ],
          "relatedParty": [
            {
              "id": "9866",
              "href": "https://mycsp.com:8080/tmf-api/partyManagement/5/individual/9866",
              "name": "Sandy Smith",
              "role": "member",
              "@type": "PartyRef",
              "@referredType": "Individual"
            },
            {
              "id": "9176",
              "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/customer/9176",
              "name": "Jack Smith",
              "role": "customer",
              "@type": "PartyRoleRef",
              "@referredType": "Customer"
            }
          ],
          "statusChangeHistory": [
            {
              "statusChangeDate": "2022-05-31T07:34:45.968Z",
              "statusChangeReason": "Need more information from the customer",
              "status": "pending",
              "@type": "StatusChange"
            },
            {
              "changeDate": "2022-06-01T07:34:45.968Z",
              "changeReason": "Give credit and resent bill to customer",
              "status": "resolved",
              "@type": "StatusChange"
            }
          ],
          "troubleTicketRelationship": [
            {
              "id": "567433",
              "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/567433",
              "name": "Network Coverage",
              "relationshipType": "dependecy",
              "@type": "TroubleTicketRelationship"
            }
          ],
          "@schemaLocation": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/schema/troubleTicket.yml",
          "@type": "TroubleTicket"
        }
      },
      "TroubleTicket_partialupdate_example_application_merge_json_request": {
        "description": "Here's an example of a request for updating a trouble ticket - set status to resolved. This example illustrating patch merge, When PATCH is implemeted merge syntaxt is mandatory",
        "value": {
          "@type": "TroubleTicket",
          "status": "resolved",
          "statusChangeReason": "Give credit and resent bill to customer"
        }
      },
      "TroubleTicket_partialupdate_example_application_merge_json_response": {
        "description": "Response message",
        "value": {
          "id": "3180",
          "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3180",
          "creationDate": "2022-05-31T07:34:45.968Z",
          "description": "I do not accept the last VOD charge, since the movie was constantly interrupted, I had to quick watching the movie in the middle ",
          "expectedResolutionDate": "2019-06-10T07:34:45.968Z",
          "lastUpdate": "2022-06-01T07:34:45.968Z",
          "name": "complaint over last bill",
          "priority": "High",
          "requestedResDateolutionDate": "2022-05-31T07:34:45.968Z",
          "resolutionDate": "2022-06-01T07:34:45.968Z",
          "severity": "Major",
          "status": "resolved",
          "statusChangeDate": "2022-06-01T07:34:45.968Z",
          "statusChangeReason": "Give credit and resent bill to customer",
          "ticketType": "Bill Dispute",
          "attachment": [
            {
              "description": "Scanned disputed bill",
              "attachmentType": "billCopy",
              "mimeType": "image/png",
              "name": "March Bill",
              "url": "https://mycsp.com:7070/docloader?docnum=3534555",
              "@type": "AttachmentRef"
            }
          ],
          "channel": {
            "id": "8774",
            "name": "self service",
            "@type": "ChannelRef"
          },
          "note": [
            {
              "id": "77456",
              "author": "Jack Smith",
              "date": "2022-05-31T07:34:45.968Z",
              "text": "This is quite important, please approach me as soon as possible",
              "@type": "Note"
            }
          ],
          "relatedEntity": [
            {
              "id": "3472",
              "href": "https://mycsp.com:8080/tmf-api/customerBillManagement/v5/customerBill/8297",
              "name": "March 2022 Bill",
              "role": "disputedBill",
              "@type": "RelatedEntity",
              "@referredType": "CustomerBill"
            }
          ],
          "relatedParty": [
            {
              "id": "9866",
              "href": "https://mycsp.com:8080/tmf-api/partyManagement/5/individual/9866",
              "name": "Sandy Smith",
              "role": "member",
              "@type": "PartyRef",
              "@referredType": "Individual"
            },
            {
              "id": "9176",
              "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/customer/9176",
              "name": "Jack Smith",
              "role": "customer",
              "@type": "PartyRoleRef",
              "@referredType": "Customer"
            }
          ],
          "statusChangeHistory": [
            {
              "statusChangeDate": "2022-05-31T07:34:45.968Z",
              "statusChangeReason": "Need more information from the customer",
              "status": "pending",
              "@type": "StatusChange"
            },
            {
              "changeDate": "2022-06-01T07:34:45.968Z",
              "changeReason": "Give credit and resent bill to customer",
              "status": "resolved",
              "@type": "StatusChange"
            }
          ],
          "troubleTicketRelationship": [
            {
              "id": "567433",
              "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/567433",
              "name": "Network Coverage",
              "relationshipType": "dependecy",
              "@type": "TroubleTicketRelationship"
            }
          ],
          "@schemaLocation": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/schema/troubleTicket.yml",
          "@type": "TroubleTicket"
        }
      },
      "TroubleTicket_partialupdate_example_application_json_patch_request": {
        "description": "Here's an example of a request for updating a trouble ticket - set severity to Minor and add new Note. This example illustrating patch json",
        "value": [
          {
            "op": "replace",
            "path": "/severity",
            "value": "Minor"
          },
          {
            "op": "add",
            "path": "/note",
            "value": {
              "@type": "Note",
              "id": "77456",
              "author": "Jack Smith",
              "text": "This is quite important, please approach me as soon as possible"
            }
          }
        ]
      },
      "TroubleTicket_partialupdate_example_application_json_patch_response": {
        "description": "Response message",
        "value": {
          "id": "3180",
          "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3180",
          "creationDate": "2022-05-31T07:34:45.968Z",
          "description": "I do not accept the last VOD charge, since the movie was constantly interrupted, I had to quick watching the movie in the middle ",
          "expectedResolutionDate": "2019-06-10T07:34:45.968Z",
          "lastUpdate": "2022-05-31T07:34:45.968Z",
          "name": "complaint over last bill",
          "priority": "Medium",
          "requestedResolutionDate": "2022-05-31T07:34:45.968Z",
          "severity": "Minor",
          "status": "pending",
          "statusChangeDate": "2022-05-31T07:34:45.968Z",
          "statusChangeReason": "Need more information from the customer",
          "ticketType": "Bill Dispute",
          "attachment": [
            {
              "description": "Scanned disputed bill",
              "attachmentType": "billCopy",
              "mimeType": "image/png",
              "name": "March Bill",
              "url": "https://mycsp.com:7070/docloader?docnum=3534555",
              "@type": "AttachmentRef"
            }
          ],
          "channel": {
            "id": "8774",
            "name": "self service",
            "@type": "ChannelRef"
          },
          "note": [
            {
              "id": "77456",
              "author": "Jack Smith",
              "date": "2019-05-31T07:34:45.968Z",
              "text": "This is quite important, please approach me as soon as possible",
              "@type": "Note"
            }
          ],
          "relatedEntity": [
            {
              "id": "3472",
              "href": "https://mycsp.com:8080/tmf-api/customerBillManagement/v5/customerBill/8297",
              "name": "March 2019 Bill",
              "role": "disputedBill",
              "@type": "RelatedEntity",
              "@referredType": "CustomerBill"
            }
          ],
          "relatedParty": [
            {
              "id": "9866",
              "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/9866",
              "name": "Sandy Smith",
              "role": "member",
              "@type": "PartyRef",
              "@referredType": "Individual"
            },
            {
              "id": "9176",
              "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/customer/9176",
              "name": "Jack Smith",
              "role": "customer",
              "@type": "PartyRoleRef",
              "@referredType": "Customer"
            }
          ],
          "statusChangeHistory": [
            {
              "statusChangeDate": "2019-05-31T07:34:45.968Z",
              "statusChangeReason": "Need more information from the customer",
              "status": "pending",
              "@type": "StatusChange"
            }
          ],
          "troubleTicketRelationship": [
            {
              "TroubleTicket": {
                "id": "567433",
                "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/567433",
                "name": "Network Coverage",
                "relationshipType": "dependecy",
                "@type": "TroubleTicketRelationship"
              }
            }
          ],
          "@schemaLocation": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/schema/troubleTicket.yml",
          "@type": "TroubleTicket"
        }
      },
      "TroubleTicket_partialupdate_example_application_json_patch_query_request": {
        "description": "Here's an example of a request for updating a trouble ticket - set severity to Minor and update a specific Nate. This example illustrating patch json",
        "value": [
          {
            "op": "replace",
            "path": "/sererity",
            "value": "Minor"
          },
          {
            "op": "replace",
            "path": "/note?id=77456",
            "value": {
              "author": "Jack Smith",
              "text": "Please approach me as soon as possible. Thanks in advance"
            }
          }
        ]
      },
      "TroubleTicket_partialupdate_example_application_json_patch_query_response": {
        "description": "Response message",
        "value": {
          "id": "3180",
          "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3180",
          "creationDate": "2022-05-31T07:34:45.968Z",
          "description": "I do not accept the last VOD charge, since the movie was constantly interrupted, I had to quick watching the movie in the middle ",
          "expectedResolutionDate": "2019-06-10T07:34:45.968Z",
          "lastUpdate": "2022-05-31T07:34:45.968Z",
          "name": "complaint over last bill",
          "priority": "High",
          "requestedResolutionDate": "2022-05-31T07:34:45.968Z",
          "severity": "Minor",
          "status": "pending",
          "statusChangeDate": "2022-05-31T07:34:45.968Z",
          "statusChangeReason": "Need more information from the customer",
          "ticketType": "Bill Dispute",
          "attachment": [
            {
              "description": "Scanned disputed bill",
              "attachmentType": "billCopy",
              "mimeType": "image/png",
              "name": "March Bill",
              "url": "https://mycsp.com:7070/docloader?docnum=3534555",
              "@type": "AttachmentRef"
            }
          ],
          "channel": {
            "id": "8774",
            "name": "self service",
            "@type": "ChannelRef"
          },
          "note": [
            {
              "id": "77456",
              "author": "Jack Smith",
              "date": "2022-05-31T07:34:45.968Z",
              "text": "Please approach me as soon as possible. Thanks in advance",
              "@type": "Note"
            }
          ],
          "relatedEntity": [
            {
              "id": "3472",
              "href": "https://mycsp.com:8080/tmf-api/customerBillManagement/v5/customerBill/8297",
              "name": "March 2022 Bill",
              "role": "disputedBill",
              "@type": "RelatedEntity",
              "@referredType": "CustomerBill"
            }
          ],
          "relatedParty": [
            {
              "id": "9866",
              "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/9866",
              "name": "Sandy Smith",
              "role": "member",
              "@type": "PartyRef",
              "@referredType": "Individual"
            },
            {
              "id": "9176",
              "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/customer/9176",
              "name": "Jack Smith",
              "role": "customer",
              "@type": "PartyRoleRef",
              "@referredType": "Customer"
            }
          ],
          "statusChangeHistory": [
            {
              "statusChangeDate": "2022-05-31T07:34:45.968Z",
              "statusChangeReason": "Need more information from the customer",
              "status": "pending",
              "@type": "StatusChange"
            }
          ],
          "troubleTicketRelationship": [
            {
              "TroubleTicket": {
                "id": "567433",
                "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/567433",
                "name": "Network Coverage",
                "relationshipType": "dependecy",
                "@type": "TroubleTicketRelationship"
              }
            }
          ],
          "@schemaLocation": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/schema/troubleTicket.yml",
          "@type": "TroubleTicket"
        }
      },
      "TroubleTicketSpecification_partialupdate_application_json_request": {
        "description": "Here's an example of a request for updating a trouble ticket - set status to active and update description. This example illustrating patch merge, When PATCH is implemeted merge syntaxt is mandatory",
        "value": {
          "lifecycleStatus": "active",
          "description": "Bill Dispute Specification",
          "@type": "TroubleTicketSpecification"
        }
      },
      "TroubleTicketSpecification_partialupdate_application_json_response": {
        "description": "Response message",
        "value": {
          "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicketSpecification/25632415",
          "id": "25632415",
          "@type": "TroubleTicketSpecification",
          "description": "This trouble ticket specification describes the characteristic and rules to apply when creating a Trouble Ticket...",
          "creationDate": "2022-05-22T10:36:30.709Z",
          "lastUpdate": "2022-06-22T10:36:30.709Z",
          "name": "Bill Dispute Specification",
          "relatedParty": [
            {
              "role": "approver",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "@referredType": "Individual",
              "partyOrPartyRole": {
                "id": "6678",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/6678",
                "name": "Sara Smith",
                "@type": "PartyRef",
                "@referredType": "Individual"
              }
            }
          ],
          "lifecycleStatus": "active",
          "specCharacteristic": [
            {
              "id": "1",
              "name": "disputeAmount",
              "valueType": "number",
              "configurable": true,
              "description": "The amount that is on dispute, it can be the entire charge amount or partial amount of the charge",
              "maxCardinality": 0,
              "minCardinality": 1,
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "2",
              "name": "creditAmount",
              "valueType": "number",
              "configurable": true,
              "description": "The positive amount to be credit, it can be equal or less than the dispute amount. In case credit is given a credit reason must be provided. In case no credit is given a reject reason must be provided",
              "maxCardinality": 0,
              "minCardinality": 1,
              "charSpecRelationship": [
                {
                  "@type": "CharacteristicSpecificationRelationship",
                  "@baseType": "string",
                  "@schemaLocation": "string",
                  "characteristicSpecificationId": "3",
                  "name": "creditReason",
                  "relationshipType": "dependency",
                  "parentSpecificationId": "25632415"
                }
              ],
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "3",
              "name": "creditReason",
              "valueType": "string",
              "configurable": true,
              "description": "The reason for giving the credit, in case credit apply. In case no credit apply a reject reason must be provided",
              "maxCardinality": 0,
              "minCardinality": 1,
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "4",
              "name": "rejectReason",
              "valueType": "string",
              "configurable": true,
              "description": "The reason for rejecting the dispute, in case no credit apply.",
              "maxCardinality": 0,
              "minCardinality": 1,
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "5",
              "name": "currency",
              "valueType": "string",
              "configurable": true,
              "description": "Currency (ISO4217 norm uses 3 letters to define the currency)",
              "maxCardinality": 0,
              "minCardinality": 1,
              "@type": "CharacteristicSpecification"
            }
          ],
          "validFor": {
            "startDateTime": "2022-06-22T23:20:50.52Z"
          },
          "version": "1"
        }
      },
      "TroubleTicketSpecification_partialupdate_application_merge_json_request": {
        "description": "Here's an example of a request for updating a trouble ticket - set status to active and update description. This example illustrating patch merge, When PATCH is implemeted merge syntaxt is mandatory",
        "value": {
          "lifecycleStatus": "active",
          "description": "Bill Dispute Specification",
          "@type": "TroubleTicketSpecification"
        }
      },
      "TroubleTicketSpecification_partialupdate_application_merge_json_response": {
        "description": "Response message",
        "value": {
          "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicketSpecification/25632415",
          "id": "25632415",
          "@type": "TroubleTicketSpecification",
          "description": "This trouble ticket specification describes the characteristic and rules to apply when creating a Trouble Ticket...",
          "creationDate": "2022-05-22T10:36:30.709Z",
          "lastUpdate": "2022-06-22T10:36:30.709Z",
          "name": "Bill Dispute Specification",
          "relatedParty": [
            {
              "role": "approver",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "@referredType": "Individual",
              "partyOrPartyRole": {
                "id": "6678",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/6678",
                "name": "Sara Smith",
                "@type": "PartyRef",
                "@referredType": "Individual"
              }
            }
          ],
          "lifecycleStatus": "active",
          "specCharacteristic": [
            {
              "id": "1",
              "name": "disputeAmount",
              "valueType": "number",
              "configurable": true,
              "description": "The amount that is on dispute, it can be the entire charge amount or partial amount of the charge",
              "maxCardinality": 0,
              "minCardinality": 1,
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "2",
              "name": "creditAmount",
              "valueType": "number",
              "configurable": true,
              "description": "The positive amount to be credit, it can be equal or less than the dispute amount. In case credit is given a credit reason must be provided. In case no credit is given a reject reason must be provided",
              "maxCardinality": 0,
              "minCardinality": 1,
              "charSpecRelationship": [
                {
                  "@type": "CharacteristicSpecificationRelationship",
                  "@baseType": "string",
                  "@schemaLocation": "string",
                  "characteristicSpecificationId": "3",
                  "name": "creditReason",
                  "relationshipType": "dependency",
                  "parentSpecificationId": "25632415"
                }
              ],
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "3",
              "name": "creditReason",
              "valueType": "string",
              "configurable": true,
              "description": "The reason for giving the credit, in case credit apply. In case no credit apply a reject reason must be provided",
              "maxCardinality": 0,
              "minCardinality": 1,
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "4",
              "name": "rejectReason",
              "valueType": "string",
              "configurable": true,
              "description": "The reason for rejecting the dispute, in case no credit apply.",
              "maxCardinality": 0,
              "minCardinality": 1,
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "5",
              "name": "currency",
              "valueType": "string",
              "configurable": true,
              "description": "Currency (ISO4217 norm uses 3 letters to define the currency)",
              "maxCardinality": 0,
              "minCardinality": 1,
              "@type": "CharacteristicSpecification"
            }
          ],
          "validFor": {
            "startDateTime": "2022-06-22T23:20:50.52Z"
          },
          "version": "1"
        }
      },
      "TroubleTicketSpecification_partialupdate_application_json_patch_request": {
        "description": "Here's an example of a request for updating a trouble ticket spesification - set status to active and update description. This example illustrating patch json",
        "value": [
          {
            "op": "replace",
            "path": "/lifecycleStatus",
            "value": "active"
          },
          {
            "op": "replace",
            "path": "/name",
            "value": "Bill Dispute Specification"
          }
        ]
      },
      "TroubleTicketSpecification_partialupdate_application_json_patch_response": {
        "description": "Response message",
        "value": {
          "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicketSpecification/25632415",
          "id": "25632415",
          "@type": "TroubleTicketSpecification",
          "description": "This trouble ticket specification describes the characteristic and rules to apply when creating a Trouble Ticket...",
          "creationDate": "2022-05-22T10:36:30.709Z",
          "lastUpdate": "2022-06-22T10:36:30.709Z",
          "name": "Bill Dispute Specification",
          "relatedParty": [
            {
              "role": "approver",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "@referredType": "Individual",
              "partyOrPartyRole": {
                "id": "6678",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/6678",
                "name": "Sara Smith",
                "@type": "PartyRef",
                "@referredType": "Individual"
              }
            }
          ],
          "lifecycleStatus": "active",
          "specCharacteristic": [
            {
              "id": "1",
              "configurable": true,
              "description": "The amount that is on dispute, it can be the entire charge amount or partial amount of the charge",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "disputeAmount",
              "valueType": "number",
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "2",
              "configurable": true,
              "description": "The positive amount to be credit, it can be equal or less than the dispute amount. In case credit is given a credit reason must be provided. In case no credit is given a reject reason must be provided",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "creditAmount",
              "valueType": "number",
              "charSpecRelationship": [
                {
                  "@type": "CharacteristicSpecificationRelationship",
                  "@schemaLocation": "string",
                  "characteristicSpecificationId": "3",
                  "name": "creditReason",
                  "relationshipType": "dependency",
                  "parentSpecificationId": "25632415"
                }
              ]
            },
            {
              "id": "3",
              "configurable": true,
              "description": "The reason for giving the credit, in case credit apply. In case no credit apply a reject reason must be provided",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "creditReason",
              "valueType": "string"
            },
            {
              "id": "4",
              "configurable": true,
              "description": "The reason for rejecting the dispute, in case no credit apply.",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "rejectReason",
              "valueType": "string"
            },
            {
              "id": "5",
              "configurable": true,
              "description": "Currency (ISO4217 norm uses 3 letters to define the currency)",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "currency",
              "valueType": "string"
            }
          ],
          "validFor": {
            "startDateTime": "2022-06-22T23:20:50.52Z"
          },
          "version": "1"
        }
      },
      "TroubleTicketSpecification_partialupdate_application_json_patch_query_request": {
        "description": "Here's an example of a request for updating a trouble ticket - set characteristic id=5 to readonly. This example illustrating patch query json",
        "value": [
          {
            "op": "replace",
            "path": "/specCharacteristic?id=5",
            "value": {
              "configurable": false
            }
          }
        ]
      },
      "TroubleTicketSpecification_partialupdate_application_json_patch_query_response": {
        "description": "Response message",
        "value": {
          "href": "https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicketSpecification/25632415",
          "id": "25632415",
          "@type": "TroubleTicketSpecification",
          "description": "This trouble ticket specification describes the characteristic and rules to apply when creating a Trouble Ticket...",
          "creationDate": "2022-05-22T10:36:30.709Z",
          "lastUpdate": "2022-06-22T10:36:30.709Z",
          "name": "Bill Dispute Specification",
          "relatedParty": [
            {
              "role": "approver",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "@referredType": "Individual",
              "partyOrPartyRole": {
                "id": "6678",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/6678",
                "name": "Sara Smith",
                "@type": "PartyRef",
                "@referredType": "Individual"
              }
            }
          ],
          "lifecycleStatus": "active",
          "specCharacteristic": [
            {
              "id": "1",
              "configurable": true,
              "description": "The amount that is on dispute, it can be the entire charge amount or partial amount of the charge",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "disputeAmount",
              "valueType": "number",
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "2",
              "configurable": true,
              "description": "The positive amount to be credit, it can be equal or less than the dispute amount. In case credit is given a credit reason must be provided. In case no credit is given a reject reason must be provided",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "creditAmount",
              "valueType": "number",
              "charSpecRelationship": [
                {
                  "@type": "string",
                  "@baseType": "string",
                  "@schemaLocation": "string",
                  "characteristicSpecificationId": "3",
                  "name": "creditReason",
                  "relationshipType": "dependency",
                  "parentSpecificationId": "25632415"
                }
              ],
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "3",
              "configurable": true,
              "description": "The reason for giving the credit, in case credit apply. In case no credit apply a reject reason must be provided",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "creditReason",
              "valueType": "string",
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "4",
              "configurable": true,
              "description": "The reason for rejecting the dispute, in case no credit apply.",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "rejectReason",
              "valueType": "string",
              "@type": "CharacteristicSpecification"
            },
            {
              "id": "5",
              "configurable": false,
              "description": "Currency (ISO4217 norm uses 3 letters to define the currency)",
              "maxCardinality": 0,
              "minCardinality": 1,
              "name": "currency",
              "valueType": "string",
              "@type": "CharacteristicSpecification"
            }
          ],
          "validFor": {
            "startDateTime": "2022-06-22T23:20:50.52Z"
          },
          "version": "1"
        }
      }
    },
    "requestBodies": {
      "TroubleTicket_FVO": {
        "description": "The TroubleTicket to be created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TroubleTicket_FVO"
            },
            "examples": {
              "TroubleTicket_create_example": {
                "$ref": "#/components/examples/TroubleTicket_create_example_request"
              }
            }
          }
        },
        "required": true
      },
      "TroubleTicket_MVO": {
        "description": "The TroubleTicket to be patched",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TroubleTicket_MVO"
            },
            "examples": {
              "TroubleTicket_partialupdate_example_application_json": {
                "$ref": "#/components/examples/TroubleTicket_partialupdate_example_application_json_request"
              }
            }
          },
          "application/merge-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/TroubleTicket_MVO"
            },
            "examples": {
              "TroubleTicket_partialupdate_example_application_merge_json": {
                "$ref": "#/components/examples/TroubleTicket_partialupdate_example_application_merge_json_request"
              }
            }
          },
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/JsonPatchOperations"
            },
            "examples": {
              "TroubleTicket_partialupdate_example_application_json_patch": {
                "$ref": "#/components/examples/TroubleTicket_partialupdate_example_application_json_patch_request"
              }
            }
          },
          "application/json-patch-query+json": {
            "schema": {
              "$ref": "#/components/schemas/JsonPatchOperations"
            },
            "examples": {
              "TroubleTicket_partialupdate_example_application_json_patch_query": {
                "$ref": "#/components/examples/TroubleTicket_partialupdate_example_application_json_patch_query_request"
              }
            }
          }
        },
        "required": true
      },
      "TroubleTicketSpecification_FVO": {
        "description": "The TroubleTicketSpecification to be created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TroubleTicketSpecification_FVO"
            },
            "examples": {
              "TroubleTicketSpecification_create_example": {
                "$ref": "#/components/examples/TroubleTicketSpecification_create_example_request"
              }
            }
          }
        },
        "required": true
      },
      "TroubleTicketSpecification_MVO": {
        "description": "The TroubleTicketSpecification to be patched",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TroubleTicketSpecification_MVO"
            },
            "examples": {
              "TroubleTicketSpecification_partialupdate_application_json": {
                "$ref": "#/components/examples/TroubleTicketSpecification_partialupdate_application_json_request"
              }
            }
          },
          "application/merge-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/TroubleTicketSpecification_MVO"
            },
            "examples": {
              "TroubleTicketSpecification_partialupdate_application_merge_json": {
                "$ref": "#/components/examples/TroubleTicketSpecification_partialupdate_application_merge_json_request"
              }
            }
          },
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/JsonPatchOperations"
            },
            "examples": {
              "TroubleTicketSpecification_partialupdate_application_json_patch": {
                "$ref": "#/components/examples/TroubleTicketSpecification_partialupdate_application_json_patch_request"
              }
            }
          },
          "application/json-patch-query+json": {
            "schema": {
              "$ref": "#/components/schemas/JsonPatchOperations"
            },
            "examples": {
              "TroubleTicketSpecification_partialupdate_application_json_patch_query": {
                "$ref": "#/components/examples/TroubleTicketSpecification_partialupdate_application_json_patch_query_request"
              }
            }
          }
        },
        "required": true
      }
    },
    "headers": {
      "X-Total-Count": {
        "description": "Total number of items matching criteria",
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "integer"
        }
      },
      "X-Result-Count": {
        "description": "Actual number of items returned in the response body",
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "integer"
        }
      }
    },
    "securitySchemes": { }
  }
}