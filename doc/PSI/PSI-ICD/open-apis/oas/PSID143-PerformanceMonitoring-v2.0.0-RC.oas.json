{
  "openapi": "3.0.1",
  "info": {
    "title": "Performance Monitoring",
    "description": "**This file forms part of MEF W143**\n\n**This API implements part of Business Requirements & Use Cases described\nin MEF W133.1.**\n\n**This specification represents MEF work in progress and is subject to\nchange.**\n\nMEF Performance Monitoring API allows to manage Performance Profiles, \nPerformance Jobs and collect Performance Reports, as well as receive \nnotifications related to these entities. This allows managing the \nperformance objectives that are typically associated with an SLS. \n\nThree types of performance-related entities are supported by the API:\n- **Performance Monitoring Profile** - templates used to simplify the PM \nJob provisioning. Common attributes for PM Jobs are defined in the PM \nProfile. One PM Profile can be used by multiple PM Jobs but PM Jobs can \nbe created without relationship to PM Profile.\n\n- **Performance Monitoring Job** - specifies the performance monitoring\nobjectives specific to each subject of monitoring which could be an \nordered pair (i.e., two UNIs) or an entity (i.e., port).\n\n- **Performance Measurement Report** - The execution of PM Job results in\nPerformance Measurement collections that provide Buyer/Client with \nperformance objective results. In some cases performance collection\ncan be produced without provisioning of Performance Job \n(for example SLS is passed within the Service Order activation or \ncollection of passive statistics).\n\nList of use cases supported by the API:\n- Create Performance Monitoring Profile\n- Retrieve list of Performance Monitoring Profiles\n- Retrieve Performance Monitoring Profile by Profile Identifier\n- Modify Performance Monitoring Profile\n- Delete Performance Monitoring Profile\n- Subscribe to Performance Monitoring Profile Notifications\n- Unsubscribe from Performance Monitoring Profile Notifications\n\n- Create Performance Monitoring Job\n- Retrieve list of Performance Monitoring Jobs\n- Retrieve Performance Monitoring Job by Job Identifier\n- Modify Performance Monitoring Job\n- Retrieve Modify Performance Monitoring Job List\n- Retrieve Modify Performance Monitoring Job by Identifier\n- Cancel Performance Monitoring Job\n- Retrieve Cancel Performance Monitoring Job List\n- Retrieve Cancel Performance Monitoring Job by Identifier\n- Suspend Performance Monitoring Job\n- Retrieve Suspend Performance Monitoring Job List\n- Retrieve Suspend Performance Monitoring Job by Identifier\n- Resume Performance Monitoring Job\n- Retrieve Resume Performance Monitoring Job List\n- Retrieve Resume Performance Monitoring Job by Identifier\n- Subscribe to Performance Monitoring Job Notifications\n- Unsubscribe from Performance Monitoring Job Notifications\n\n- Create Performance Measurement Report\n- Retrieve list of Performance Measurement Reports\n- Retrieve Performance Report by Report Identifier\n- Subscribe to Performance Measurement Report Notifications\n- Unsubscribe from Performance Measurement Report Notifications\n\nCopyright 2023 MEF Forum and its contributors\n\nThis file includes content based on the TM Forum Performance Management API\n(TMF628 v4.0.0) available at \nhttps://github.com/tmforum-apis/TMF628_Performance, which is licensed by \nthe TM Forum under the Apache License version 2.0. Such content has been\nmodified by the MEF Forum and its contributors.\n",
    "version": "2.0.0-RC"
  },
  "servers": [
    {
      "url": "/psi-api/performanceMonitoring/v2/"
    }
  ],
  "tags": [
    {
      "name": "performanceJob",
      "description": "Performance Monitoring Job API"
    },
    {
      "name": "modifyPerformanceJob",
      "description": "Performance Monitoring Job API"
    },
    {
      "name": "suspendPerformanceJob",
      "description": "Performance Monitoring Job API"
    },
    {
      "name": "resumePerformanceJob",
      "description": "Performance Monitoring Job API"
    },
    {
      "name": "cancelPerformanceJob",
      "description": "Performance Monitoring Job API"
    },
    {
      "name": "performanceJobComplexQuery",
      "description": "Performance Monitoring Job API"
    },
    {
      "name": "performanceReport",
      "description": "Performance Monitoring Report API"
    },
    {
      "name": "performanceReportComplexQuery",
      "description": "Performance Monitoring Report API"
    }
  ],
  "paths": {
    "/performanceJob": {
      "get": {
        "tags": [
          "performanceJob"
        ],
        "summary": "List or find Performance Job objects.",
        "description": "The Buyer/Client requests a list of PM Jobs based on a set of filter criteria. The Seller/Server returns a summarized list of PM  Jobs. For each PM Job returned, the Seller/Server also provides a  Performance Job Identifier that uniquely identifiers this PM Job within the Seller/Server. The order of the elements returned to the  Buyer/Client is defined by the Seller/Server (e.g. natural order) and does not change between the pages.",
        "operationId": "listPerformanceJob",
        "parameters": [
          {
            "name": "buyerJobId",
            "in": "query",
            "description": "Identifier assigned and understandable by Buyer/Client to  facilitate search requests.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "performanceProfileId",
            "in": "query",
            "description": "Identifier of Performance Profile used as a template for  Performance Job.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State of the Performance Job. See `PerformanceJobStateType`  definition for details.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "acknowledged",
                "cancelled",
                "completed",
                "inProgress",
                "pending",
                "rejected",
                "resourceUnavailable",
                "scheduled",
                "suspended"
              ]
            }
          },
          {
            "name": "creationDate.gt",
            "in": "query",
            "description": "Date when the job was created - greater than.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "creationDate.lt",
            "in": "query",
            "description": "Date when the job was created - lower than.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "jobType",
            "in": "query",
            "description": "Type of the Performance Job",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/JobType"
            }
          },
          {
            "name": "granularity",
            "in": "query",
            "description": "Sampling rate of the collection of measurements.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Interval"
            }
          },
          {
            "name": "reportingPeriod",
            "in": "query",
            "description": "Definition of time period during which report will be active  and collect measurements.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Interval"
            }
          },
          {
            "name": "consumingApplicationId",
            "in": "query",
            "description": "Identifier of consuming application.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "producingApplicationId",
            "in": "query",
            "description": "Identifier of producing application.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobPriority",
            "in": "query",
            "description": "The priority of the Performance Job.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Requested index for start of item to be provided in response requested by the client. Note that the index starts with \"0\".",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Requested number of resources to be provided in response.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'",
            "headers": {
              "X-Pagination-Throttled": {
                "description": "Used to indicate that result page was throttled to maximum possible size  and there are additional results that can be fetched.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "boolean"
                }
              },
              "X-Total-Count": {
                "description": "The total number of matching items. E.g. if there are 50 matching items in total, but the request has offset=10 and limit=10, then the X-Total-Count is 50.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "X-Result-Count": {
                "description": "The number of items included in the response.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformanceJob_Find"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity due to the business validation problems",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error422"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "performanceJob"
        ],
        "summary": "Creates a Performance Job.",
        "description": "A request initiated by the Buyer/Client to create a Performance Job in the Seller/Server system to indicate performance monitoring objectives.",
        "operationId": "createPerformanceJob",
        "requestBody": {
          "description": "The Performance Job to be created.",
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceJob_Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "'Created (https://tools.ietf.org/html/rfc7231#section-6.3.2)'",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceJob"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity due to the business validation problems",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error422"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      }
    },
    "/performanceJob/{id}": {
      "get": {
        "tags": [
          "performanceJob"
        ],
        "summary": "Retrieves a Performance Job by ID.",
        "description": "The Buyer/Client requests detailed information about a single Performance Job based on the Job Identifier.",
        "operationId": "retrievePerformanceJob",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Performance Job",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceJob"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      }
    },
    "/cancelPerformanceJob": {
      "get": {
        "tags": [
          "cancelPerformanceJob"
        ],
        "summary": "Lists or finds CancelPerformanceJob objects.",
        "description": "The Buyer/Client requests a list of Cancel Performance Monitoring Job based on a set of filter criteria.",
        "operationId": "listCancelPerformanceJob",
        "parameters": [
          {
            "name": "performanceJobId",
            "in": "query",
            "description": "Identifer of Performance Job that is a subject of CancelPerformanceJob.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State of CancelPerformanceJob. See `PerformanceJobProcessStateType` definition for details.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "acknowledged",
                "accepted",
                "done",
                "declined"
              ]
            }
          },
          {
            "name": "creationDate.gt",
            "in": "query",
            "description": "Date when the CancelPerformanceJob was created - greater than.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "creationDate.lt",
            "in": "query",
            "description": "Date when the CancelPerformanceJob was created - lower than.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Requested index for start of item to be provided in response requested by client. Note that the index starts with \"0\".",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Requested number of items to be provided in response requested by client.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "X-Pagination-Throttled": {
                "description": "Used to indicate that result page was throttled to maximum possible size  and there are additional results that can be fetched.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "boolean"
                }
              },
              "X-Total-Count": {
                "description": "The total number of matching items. E.g. if there are 50 matching items in total, but the request has offset=10 and limit=10, then the X-Total-Count is 50.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "X-Result-Count": {
                "description": "The number of items included in the response.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CancelPerformanceJob_Find"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity due to the business validation problems",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error422"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error501"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "cancelPerformanceJob"
        ],
        "description": "A request initiated by the Buyer/Client to cancel  a Performance Monitoring Job in the Seller/Server system.",
        "operationId": "createCancelPerformanceJob",
        "requestBody": {
          "description": "The CancelPerformanceJob to be created.",
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/CancelPerformanceJob_Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPerformanceJob"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity due to the business validation problems",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error422"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error501"
                }
              }
            }
          }
        }
      }
    },
    "/cancelPerformanceJob/{id}": {
      "get": {
        "tags": [
          "cancelPerformanceJob"
        ],
        "summary": "Retrieves a CancelPerformanceJob by ID.",
        "description": "The Buyer/Client requests detailed information about a single  Cancel Performance Monitoring Job based on the  Cancel Performance Monitoring Job Identifier.",
        "operationId": "retrieveCancelPerformanceJob",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the CancelPerformanceJob",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPerformanceJob"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error501"
                }
              }
            }
          }
        }
      }
    },
    "/modifyPerformanceJob": {
      "get": {
        "tags": [
          "modifyPerformanceJob"
        ],
        "summary": "Lists or finds ModifyPerformanceJob objects.",
        "description": "The Buyer/Client requests a list of Modify Performance Monitoring Job based on a set of filter criteria.",
        "operationId": "listModifyPerformanceJob",
        "parameters": [
          {
            "name": "performanceJobId",
            "in": "query",
            "description": "Identifer of Performance Job that is a subject of ModifyPerformanceJob.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State of ModifyPerformanceJob See `PerformanceJobProcessStateType` definition for details.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "acknowledged",
                "accepted",
                "done",
                "declined"
              ]
            }
          },
          {
            "name": "creationDate.gt",
            "in": "query",
            "description": "Date when the ModifyPerformanceJob was created - greater than.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "creationDate.lt",
            "in": "query",
            "description": "Date when the ModifyPerformanceJob was created - lower than.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Requested index for start of item to be provided in response requested by client. Note that the index starts with \"0\".",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Requested number of items to be provided in response requested by client.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "X-Pagination-Throttled": {
                "description": "Used to indicate that result page was throttled to maximum possible size  and there are additional results that can be fetched.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "boolean"
                }
              },
              "X-Total-Count": {
                "description": "The total number of matching items. E.g. if there are 50 matching items in total, but the request has offset=10 and limit=10, then the X-Total-Count is 50.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "X-Result-Count": {
                "description": "The number of items included in the response.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModifyPerformanceJob_Find"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity due to the business validation problems",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error422"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error501"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "modifyPerformanceJob"
        ],
        "description": "A request initiated by the Buyer/Client to modify a Performance Monitoring Job in the Seller/Server system.",
        "operationId": "createModifyPerformanceJob",
        "requestBody": {
          "description": "The ModifyPerformanceJob to be created.",
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/ModifyPerformanceJob_Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyPerformanceJob"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity due to the business validation problems",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error422"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error501"
                }
              }
            }
          }
        }
      }
    },
    "/modifyPerformanceJob/{id}": {
      "get": {
        "tags": [
          "modifyPerformanceJob"
        ],
        "summary": "Retrieves a ModifyPerformanceJob by ID.",
        "description": "The Buyer/Client requests detailed information about a single  Modify Performance Monitoring Job based on the  Modify Performance Monitoring Job Identifier.",
        "operationId": "retrieveModifyPerformanceJob",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the ModifyPerformanceJob",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyPerformanceJob"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error501"
                }
              }
            }
          }
        }
      }
    },
    "/resumePerformanceJob": {
      "get": {
        "tags": [
          "resumePerformanceJob"
        ],
        "summary": "Lists or finds ResumePerformanceJob objects",
        "description": "The Buyer/Client requests a list of Resume Performance Monitoring Job based on a set of filter criteria.",
        "operationId": "listResumePerformanceJob",
        "parameters": [
          {
            "name": "performanceJobId",
            "in": "query",
            "description": "Identifer of Performance Job that is a subject of ResumePerformanceJob.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State of ResumePerformanceJob. See `PerformanceJobProcessStateType` definition for details.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "acknowledged",
                "accepted",
                "done",
                "declined"
              ]
            }
          },
          {
            "name": "creationDate.gt",
            "in": "query",
            "description": "Date when the ResumePerformanceJob was created - greater than.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "creationDate.lt",
            "in": "query",
            "description": "Date when the ResumePerformanceJob was created - lower than.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Requested index for start of item to be provided in response requested by client. Note that the index starts with \"0\".",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Requested number of items to be provided in response requested by client.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "X-Pagination-Throttled": {
                "description": "Used to indicate that result page was throttled to maximum possible size  and there are additional results that can be fetched.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "boolean"
                }
              },
              "X-Total-Count": {
                "description": "The total number of matching items. E.g. if there are 50 matching items in total, but the request has offset=10 and limit=10, then the X-Total-Count is 50.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "X-Result-Count": {
                "description": "The number of items included in the response.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResumePerformanceJob_Find"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity due to the business validation problems",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error422"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error501"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "resumePerformanceJob"
        ],
        "description": "A request initiated by the Buyer/Client to resume  a Performance Monitoring Job in the Seller/Server system.",
        "operationId": "createResumePerformanceJob",
        "requestBody": {
          "description": "The ResumePerformanceJob to be created.",
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/ResumePerformanceJob_Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ResumePerformanceJob"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity due to the business validation problems",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error422"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error501"
                }
              }
            }
          }
        }
      }
    },
    "/resumePerformanceJob/{id}": {
      "get": {
        "tags": [
          "resumePerformanceJob"
        ],
        "summary": "Retrieves a ResumePerformanceJob by ID.",
        "description": "The Buyer/Client requests detailed information about a single  Resume Performance Monitoring Job based on the  Resume Performance Monitoring Job Identifier.",
        "operationId": "retrieveResumePerformanceJob",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the ResumePerformanceJob",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ResumePerformanceJob"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error501"
                }
              }
            }
          }
        }
      }
    },
    "/suspendPerformanceJob": {
      "get": {
        "tags": [
          "suspendPerformanceJob"
        ],
        "summary": "Lists or finds SuspendPerformanceJob objects.",
        "description": "The Buyer/Client requests a list of Suspend Performance Monitoring Job based on a set of filter criteria.",
        "operationId": "listSuspendPerformanceJob",
        "parameters": [
          {
            "name": "performanceJobId",
            "in": "query",
            "description": "Identifer of Performance Job that is a subject of SuspendPerformanceJob.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State of SuspendPerformanceJob. See  `PerformanceJobProcessStateType` definition for details.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "acknowledged",
                "accepted",
                "done",
                "declined"
              ]
            }
          },
          {
            "name": "creationDate.gt",
            "in": "query",
            "description": "Date when the SuspendPerformanceJob was created - greater than.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "creationDate.lt",
            "in": "query",
            "description": "Date when the SuspendPerformanceJob was created - lower than.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Requested index for start of item to be provided in response requested by client. Note that the index starts with \"0\".",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Requested number of items to be provided in response requested by client.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "X-Pagination-Throttled": {
                "description": "Used to indicate that result page was throttled to maximum possible size  and there are additional results that can be fetched.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "boolean"
                }
              },
              "X-Total-Count": {
                "description": "The total number of matching items. E.g. if there are 50 matching items in total, but the request has offset=10 and limit=10, then the X-Total-Count is 50.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "X-Result-Count": {
                "description": "The number of items included in the response.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SuspendPerformanceJob_Find"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity due to the business validation problems",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error422"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error501"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "suspendPerformanceJob"
        ],
        "description": "A request initiated by the Buyer/Client to suspend  a Performance Monitoring Job in the Seller/Server system.",
        "operationId": "createSuspendPerformanceJob",
        "requestBody": {
          "description": "The SuspendPerformanceJob to be created.",
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/SuspendPerformanceJob_Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SuspendPerformanceJob"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity due to the business validation problems",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error422"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error501"
                }
              }
            }
          }
        }
      }
    },
    "/suspendPerformanceJob/{id}": {
      "get": {
        "tags": [
          "suspendPerformanceJob"
        ],
        "summary": "Retrieves a SuspendPerformanceJob by ID",
        "description": "The Buyer/Client requests detailed information about a single  Suspend Performance Monitoring Job based on the  Suspend Performance Monitoring Job Identifier.",
        "operationId": "retrieveSuspendPerformanceJob",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the SuspendPerformanceJob",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SuspendPerformanceJob"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error501"
                }
              }
            }
          }
        }
      }
    },
    "/performanceJobComplexQuery": {
      "post": {
        "tags": [
          "performanceJobComplexQuery"
        ],
        "summary": "Creates a PerformanceJobComplexQuery.",
        "description": "A request initiated by the Buyer/Client to create  a Performance Monitoring Job Complex Query in the Seller/Server system.",
        "operationId": "createPerformanceJobComplexQuery",
        "requestBody": {
          "description": "The PerformanceJobComplexQuery to be created.",
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceJobComplexQuery_Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformanceJobComplexQuery"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity due to the business validation problems",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error422"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      }
    },
    "/performanceReport": {
      "get": {
        "tags": [
          "performanceReport"
        ],
        "summary": "List or find Performance Report objects.",
        "description": "The Buyer/Client requests a list of PM Reports based on a set of filter criteria. The Seller/Server returns a summarized list of PM Reports. For each PM Report returned, the Seller/Server also provides a  Performance Report Identifier that uniquely identifiers this PM Report within the Seller/Server. The order of the elements returned to the  Buyer/Client is defined by the Seller/Server (e.g. natural order) and does not change between the pages.",
        "operationId": "listPerformanceReport",
        "parameters": [
          {
            "name": "performanceJobId",
            "in": "query",
            "description": "Identifier of Performance Job that generated Performance Report.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State of the Performance Report. See `PerformanceReportStateType` definition for details.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "acknowledged",
                "completed",
                "failed",
                "inProgress",
                "rejected"
              ]
            }
          },
          {
            "name": "creationDate.gt",
            "in": "query",
            "description": "Date when the report was created - greater than.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "creationDate.lt",
            "in": "query",
            "description": "Date when the report was created - lower than.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "reportingTimeframe.startDate.gt",
            "in": "query",
            "description": "Start date of reporting timeframe - greater than.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "reportingTimeframe.startDate.lt",
            "in": "query",
            "description": "Start date of reporting timeframe - lower than.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "reportingTimeframe.endDate.gt",
            "in": "query",
            "description": "End date of reporting timeframe - greater than.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "reportingTimeframe.endDate.lt",
            "in": "query",
            "description": "End date of reporting timeframe - lower than.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "granularity",
            "in": "query",
            "description": "Sampling rate of the collection of measurements",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Interval"
            }
          },
          {
            "name": "outputFormat",
            "in": "query",
            "description": "Format of report output",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/OutputFormat"
            }
          },
          {
            "name": "resultFormat",
            "in": "query",
            "description": "Type of providing report results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/ResultFormat"
            }
          },
          {
            "name": "consumingApplicationId",
            "in": "query",
            "description": "Identifier of consuming application",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "producingApplicationId",
            "in": "query",
            "description": "Identifier of producing application",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Requested index for start of item to be provided in response requested by the client. Note that the index starts with \"0\".",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Requested number of resources to be provided in response.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'",
            "headers": {
              "X-Pagination-Throttled": {
                "description": "Used to indicate that result page was throttled to maximum possible size  and there are additional results that can be fetched.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "boolean"
                }
              },
              "X-Total-Count": {
                "description": "The total number of matching items. E.g. if there are 50 matching items in total, but the request has offset=10 and limit=10, then the X-Total-Count is 50.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "X-Result-Count": {
                "description": "The number of items included in the response.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformanceReport_Find"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity due to the business validation problems",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error422"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "performanceReport"
        ],
        "summary": "Creates a Performance Report.",
        "description": "A request initiated by the Buyer/Client to create an ad-hoc Performance Report based on existing performance data in the  Seller/Server system.",
        "operationId": "createPerformanceReport",
        "requestBody": {
          "description": "The Performance Report to be created.",
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReport_Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "'Created (https://tools.ietf.org/html/rfc7231#section-6.3.2)'",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReport"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity due to the business validation problems",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error422"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      }
    },
    "/performanceReport/{id}": {
      "get": {
        "tags": [
          "performanceReport"
        ],
        "summary": "Retrieves a Performance Report by ID.",
        "description": "The Buyer/Client requests detailed information about a single  Performance Report based on the Report Identifier.",
        "operationId": "retrievePerformanceReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Performance Report to be retrieved.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReport"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      }
    },
    "/performanceReportComplexQuery": {
      "post": {
        "tags": [
          "performanceReportComplexQuery"
        ],
        "summary": "Creates a PerformanceReportComplexQuery.",
        "description": "A request initiated by the Buyer/Client to create  a Performance Measurement Report Complex Query  in the Seller/Server system.",
        "operationId": "createPerformanceReportComplexQuery",
        "requestBody": {
          "description": "The PerformanceReportComplexQuery to be created.",
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportComplexQuery_Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformanceReportComplexQuery"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity due to the business validation problems",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error422"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AttachmentURL": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "'Uniform Resource Locator, is a web page address (a subset of  URI).'"
          }
        },
        "description": "The AttachmentURL is used to get the PM report."
      },
      "CancelPerformanceJob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CancelPerformanceJob_Common"
          },
          {
            "required": [
              "creationDate",
              "id",
              "state"
            ],
            "type": "object",
            "properties": {
              "cancellationDeniedReason": {
                "type": "string",
                "description": "If the Cancel Performance Job request is denied by the  Seller/Server, the Seller/Server provides a reason to the Buyer/Client using this attribute."
              },
              "creationDate": {
                "type": "string",
                "description": "Date when the Cancel Performance Job was created.",
                "format": "date-time"
              },
              "href": {
                "type": "string",
                "description": "Hyperlink to the Cancel Performance Job entity",
                "format": "uri"
              },
              "id": {
                "type": "string",
                "description": "Unique identifier for the Cancel Performance Job that is generated by the Seller/Server when the Cancel Performance Job request  `state` is set to `acknowledged`."
              },
              "state": {
                "$ref": "#/components/schemas/PerformanceJobProcessStateType"
              }
            },
            "description": "Request for cancellation of an existing Performance job"
          }
        ]
      },
      "CancelPerformanceJob_Common": {
        "required": [
          "performanceJob"
        ],
        "type": "object",
        "properties": {
          "cancellationReason": {
            "type": "string",
            "description": "An optional attribute that allows the Buyer/Client to provide additional detail to the Seller/Server on the reason for cancelling Performance Job."
          },
          "performanceJob": {
            "$ref": "#/components/schemas/PerformanceJobRef"
          }
        },
        "description": "Request for cancellation of an existing Performance Job"
      },
      "CancelPerformanceJob_Create": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CancelPerformanceJob_Common"
          },
          {
            "type": "object",
            "description": "Request for cancellation of an existing Performance Job"
          }
        ]
      },
      "CancelPerformanceJob_Find": {
        "required": [
          "creationDate",
          "id",
          "performanceJob",
          "state"
        ],
        "type": "object",
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "Date when the Cancel Performance Job was created.",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the Cancel Performance Job that is generated by the Seller/Server when the Cancel Performance Job request  `state` is set to `acknowledged`."
          },
          "performanceJob": {
            "$ref": "#/components/schemas/PerformanceJobRef"
          },
          "state": {
            "$ref": "#/components/schemas/PerformanceJobProcessStateType"
          }
        },
        "description": "This class represents a single list item for the response of  `listCancelPerformanceJob`"
      },
      "DayOfMonth": {
        "maximum": 31,
        "minimum": 1,
        "type": "integer",
        "description": "Day of the month for recurrence"
      },
      "DayOfWeek": {
        "maximum": 7,
        "minimum": 1,
        "type": "integer",
        "description": "Day of the week for recurrence. 1=Sunday, 2=Monday, 3=Tuesday, 4=Wednesday, 5=Thursday, 6=Friday, 7=Saturday."
      },
      "Error": {
        "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "Error": "#/components/schemas/Error"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "required": [
              "code",
              "reason"
            ],
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Application relevant detail, defined in the API or a common list."
              },
              "reason": {
                "type": "string",
                "description": "Explanation of the reason for the error which can be shown to a client user."
              },
              "message": {
                "type": "string",
                "description": "More details and corrective actions related to the error which can be shown to a client user."
              },
              "status": {
                "type": "string",
                "description": "HTTP Error code extension"
              },
              "referenceError": {
                "type": "string",
                "description": "URI of documentation describing the error."
              }
            }
          }
        ]
      },
      "Error400": {
        "description": "'Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "required": [
              "code"
            ],
            "type": "object",
            "properties": { }
          }
        ]
      },
      "Error401": {
        "description": "'Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "required": [
              "code"
            ],
            "type": "object",
            "properties": { }
          }
        ]
      },
      "Error403": {
        "description": "Forbidden. This code indicates that the server understood the request but refused to authorize it. (https://tools.ietf.org/html/rfc7231#section-6.5.3)",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "required": [
              "code"
            ],
            "type": "object",
            "properties": { }
          }
        ]
      },
      "Error404": {
        "description": "Resource for the requested path not found. (https://tools.ietf.org/html/rfc7231#section-6.5.4)",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "required": [
              "code"
            ],
            "type": "object",
            "properties": { }
          }
        ]
      },
      "Error422": {
        "description": "Unprocessable entity due to a business validation problem. (https://tools.ietf.org/html/rfc4918#section-11.2)",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "required": [
              "code"
            ],
            "type": "object",
            "properties": {
              "propertyPath": {
                "type": "string",
                "description": "A pointer to a particular property of the payload that caused the validation issue. It is highly recommended that this property should be used.\nDefined using JavaScript Object Notation (JSON) Pointer (https://tools.ietf.org/html/rfc6901)."
              }
            }
          }
        ]
      },
      "Error500": {
        "description": "Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "required": [
              "code"
            ],
            "type": "object",
            "properties": { }
          }
        ]
      },
      "Error501": {
        "description": "Not Implemented. Used in case Seller is not supporting an optional operation (https://tools.ietf.org/html/rfc7231#section-6.6.2)",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "required": [
              "code"
            ],
            "type": "object",
            "properties": { }
          }
        ]
      },
      "FileTransferData": {
        "type": "object",
        "properties": {
          "fileFormat": {
            "type": "string",
            "description": "Format of the file containing collected data."
          },
          "fileLocation": {
            "type": "string",
            "description": "Location of the file containing collected data.",
            "format": "uri"
          },
          "transportProtocol": {
            "type": "string",
            "description": "Transport protocol to use for file transfer."
          },
          "compressionType": {
            "type": "string",
            "description": "Compression types used for the collected data file.",
            "enum": [
              "NO_PACKING",
              "GZIP",
              "TAR",
              "VENDOR_EXT",
              "MINOR_EXT"
            ]
          },
          "packingType": {
            "type": "string",
            "description": "Specify if the data file is to be packed."
          },
          "retentionPeriod": {
            "type": "string",
            "description": "A time interval to retain the file."
          }
        },
        "description": "Defines the place where the report content should be stored."
      },
      "HourRange": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          }
        },
        "description": "Defines start and end date"
      },
      "Interval": {
        "type": "string",
        "description": "Enumeration of applicable time intervals",
        "enum": [
          "10 milliseconds",
          "100 milliseconds",
          "1 second",
          "10 second",
          "1 minute",
          "5 minutes",
          "15 minutes",
          "30 minutes",
          "1 hour",
          "24 hours",
          "1 month",
          "1 year",
          "not applicable"
        ]
      },
      "JobType": {
        "type": "string",
        "description": "The type of PM Job",
        "enum": [
          "on-demand"
        ]
      },
      "MeasurementTime": {
        "type": "object",
        "properties": {
          "measurementStartDate": {
            "type": "string",
            "description": "Start date of the period to which collected data points belong.",
            "format": "date-time"
          },
          "measurementEndDate": {
            "type": "string",
            "description": "Start date of the period to which collected data points belong.",
            "format": "date-time"
          },
          "measurementInterval": {
            "$ref": "#/components/schemas/Interval"
          }
        },
        "description": "Timeframe boundary for collected data"
      },
      "ModifyPerformanceJob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModifyPerformanceJob_Common"
          },
          {
            "required": [
              "creationDate",
              "id",
              "state"
            ],
            "type": "object",
            "properties": {
              "creationDate": {
                "type": "string",
                "description": "Date when the Modify Performance Job was created.",
                "format": "date-time"
              },
              "href": {
                "type": "string",
                "description": "Hyperlink to the Modify Performance Job entity",
                "format": "uri"
              },
              "id": {
                "type": "string",
                "description": "Unique identifier for the Modify Performance Job that is generated by the Seller/Server when the Modify Performance Job request  `state` is set to `acknowledged`"
              },
              "modificationDeniedReason": {
                "type": "string",
                "description": "If the Modify Performance Job request is denied by the  Seller/Server, the Seller/Server provides a reason to the Buyer/Client using this attribute."
              },
              "state": {
                "$ref": "#/components/schemas/PerformanceJobProcessStateType"
              }
            },
            "description": "Request for modification of an existing Performance Job"
          }
        ]
      },
      "ModifyPerformanceJob_Common": {
        "required": [
          "performanceJob"
        ],
        "type": "object",
        "properties": {
          "buyerJobId": {
            "type": "string",
            "description": "Identifier of the job understood and assigned by the Buyer/Client."
          },
          "consumingApplicationId": {
            "type": "string",
            "description": "Identifier of consuming application"
          },
          "description": {
            "type": "string",
            "description": "A free-text description of the Performance Job"
          },
          "fileTransferData": {
            "$ref": "#/components/schemas/FileTransferData"
          },
          "modificationReason": {
            "type": "string",
            "description": "An optional attribute that allows the Buyer/Client to provide additional detail to the Seller/Server on the reason for modifying Performance Job."
          },
          "performanceJob": {
            "$ref": "#/components/schemas/PerformanceJobRef"
          },
          "performanceProfile": {
            "$ref": "#/components/schemas/ModifyPerformanceJob_ProfileValue"
          },
          "producingApplicationId": {
            "type": "string",
            "description": "Identifier of producing application"
          },
          "scheduleDefinition": {
            "$ref": "#/components/schemas/ScheduleDefinition"
          },
          "servicePayloadSpecificAttributes": {
            "$ref": "#/components/schemas/ServicePayloadSpecificAttributes"
          }
        },
        "description": "Request for modification of an existing Performance Job"
      },
      "ModifyPerformanceJob_Create": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModifyPerformanceJob_Common"
          },
          {
            "type": "object",
            "description": "Request for modification of an existing Performance Job"
          }
        ]
      },
      "ModifyPerformanceJob_Find": {
        "required": [
          "creationDate",
          "id",
          "performanceJob",
          "state"
        ],
        "type": "object",
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "Date when the Modify Performance Job was created.",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the Modify Performance Job that is generated by the Seller/Server when the Modify Performance Job request `state` is set to `acknowledged`."
          },
          "performanceJob": {
            "$ref": "#/components/schemas/PerformanceJobRef"
          },
          "state": {
            "$ref": "#/components/schemas/PerformanceJobProcessStateType"
          }
        },
        "description": "This class represents a single list item for the response of  `listModifyPerformanceJob`"
      },
      "ModifyPerformanceJob_ProfileValue": {
        "type": "object",
        "properties": {
          "granularity": {
            "$ref": "#/components/schemas/Interval"
          },
          "jobPriority": {
            "type": "integer",
            "description": "The priority of the Performance Job. The way the management application will use the Job priority to schedule Job execution is application-specific and out the scope.",
            "default": 5
          },
          "outputFormat": {
            "$ref": "#/components/schemas/OutputFormat"
          },
          "reportingPeriod": {
            "$ref": "#/components/schemas/Interval"
          },
          "resultFormat": {
            "$ref": "#/components/schemas/ResultFormat"
          }
        },
        "description": "Direct assignment of values defined by PerformanceProfile type to  PerformanceJob object. Necessary when PerformanceJob is created without reference to PerformanceProfile."
      },
      "MonthlyScheduleDayOfWeekDefinition": {
        "type": "object",
        "properties": {
          "recurringDaySequence": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            }
          },
          "dayOfMonthRecurrence": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfMonth"
            }
          }
        },
        "description": "Monthly scheduled day of the week."
      },
      "OutputFormat": {
        "type": "string",
        "description": "List of possible output formats for the Performance Report",
        "enum": [
          "json",
          "xml",
          "avro",
          "csv"
        ]
      },
      "PerformanceJob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PerformanceJob_Common"
          },
          {
            "required": [
              "creationDate",
              "id",
              "state"
            ],
            "type": "object",
            "properties": {
              "creationDate": {
                "type": "string",
                "description": "Date when the Performance Job was created.",
                "format": "date-time"
              },
              "href": {
                "type": "string",
                "description": "Hyperlink reference",
                "format": "uri"
              },
              "id": {
                "type": "string",
                "description": "Unique identifier"
              },
              "lastModifiedDate": {
                "type": "string",
                "description": "Date when the job was last modified.",
                "format": "date-time"
              },
              "rejectionReason": {
                "type": "string",
                "description": "Reason in case creation request was rejected."
              },
              "state": {
                "$ref": "#/components/schemas/PerformanceJobStateType"
              }
            },
            "description": "A Performance Monitoring Job specifies the performance monitoring objectives specific to each subject of monitoring which could be an ordered pair (i.e., two UNIs) or an entity (i.e., port)."
          }
        ]
      },
      "PerformanceJobComplexQuery": {
        "type": "object",
        "properties": {
          "buyerJobId": {
            "type": "string",
            "description": "Identifier of the job understood and assigned by the Buyer/Client."
          },
          "consumingApplicationId": {
            "type": "string",
            "description": "Identifier of consuming application"
          },
          "creationDate": {
            "type": "string",
            "description": "Date when the Performance Job was created.",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "A free-text description of the Performance Job"
          },
          "granularity": {
            "$ref": "#/components/schemas/Interval"
          },
          "jobPriority": {
            "type": "integer",
            "description": "The priority of the Performance Job. The way the management application will use the Job priority to schedule Job execution is application-specific and out the scope.",
            "default": 5
          },
          "jobType": {
            "$ref": "#/components/schemas/JobType"
          },
          "performanceJob": {
            "$ref": "#/components/schemas/PerformanceJobRef"
          },
          "performanceProfile": {
            "$ref": "#/components/schemas/PerformanceProfileValue"
          },
          "producingApplicationId": {
            "type": "string",
            "description": "Identifier of producing application"
          },
          "reportingPeriod": {
            "$ref": "#/components/schemas/Interval"
          },
          "scheduleDefinition": {
            "$ref": "#/components/schemas/ScheduleDefinition"
          },
          "servicePayloadSpecificAttributes": {
            "$ref": "#/components/schemas/ServicePayloadSpecificAttributes"
          },
          "state": {
            "$ref": "#/components/schemas/PerformanceJobStateType"
          }
        },
        "description": "Performance Job Complex Query entity is used to perform  searches on Performance Job entities, including clauses based on ScheduleDefinition and ServicePayloadSpecificAttributes."
      },
      "PerformanceJobComplexQuery_Create": {
        "type": "object",
        "properties": {
          "buyerJobId": {
            "type": "string",
            "description": "Identifier of the job understood and assigned by the Buyer/Client."
          },
          "consumingApplicationId": {
            "type": "string",
            "description": "Identifier of consuming application"
          },
          "creationDate.gt": {
            "type": "string",
            "description": "Date when the Performance Job was created - greater than.",
            "format": "date-time"
          },
          "creationDate.lt": {
            "type": "string",
            "description": "Date when the Performance Job was created - lower than.",
            "format": "date-time"
          },
          "granularity": {
            "$ref": "#/components/schemas/Interval"
          },
          "jobPriority": {
            "type": "integer",
            "description": "The priority of the Performance Job. The way the management application will use the Job priority to schedule Job execution is application-specific and out the scope.",
            "default": 5
          },
          "jobType": {
            "$ref": "#/components/schemas/JobType"
          },
          "performanceProfile": {
            "$ref": "#/components/schemas/PerformanceProfileValue"
          },
          "producingApplicationId": {
            "type": "string",
            "description": "Identifier of producing application"
          },
          "reportingPeriod": {
            "$ref": "#/components/schemas/Interval"
          },
          "scheduleDefinition": {
            "$ref": "#/components/schemas/ScheduleDefinition"
          },
          "servicePayloadSpecificAttributes": {
            "$ref": "#/components/schemas/ServicePayloadSpecificAttributes"
          },
          "state": {
            "$ref": "#/components/schemas/PerformanceJobStateType"
          }
        },
        "description": "Performance Job Complex Query entity is used to perform  searches on Performance Job entities, including clauses based on ScheduleDefinition and ServicePayloadSpecificAttributes."
      },
      "PerformanceJobProcessStateType": {
        "type": "string",
        "description": "The state of the process related to the Performance Job\n\n| state          | MEF 133 name | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |\n| -------------- | ------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `accepted`     | Accepted     | The Cancel/Modify/Resume/Suspend Performance Monitoring Job request has been validated and accepted by the Seller/Server.                                                                                                                                                                                                                                                                                                                                                                 |\n| `acknowledged` | Acknowledged | The Cancel/Modify/Resume/Suspend Performance Monitoring Job request has been received by the Seller/Server and has passed basic validation. Performance Monitoring Job Process Identifier is assigned in the Acknowledged state. The request remains Acknowledged until all validations as applicable are completed. If the attributes are validated, the request moves to the Accepted state. If not all attributes are validated, the request moves to the Declined state. |\n| `completed`    | Completed    | The Cancel/Modify/Resume/Suspend Performance Monitoring Job request has been completed by the Seller/Server.                                                                                                                                                                                                                                                                                                                                                                              |\n| `declined`     | Declined     | The Cancel/Modify/Resume/Suspend Performance Monitoring Job request has failed validation and has been declined by the Seller/Server.                                                                                                                                                                                                                                                                                                                                                         |",
        "enum": [
          "accepted",
          "acknowledged",
          "completed",
          "declined"
        ]
      },
      "PerformanceJobRefOrValue": {
        "required": [
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "This field is used as a discriminator to differentiate if an object relates directly to the Performance Job entity or defines values from the PerformanceJob type."
          }
        },
        "description": "Defines the reference to Performance Monitoring Job or defines values from PerformanceJob type.",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PerformanceJobRef": "#/components/schemas/PerformanceJobRef",
            "PerformanceJobValue": "#/components/schemas/PerformanceJobValue"
          }
        }
      },
      "PerformanceJobRef": {
        "description": "A reference to a Performance Job resource",
        "allOf": [
          {
            "$ref": "#/components/schemas/PerformanceJobRefOrValue"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "description": "Hyperlink to the referenced Performance Job",
                "format": "uri"
              },
              "id": {
                "type": "string",
                "description": "Identifier of the referenced Performance Job"
              }
            }
          }
        ]
      },
      "PerformanceJobValue": {
        "description": "Direct assignment of values defined by PerformanceJob type to  PerformanceReport object. Necessary when PerformanceReport is not created by PerformanceJob and without relation to PerformanceJob.",
        "allOf": [
          {
            "$ref": "#/components/schemas/PerformanceJobRefOrValue"
          },
          {
            "required": [
              "outputFormat",
              "resultFormat",
              "servicePayloadSpecificAttributes"
            ],
            "properties": {
              "consumingApplicationId": {
                "type": "string",
                "description": "Identifier of consuming application"
              },
              "fileTransferData": {
                "$ref": "#/components/schemas/FileTransferData"
              },
              "granularity": {
                "$ref": "#/components/schemas/Interval"
              },
              "outputFormat": {
                "$ref": "#/components/schemas/OutputFormat"
              },
              "producingApplicationId": {
                "type": "string",
                "description": "Identifier of producing application"
              },
              "resultFormat": {
                "$ref": "#/components/schemas/ResultFormat"
              },
              "servicePayloadSpecificAttributes": {
                "$ref": "#/components/schemas/ServicePayloadSpecificAttributes"
              }
            }
          }
        ]
      },
      "PerformanceJobStateType": {
        "type": "string",
        "description": "The state of the Performance Monitoring Job.\n\n| state                  | MEF 133 name         | Description|\n| ---------------------- | -------------------- ||\n| `acknowledged`         | Acknowledged         | A Create Performance Monitoring Job request has been received by the Seller/Server and has passed basic validation. Performance Monitoring Job Identifier is assigned in the Acknowledged state. The request remains Acknowledged until all validations as applicable are completed. If the attributes are validated the request determines if the start time is immediate or scheduled. If immediate, the Performance Monitoring Job moves to the In-progress state. If scheduled, the Performance Monitoring Job moves to the Scheduled state. If not all attributes are validated, the request moves to the Rejected state.                                      |\n| `cancelled`            | Cancelled            | A Performance Monitoring Job that is In-Progress, Suspended, or Sceduled is cancelled|\n| `completed`            | Completed            | A non-recurring Performance Monitoring Job finished execution.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| `inProgress`           | In-Progress          | A Performance Monitoring Job is running. Upon completion of the Job, a determination if the Performance Monitoring Job is a one-time Job or is recurring is performed. If the Performance Monitoring Job is a one-time Job, the state of the Performance Monitoring Job moves to the Completed state. If the Performance Monitoring Job is recurring, the Performance Monitoring Job circles back to determine if it has an immediate start time or a scheduled start time. If a Suspend Performance Monitoring Job request is accepted, the Job moves to the Suspended state. If a Cancel Performance Monitoring Job request is accepted, the Job moves to the Cancelled state. |\n| `pending`              | Pending              | A Modify Performance Monitoring Job request has been accepted by the Seller/Server. The Performance Monitoring Job remains Pending while updates to the Job are completed. Once updates are complete, the Job returns to the Scheduled or In-Progress status depending on the schedule definition.                                                                                                                                                                                                                                                                                                                                                                  |\n| `rejected`             | Rejected             | A create Performance Monitoring Job request fails validation and is rejected with error indications by the Seller/Server|\n| `resourceUnavailable`  | Resource Unavailable | A Performance Monitoring Job cannot be allocated necessary resources when moving to execution (In-Progress state|\n| `scheduled`            | Scheduled            | A Performance Monitoring Job is created that does not have an immediate start time. The Performance Monitoring Job stays Scheduled until the start time is reached. The Performance Monitoring Job then moves to In-Progress. If the Cancel Performance Monitoring Job request is accepted, the Job moves to the Cancelled state. If the Modify Performance Monitoring Job request is accepted, the Job moves to the Pending state.                                                                                                                                                                                                                                              |\n| `suspended`            | Suspended            | A Suspend Performance Monitoring Job request is accepted by the Seller/Server. The Job remains Suspended until a Resume Performance Monitoring Job request is accepted by the Seller/Server at which time the Job returns to the In-Progress state. If the Cancel Performance Monitoring Job request is accepted, the Job moves to the Cancelled state. If the Modify Performance Monitoring Job request is accepted, the Job moves to the Pending state.                                                                                                                                                                                                                        |",
        "enum": [
          "acknowledged",
          "cancelled",
          "completed",
          "inProgress",
          "pending",
          "rejected",
          "resourceUnavailable",
          "scheduled",
          "suspended"
        ]
      },
      "PerformanceJob_Common": {
        "required": [
          "performanceProfile",
          "servicePayloadSpecificAttributes"
        ],
        "type": "object",
        "properties": {
          "buyerJobId": {
            "type": "string",
            "description": "Identifier of the job understood and assigned by the Buyer/Client."
          },
          "consumingApplicationId": {
            "type": "string",
            "description": "Identifier of consuming application"
          },
          "description": {
            "type": "string",
            "description": "A free-text description of the Performance Job"
          },
          "fileTransferData": {
            "$ref": "#/components/schemas/FileTransferData"
          },
          "performanceProfile": {
            "$ref": "#/components/schemas/PerformanceProfileValue"
          },
          "producingApplicationId": {
            "type": "string",
            "description": "Identifier of producing application"
          },
          "scheduleDefinition": {
            "$ref": "#/components/schemas/ScheduleDefinition"
          },
          "servicePayloadSpecificAttributes": {
            "$ref": "#/components/schemas/ServicePayloadSpecificAttributes"
          }
        },
        "description": "A Performance Monitoring Job specifies the performance monitoring objectives specific to each subject of monitoring which could be an  ordered pair (i.e., two UNIs) or an entity (i.e., port)."
      },
      "PerformanceJob_Create": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PerformanceJob_Common"
          },
          {
            "type": "object",
            "description": "A Performance Monitoring Job specifies the performance monitoring objectives specific to each subject of monitoring which could be an ordered pair (i.e., two UNIs) or an entity (i.e., port)."
          }
        ]
      },
      "PerformanceJob_Find": {
        "required": [
          "creationDate",
          "id",
          "performanceProfile",
          "state"
        ],
        "type": "object",
        "properties": {
          "buyerJobId": {
            "type": "string",
            "description": "Identifier of the job understood and assigned by the Buyer/Client."
          },
          "consumingApplicationId": {
            "type": "string",
            "description": "Identifier of consuming application"
          },
          "creationDate": {
            "type": "string",
            "description": "Date when the job was created.",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "A free-text description of the Performance Job"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier"
          },
          "performanceProfile": {
            "$ref": "#/components/schemas/PerformanceProfileValue"
          },
          "producingApplicationId": {
            "type": "string",
            "description": "Identifier of producing application"
          },
          "scheduleDefinition": {
            "$ref": "#/components/schemas/ScheduleDefinition"
          },
          "state": {
            "$ref": "#/components/schemas/PerformanceJobStateType"
          }
        },
        "description": "This class represents a single list item for the response of the `listPerformanceJob` operation."
      },
      "PerformanceProfileRefOrValue": {
        "required": [
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "This field is used as a discriminator to differentiate if an object relates directly to the Performance Profile entity or defines values from the PerformanceProfile type."
          }
        },
        "description": "Defines the reference to Performance Monitoring Profile or defines values from PerformanceProfile type.",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PerformanceProfileRef": "#/components/schemas/PerformanceProfileRef",
            "PerformanceProfileValue": "#/components/schemas/PerformanceProfileValue"
          }
        }
      },
      "PerformanceProfileRef": {
        "description": "A reference to a Performance Profile resource",
        "allOf": [
          {
            "$ref": "#/components/schemas/PerformanceProfileRefOrValue"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "description": "Hyperlink to the referenced Performance Profile",
                "format": "uri"
              },
              "id": {
                "type": "string",
                "description": "Identifier of the referenced Performance Profile"
              }
            }
          }
        ]
      },
      "PerformanceProfileValue": {
        "required": [
          "jobType",
          "outputFormat",
          "resultFormat"
        ],
        "type": "object",
        "properties": {
          "granularity": {
            "$ref": "#/components/schemas/Interval"
          },
          "jobPriority": {
            "type": "integer",
            "description": "The priority of the Performance Job. The way the management application will use the Job priority to schedule Job execution is application-specific and out the scope.",
            "default": 5
          },
          "jobType": {
            "$ref": "#/components/schemas/JobType"
          },
          "outputFormat": {
            "$ref": "#/components/schemas/OutputFormat"
          },
          "reportingPeriod": {
            "$ref": "#/components/schemas/Interval"
          },
          "resultFormat": {
            "$ref": "#/components/schemas/ResultFormat"
          }
        },
        "description": "Direct assignment of values defined by PerformanceProfile type to PerformanceJob object. Necessary when PerformanceJob is created without reference to PerformanceProfile."
      },
      "PerformanceReport": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PerformanceReport_Common"
          },
          {
            "required": [
              "creationDate",
              "id",
              "state"
            ],
            "type": "object",
            "properties": {
              "creationDate": {
                "type": "string",
                "description": "Date when the Performance Report was created.",
                "format": "date-time"
              },
              "failureReason": {
                "type": "string",
                "description": "Reason in case report generation failed."
              },
              "href": {
                "type": "string",
                "description": "Hyperlink reference",
                "format": "uri"
              },
              "id": {
                "type": "string",
                "description": "Unique identifier"
              },
              "lastModifiedDate": {
                "type": "string",
                "description": "Date when the report was last modified.",
                "format": "date-time"
              },
              "performanceJob": {
                "$ref": "#/components/schemas/PerformanceJobRefOrValue"
              },
              "reportContent": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReportContentItem"
                }
              },
              "reportUrl": {
                "$ref": "#/components/schemas/AttachmentURL"
              },
              "state": {
                "$ref": "#/components/schemas/PerformanceReportStateType"
              }
            },
            "description": "The execution of PM Job results in Performance Measurement collections that provide Buyer/Client with performance objective results."
          }
        ]
      },
      "PerformanceReportComplexQuery": {
        "type": "object",
        "properties": {
          "consumingApplicationId": {
            "type": "string",
            "description": "Identifier of consuming application"
          },
          "creationDate": {
            "type": "string",
            "description": "Date when the Performance Report was created.",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "A free-text description of the performance report"
          },
          "granularity": {
            "$ref": "#/components/schemas/Interval"
          },
          "outputFormat": {
            "$ref": "#/components/schemas/OutputFormat"
          },
          "performanceJob": {
            "$ref": "#/components/schemas/PerformanceJobRef"
          },
          "performanceReport": {
            "$ref": "#/components/schemas/PerformanceReportRef"
          },
          "producingApplicationId": {
            "type": "string",
            "description": "Identifier of producing application"
          },
          "reportingTimeframe": {
            "$ref": "#/components/schemas/ReportingTimeframe"
          },
          "resultFormat": {
            "$ref": "#/components/schemas/ResultFormat"
          },
          "servicePayloadSpecificAttributes": {
            "$ref": "#/components/schemas/ServicePayloadSpecificAttributes"
          },
          "state": {
            "$ref": "#/components/schemas/PerformanceReportStateType"
          }
        },
        "description": "Performance Report Complex Query entity is used to perform  searches on Performance Report entities, including clauses based on ServicePayloadSpecificAttributes."
      },
      "PerformanceReportComplexQuery_Create": {
        "type": "object",
        "properties": {
          "consumingApplicationId": {
            "type": "string",
            "description": "Identifier of consuming application"
          },
          "creationDate.gt": {
            "type": "string",
            "description": "Date when the Performance Report was created - greater than.",
            "format": "date-time"
          },
          "creationDate.lt": {
            "type": "string",
            "description": "Date when the Performance Report was created - lower than.",
            "format": "date-time"
          },
          "granularity": {
            "$ref": "#/components/schemas/Interval"
          },
          "outputFormat": {
            "$ref": "#/components/schemas/OutputFormat"
          },
          "performanceJob": {
            "$ref": "#/components/schemas/PerformanceJobRef"
          },
          "producingApplicationId": {
            "type": "string",
            "description": "Identifier of producing application"
          },
          "reportingTimeframe.startDate.gt": {
            "type": "string",
            "description": "Start date of reporting timeframe - greater than.",
            "format": "date-time"
          },
          "reportingTimeframe.startDate.lt": {
            "type": "string",
            "description": "Start date of reporting timeframe - lower than.",
            "format": "date-time"
          },
          "reportingTimeframe.endDate.gt": {
            "type": "string",
            "description": "End date of reporting timeframe - greater than.",
            "format": "date-time"
          },
          "reportingTimeframe.endDate.lt": {
            "type": "string",
            "description": "End date of reporting timeframe - lower than.",
            "format": "date-time"
          },
          "resultFormat": {
            "$ref": "#/components/schemas/ResultFormat"
          },
          "servicePayloadSpecificAttributes": {
            "$ref": "#/components/schemas/ServicePayloadSpecificAttributes"
          },
          "state": {
            "$ref": "#/components/schemas/PerformanceReportStateType"
          }
        },
        "description": "Performance Report Complex Query entity is used to perform  searches on Performance Report entities, including clauses based on ServicePayloadSpecificAttributes."
      },
      "PerformanceReportRef": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "Hyperlink to the referenced Performance Report",
            "format": "uri"
          },
          "id": {
            "type": "string",
            "description": "Identifier of the referenced Performance Report"
          }
        },
        "description": "A reference to a Performance Report resource"
      },
      "PerformanceReportStateType": {
        "type": "string",
        "description": "Possible values for the state of a Performance Report.\n\n| State        | Description                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| ------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| acknowledged | A Performance Report request has been received by Seller/Server and has passed basic validations. Performance Report Identifier is assigned in the Acknowledged state. The report remains Acknowledged until all validations as applicable are completed. If the attributes are validated, the Performance Report moves to the In-Progress state. If not all attributes are validated, the report moves to the Rejected state. |\n| completed    | A Performance Report is completed and results are available.                                                                                                                                                                                                                                                                                                                                                                                |\n| failed       | A Performance Report processing has failed.                                                                                                                                                                                                                                                                                                                                                                                                 |\n| inProgress   | A Performance Report has successfully passed the validations checks and the report processing has started.                                                                                                                                                                                                                                                                                                                                  |\n| rejected     | This state indicates that: <br>- Invalid information is provided through the `PerformanceReport` request <br>- The request fails to meet validation rules for `PerformanceReport` delivery (processing).                                                                                                                                                                                                                                    |",
        "enum": [
          "acknowledged",
          "completed",
          "failed",
          "inProgress",
          "rejected"
        ]
      },
      "PerformanceReport_Common": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A free-text description of the performance report"
          },
          "reportingTimeframe": {
            "$ref": "#/components/schemas/ReportingTimeframe"
          }
        },
        "description": "The execution of PM Job results in Performance Measurement collections that provide Buyer/Client with performance objectives results."
      },
      "PerformanceReport_Create": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PerformanceReport_Common"
          },
          {
            "required": [
              "performanceJob"
            ],
            "type": "object",
            "properties": {
              "performanceJob": {
                "$ref": "#/components/schemas/PerformanceJobValue"
              }
            },
            "description": "In some cases, performance statistics are generated without  provisioning a PM Job. These statistics can be collected with  an ad-hoc Performance Report creation."
          }
        ]
      },
      "PerformanceReport_Find": {
        "required": [
          "creationDate",
          "id",
          "state"
        ],
        "type": "object",
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "Date when the report was created.",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "A free-text description of the Performance Report"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier"
          },
          "performanceJob": {
            "$ref": "#/components/schemas/PerformanceJobRefOrValue"
          },
          "reportingTimeframe": {
            "$ref": "#/components/schemas/ReportingTimeframe"
          },
          "state": {
            "$ref": "#/components/schemas/PerformanceReportStateType"
          }
        },
        "description": "This class represents a single list item for the response of the `listPerformanceReport` operation."
      },
      "RecurringFrequency": {
        "required": [
          "recurringFrequencyUnits",
          "recurringFrequencyValue"
        ],
        "type": "object",
        "properties": {
          "recurringFrequencyValue": {
            "minimum": 1,
            "type": "integer",
            "description": "The value of the recurrence as an integer. For example,  if the recurring frequency is 2 weeks this value is 2."
          },
          "recurringFrequencyUnits": {
            "type": "string",
            "description": "The unit of measure in recurring frequency. For example, if a recurring frequency is 2 weeks this value is WEEKS.",
            "enum": [
              "MINUTES",
              "HOURS",
              "DAYS",
              "WEEKS",
              "MONTHS"
            ]
          }
        },
        "description": "A recurring frequency to run a job within a timeframe  defined by schedule definition, for example,  every 5 minutes, 15 minutes, 1 hour, 1 day"
      },
      "ReportContentItem": {
        "required": [
          "measurementDataPoint",
          "measurementTime"
        ],
        "type": "object",
        "properties": {
          "measurementTime": {
            "$ref": "#/components/schemas/MeasurementTime"
          },
          "measurementDataPoints": {
            "type": "array",
            "description": "List of performance monitoring values measured in the related timeframe.",
            "items": {
              "$ref": "#/components/schemas/ResultPayload"
            }
          }
        },
        "description": "Single item of the performance monitoring results in case result format was set to payload. Each item contains the timeframe of the collected data and a list of values measured in that timeframe."
      },
      "ReportingTimeframe": {
        "type": "object",
        "properties": {
          "reportingStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "reportingEndDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Specifies the date range between which data points will be included in the report."
      },
      "ResultFormat": {
        "type": "string",
        "description": "List of possible result formats that define how Seller/Server will deliver Performance Report to the Buyer/Client.",
        "enum": [
          "payload",
          "attachment"
        ]
      },
      "ResultPayload": {
        "required": [
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "The name that uniquely identifies the type of performance monitoring results that are returned by the Performance Report. In the case of MEF services, this is the URN provided in the performance monitoring results specification. The named type must be a subclass of ResultPayload."
          }
        },
        "description": "ResultPayload is used as an extension point for MEF-specific service performance monitoring results. The `@type` attribute is used as a discriminator.",
        "discriminator": {
          "propertyName": "@type"
        }
      },
      "ResumePerformanceJob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumePerformanceJob_Common"
          },
          {
            "required": [
              "creationDate",
              "id",
              "state"
            ],
            "type": "object",
            "properties": {
              "creationDate": {
                "type": "string",
                "description": "Date when the Suspend Performance Job was created.",
                "format": "date-time"
              },
              "href": {
                "type": "string",
                "description": "Hyperlink to the Resume Performance Job entity",
                "format": "uri"
              },
              "id": {
                "type": "string",
                "description": "Unique identifier for the Resume Performance Job that is generated by the Seller/Server when the Resume Performance Job request `state` is set to `acknowledged`."
              },
              "resumptionDeniedReason": {
                "type": "string",
                "description": "If the Resume Performance Job request is denied by the Seller/Server, the Seller/Server provides a reason to the Buyer/Client using this attribute."
              },
              "state": {
                "$ref": "#/components/schemas/PerformanceJobProcessStateType"
              }
            },
            "description": "Request for resumption of an existing Performance job"
          }
        ]
      },
      "ResumePerformanceJob_Common": {
        "required": [
          "performanceJob"
        ],
        "type": "object",
        "properties": {
          "performanceJob": {
            "$ref": "#/components/schemas/PerformanceJobRef"
          },
          "resumptionReason": {
            "type": "string",
            "description": "An optional attribute that allows the Buyer/Client to provide additional detail to the Seller/Server on the reason for resuming Performance Job."
          }
        },
        "description": "Request for resumption of an existing Performance Job"
      },
      "ResumePerformanceJob_Create": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumePerformanceJob_Common"
          },
          {
            "type": "object",
            "description": "Request for resumption of an existing Performance Job"
          }
        ]
      },
      "ResumePerformanceJob_Find": {
        "required": [
          "creationDate",
          "id",
          "performanceJob",
          "state"
        ],
        "type": "object",
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "Date when the Resume Performance Job was created.",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the Resume Performance Job that is generated by the Seller/Server when the Resume Performance Job request `state` is set to `acknowledged`."
          },
          "performanceJob": {
            "$ref": "#/components/schemas/PerformanceJobRef"
          },
          "state": {
            "$ref": "#/components/schemas/PerformanceJobProcessStateType"
          }
        },
        "description": "This class represents a single list item for the response of  `listResumePerformanceJob`"
      },
      "ScheduleDefinition": {
        "type": "object",
        "properties": {
          "scheduleDefinitionStartTime": {
            "type": "string",
            "description": "The Start time of the Schedule Definition. If the attribute is empty the Schedule starts immediately after provisioning of the Job. ",
            "format": "date-time"
          },
          "scheduleDefinitionEndTime": {
            "type": "string",
            "description": "The Endtime of the Schedule Definition. If the attribute is empty the Schedule runs forever, not having a time constraint.",
            "format": "date-time"
          },
          "recurringFrequency": {
            "$ref": "#/components/schemas/RecurringFrequency"
          },
          "scheduleDefinitionHourRange": {
            "type": "array",
            "description": "A list of time ranges within a specific day that the schedule will be active on, for example, 08:00-12:00, 16:00-19:00.",
            "items": {
              "$ref": "#/components/schemas/HourRange"
            }
          },
          "monthlyScheduleDayOfWeekDefinition": {
            "$ref": "#/components/schemas/MonthlyScheduleDayOfWeekDefinition"
          },
          "weeklyScheduledDefinition": {
            "type": "array",
            "description": "The weekly schedule is used to define a schedule that is based on the days of the week, e.g. a schedule that will be active only on Monday and Tuesday.",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            }
          }
        },
        "description": "The schedule definition for running jobs."
      },
      "ServicePayloadSpecificAttributes": {
        "required": [
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "Uniquely identifies the type of performance monitoring configuration that specifies PM objectives. In the case of MEF services, this is the URN provided in the performance monitoring configuration specification. The named type must be a subclass of ServicePayloadSpecificAttributes."
          }
        },
        "description": "ServicePayloadSpecificAttributes is used as an extension point for  MEF-specific service performance monitoring configuration. It includes a definition of service/entity and applicable performance monitoring objectives. The `@type` attribute is used as a discriminator.",
        "discriminator": {
          "propertyName": "@type"
        }
      },
      "SuspendPerformanceJob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SuspendPerformanceJob_Common"
          },
          {
            "required": [
              "creationDate",
              "id",
              "state"
            ],
            "type": "object",
            "properties": {
              "creationDate": {
                "type": "string",
                "description": "Date when the Suspend Performance Job was created.",
                "format": "date-time"
              },
              "href": {
                "type": "string",
                "description": "Hyperlink to the Suspend Performance Job entity",
                "format": "uri"
              },
              "id": {
                "type": "string",
                "description": "Unique identifier for the Suspend Performance Job that is generated by the Seller/Server when the Suspend Performance Job request `state`  is set to `acknowledged`."
              },
              "state": {
                "$ref": "#/components/schemas/PerformanceJobProcessStateType"
              },
              "suspensionDeniedReason": {
                "type": "string",
                "description": "If the Suspend Performance Job request is denied by the  Seller/Server, the Seller/Server provides a reason to the Buyer/Client using this attribute."
              }
            },
            "description": "Request for suspension of an existing Performance Job"
          }
        ]
      },
      "SuspendPerformanceJob_Common": {
        "required": [
          "performanceJob"
        ],
        "type": "object",
        "properties": {
          "performanceJob": {
            "$ref": "#/components/schemas/PerformanceJobRef"
          },
          "suspensionReason": {
            "type": "string",
            "description": "An optional attribute that allows the Buyer/Client to provide additional detail to the Seller/Server on the reason for suspending Performance Job."
          }
        },
        "description": "Request for suspension of an existing Performance Job"
      },
      "SuspendPerformanceJob_Create": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SuspendPerformanceJob_Common"
          },
          {
            "type": "object",
            "description": "Request for suspension of an existing Performance Job"
          }
        ]
      },
      "SuspendPerformanceJob_Find": {
        "required": [
          "creationDate",
          "id",
          "performanceJob",
          "state"
        ],
        "type": "object",
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "Date when the Suspend Performance Job was created.",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the Suspend Performance Job that is generated by the Seller/Server when the Suspend Performance Job request `state` is set to `acknowledged`."
          },
          "performanceJob": {
            "$ref": "#/components/schemas/PerformanceJobRef"
          },
          "state": {
            "$ref": "#/components/schemas/PerformanceJobProcessStateType"
          }
        },
        "description": "This class represents a single list item for the response of  `listSuspendPerformanceJob`"
      },
      "Extensible": {
        "required": [
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "When sub-classing, this defines the sub-class Extensible name"
          },
          "@baseType": {
            "type": "string",
            "description": "When sub-classing, this defines the super-class"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
          }
        },
        "description": "Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means that the Entity described by the schema  MUST be extended with the @type"
      }
    }
  }
}