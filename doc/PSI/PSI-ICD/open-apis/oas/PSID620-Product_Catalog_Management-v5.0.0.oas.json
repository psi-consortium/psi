{
  "openapi": "3.0.1",
  "info": {
    "title": "Product Catalog Management",
    "description": "Product Catalog API is one of Catalog Management API Family. Product Catalog API goal is to provide a catalog of products. \n### Operations\nProduct Catalog API performs the following operations on the resources :\n- Retrieve an entity or a collection of entities depending on filter criteria\n- Partial update of an entity (including updating rules)\n- Create an entity (including default values and creation rules)\n- Delete an entity\n- Manage notification of events",
    "version": "5.0.0"
  },
  "servers": [
    {
      "url": "/psi-api/productCatalogManagement/v2/"
    }
  ],
  "tags": [
    {
      "name": "productOffering",
      "description": "Operations for ProductOffering Resource"
    },
    {
      "name": "productSpecification",
      "description": "Operations for ProductSpecification Resource"
    },
    {
      "name": "productTemplate",
      "description": "Operations for ProductTemplate Resource"
    }
  ],
  "paths": {
    "/productOffering": {
      "get": {
        "tags": [
          "productOffering"
        ],
        "summary": "List or find ProductOffering objects",
        "description": "List or find ProductOffering objects",
        "operationId": "listProductOffering",
        "parameters": [
          {
            "$ref": "#/components/parameters/Fields"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200ProductOfferingArray"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "tags": [
          "productOffering"
        ],
        "summary": "Creates a ProductOffering",
        "description": "This operation creates a ProductOffering entity.",
        "operationId": "createProductOffering",
        "parameters": [
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ProductOffering_FVO"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201ProductOffering"
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/productOffering/{id}": {
      "get": {
        "tags": [
          "productOffering"
        ],
        "summary": "Retrieves a ProductOffering by ID",
        "description": "This operation retrieves a ProductOffering entity. Attribute selection enabled for all first level attributes.",
        "operationId": "retrieveProductOffering",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          },
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200ProductOffering_Get"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "tags": [
          "productOffering"
        ],
        "summary": "Deletes a ProductOffering",
        "description": "This operation deletes a ProductOffering entity.",
        "operationId": "deleteProductOffering",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "responses": {
          "202": {
            "$ref": "#/components/responses/202"
          },
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "tags": [
          "productOffering"
        ],
        "summary": "Updates partially a ProductOffering",
        "description": "This operation updates partially a ProductOffering entity.",
        "operationId": "patchProductOffering",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          },
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ProductOffering_MVO"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200ProductOffering_Patch"
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/productSpecification": {
      "get": {
        "tags": [
          "productSpecification"
        ],
        "summary": "List or find ProductSpecification objects",
        "description": "List or find ProductSpecification objects",
        "operationId": "listProductSpecification",
        "parameters": [
          {
            "$ref": "#/components/parameters/Fields"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200ProductSpecificationArray"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "tags": [
          "productSpecification"
        ],
        "summary": "Creates a ProductSpecification",
        "description": "This operation creates a ProductSpecification entity.",
        "operationId": "createProductSpecification",
        "parameters": [
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ProductSpecification_FVO"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201ProductSpecification"
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/productSpecification/{id}": {
      "get": {
        "tags": [
          "productSpecification"
        ],
        "summary": "Retrieves a ProductSpecification by ID",
        "description": "This operation retrieves a ProductSpecification entity. Attribute selection enabled for all first level attributes.",
        "operationId": "retrieveProductSpecification",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          },
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200ProductSpecification_Get"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "tags": [
          "productSpecification"
        ],
        "summary": "Deletes a ProductSpecification",
        "description": "This operation deletes a ProductSpecification entity.",
        "operationId": "deleteProductSpecification",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "responses": {
          "202": {
            "$ref": "#/components/responses/202"
          },
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "tags": [
          "productSpecification"
        ],
        "summary": "Updates partially a ProductSpecification",
        "description": "This operation updates partially a ProductSpecification entity.",
        "operationId": "patchProductSpecification",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          },
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ProductSpecification_MVO"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200ProductSpecification_Patch"
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/productTemplate": {
      "get": {
        "tags": [
          "productTemplate"
        ],
        "summary": "List or find ProductTemplate objects",
        "description": "List or find ProductTemplate objects",
        "operationId": "listProductTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/Fields"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200ProductSpecificationArray"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "tags": [
          "productTemplate"
        ],
        "summary": "Creates a ProductTemplate",
        "description": "This operation creates a ProductTemplate entity.",
        "operationId": "createProductTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ProductSpecification_FVO"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201ProductSpecification"
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/productTemplate/{id}": {
      "get": {
        "tags": [
          "productTemplate"
        ],
        "summary": "Retrieves a ProductTemplate by ID",
        "description": "This operation retrieves a ProductTemplate entity. Attribute selection enabled for all first level attributes.",
        "operationId": "retrieveProductTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          },
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200ProductSpecification_Get"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "tags": [
          "productTemplate"
        ],
        "summary": "Deletes a ProductTemplate",
        "description": "This operation deletes a ProductTemplate entity.",
        "operationId": "deleteProductTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "responses": {
          "202": {
            "$ref": "#/components/responses/202"
          },
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "tags": [
          "productTemplate"
        ],
        "summary": "Updates partially a ProductTemplate",
        "description": "This operation updates partially a ProductTemplate entity.",
        "operationId": "patchProductTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          },
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ProductSpecification_MVO"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200ProductSpecification_Patch"
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "501": {
            "$ref": "#/components/responses/501"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Addressable": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "Hyperlink reference",
            "format": "uri"
          },
          "id": {
            "type": "string",
            "description": "unique identifier"
          }
        },
        "description": "Base schema for adressable entities"
      },
      "Addressable_FVO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique identifier"
          }
        },
        "description": "Base schema for adressable entities"
      },
      "AgreementRef": {
        "type": "object",
        "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "AgreementRef": "#/components/schemas/AgreementRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "AgreementRef_FVO": {
        "type": "object",
        "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "AgreementRef": "#/components/schemas/AgreementRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ]
      },
      "AgreementRef_MVO": {
        "type": "object",
        "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "AgreementRef": "#/components/schemas/AgreementRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "AllowedProductAction": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "AllowedProductAction": "#/components/schemas/AllowedProductAction"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "channel": {
                "type": "array",
                "description": "A list of sales channels in which this action is allowed; for instance Remove might be allowed only in an assisted channel not in a self-service channel",
                "example": {
                  "id": "4406",
                  "href": "https://mycsp.com:8080/tmf-api/salesChannelManagement/v4/channel/4406",
                  "name": "Online Channel",
                  "@referredType": "SalesChannel",
                  "@type": "ChannelRef",
                  "@baseType": "",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schemas/Common/ChannelRef.schema.json"
                },
                "items": {
                  "$ref": "#/components/schemas/ChannelRef"
                }
              },
              "action": {
                "type": "string",
                "description": "The name of the action",
                "example": "add"
              }
            },
            "description": "Defines an action that can be taken on a product in the inventory as part of a product order. It is expected that this entity will be attached to product catalog items such as specifications and offerings"
          }
        ]
      },
      "AllowedProductAction_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "AllowedProductAction": "#/components/schemas/AllowedProductAction_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "action"
            ],
            "type": "object",
            "properties": {
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "channel": {
                "type": "array",
                "description": "A list of sales channels in which this action is allowed; for instance Remove might be allowed only in an assisted channel not in a self-service channel",
                "example": {
                  "id": "4406",
                  "href": "https://mycsp.com:8080/tmf-api/salesChannelManagement/v4/channel/4406",
                  "name": "Online Channel",
                  "@referredType": "SalesChannel",
                  "@type": "ChannelRef",
                  "@baseType": "",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schemas/Common/ChannelRef.schema.json"
                },
                "items": {
                  "$ref": "#/components/schemas/ChannelRef_FVO"
                }
              },
              "action": {
                "type": "string",
                "description": "The name of the action",
                "example": "add"
              }
            },
            "description": "Defines an action that can be taken on a product in the inventory as part of a product order. It is expected that this entity will be attached to product catalog items such as specifications and offerings"
          }
        ]
      },
      "AllowedProductAction_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "AllowedProductAction": "#/components/schemas/AllowedProductAction_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "required": [
              "action"
            ],
            "type": "object",
            "properties": {
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "channel": {
                "type": "array",
                "description": "A list of sales channels in which this action is allowed; for instance Remove might be allowed only in an assisted channel not in a self-service channel",
                "example": {
                  "id": "4406",
                  "href": "https://mycsp.com:8080/tmf-api/salesChannelManagement/v4/channel/4406",
                  "name": "Online Channel",
                  "@referredType": "SalesChannel",
                  "@type": "ChannelRef",
                  "@baseType": "",
                  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schemas/Common/ChannelRef.schema.json"
                },
                "items": {
                  "$ref": "#/components/schemas/ChannelRef_MVO"
                }
              },
              "action": {
                "type": "string",
                "description": "The name of the action",
                "example": "add"
              }
            },
            "description": "Defines an action that can be taken on a product in the inventory as part of a product order. It is expected that this entity will be attached to product catalog items such as specifications and offerings"
          }
        ]
      },
      "AttachmentOrDocumentRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "AttachmentRef": "#/components/schemas/AttachmentOrDocumentRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "A narrative text describing the content of the attachment"
              },
              "url": {
                "type": "string",
                "description": "Link to the attachment media/content"
              }
            },
            "description": "Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures"
          }
        ]
      },
      "BundledGroupProductOffering": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Locally unique identifier of the group, useful in case the parent product offering or group includes multiple groups.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "The name of the group of child offerings. Required to distinguish several choice groups.",
            "example": "TV Channels"
          },
          "bundledProductOffering": {
            "type": "array",
            "description": "Child offerings, from which instances can be created as direct or hierarchically indirect children of the parent offering.",
            "items": {
              "$ref": "#/components/schemas/BundledProductOffering"
            }
          },
          "bundledGroupProductOffering": {
            "type": "array",
            "description": "Child groups of product offerings, to enable hierarchical sub-grouping.",
            "items": {
              "$ref": "#/components/schemas/BundledGroupProductOffering"
            }
          },
          "bundledGroupProductOfferingOption": {
            "$ref": "#/components/schemas/BundledGroupProductOfferingOption"
          }
        },
        "description": "A group of product offerings that can be chosen for instantiation of children of the parent product offering, for example a list of channels for selection under a TV offering. Sometimes known as Selection Group. The group can also hierarchically contain other groups"
      },
      "BundledGroupProductOfferingOption": {
        "type": "object",
        "properties": {
          "numberRelOfferLowerLimit": {
            "type": "integer",
            "description": "The minimum total number of instances of the child offerings directly of hierarchically in the group that should be instantiated",
            "example": 2
          },
          "numberRelOfferUpperLimit": {
            "type": "integer",
            "description": "The maximum total number of instances of the child offerings directly of hierarchically in the group that should be instantiated",
            "example": 7
          }
        },
        "description": "Defines for a BundledProductOfferingGroup (i.e. a group of multiple child offerings of a parent product offering), how many instances from the child offerings can be chosen in total. For example facilitate the choice of between 2 and 7 channel packs from a list, and cause certain items to be selected by default"
      },
      "BundledProductOffering": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "BundledProductOffering": "#/components/schemas/BundledProductOffering"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductOfferingRef"
          },
          {
            "type": "object",
            "properties": {
              "bundledProductOfferingOption": {
                "$ref": "#/components/schemas/BundledProductOfferingOption"
              }
            },
            "description": "Represents a containment of a product offering within another product offering, including specification of cardinality (e.g. is the bundled offering mandatory, how many times can it be instantiated in the parent product, etc.)."
          }
        ]
      },
      "BundledProductOfferingOption": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "BundledProductOfferingOption": "#/components/schemas/BundledProductOfferingOption"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "numberRelOfferDefault": {
                "type": "integer",
                "description": "Default number of produc offereings that should be procured as part of the related BundledProductOffering"
              },
              "numberRelOfferLowerLimit": {
                "type": "integer",
                "description": "lower limit for a product offering that can be procured as part of the related BundledProductOffering"
              },
              "numberRelOfferUpperLimit": {
                "type": "integer",
                "description": "upper limit for a product offering that can be procured as part of the related BundledProductOffering"
              }
            },
            "description": "A set of numbers that specifies the lower and upper limits for a ProductOffering that can be procured as part of the related BundledProductOffering. Values can range from 0 to unbounded"
          }
        ]
      },
      "BundledProductOfferingOption_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "BundledProductOfferingOption": "#/components/schemas/BundledProductOfferingOption_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "type": "object",
            "properties": {
              "numberRelOfferDefault": {
                "type": "integer",
                "description": "Default number of produc offereings that should be procured as part of the related BundledProductOffering"
              },
              "numberRelOfferLowerLimit": {
                "type": "integer",
                "description": "lower limit for a product offering that can be procured as part of the related BundledProductOffering"
              },
              "numberRelOfferUpperLimit": {
                "type": "integer",
                "description": "upper limit for a product offering that can be procured as part of the related BundledProductOffering"
              }
            },
            "description": "A set of numbers that specifies the lower and upper limits for a ProductOffering that can be procured as part of the related BundledProductOffering. Values can range from 0 to unbounded"
          }
        ]
      },
      "BundledProductOfferingOption_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "BundledProductOfferingOption": "#/components/schemas/BundledProductOfferingOption_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "numberRelOfferDefault": {
                "type": "integer",
                "description": "Default number of produc offereings that should be procured as part of the related BundledProductOffering"
              },
              "numberRelOfferLowerLimit": {
                "type": "integer",
                "description": "lower limit for a product offering that can be procured as part of the related BundledProductOffering"
              },
              "numberRelOfferUpperLimit": {
                "type": "integer",
                "description": "upper limit for a product offering that can be procured as part of the related BundledProductOffering"
              }
            },
            "description": "A set of numbers that specifies the lower and upper limits for a ProductOffering that can be procured as part of the related BundledProductOffering. Values can range from 0 to unbounded"
          }
        ]
      },
      "BundledProductOfferingPriceRelationship": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "BundledProductOfferingPriceRelationship": "#/components/schemas/BundledProductOfferingPriceRelationship"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Version of the referred product offering price."
              }
            },
            "description": "This represents a bundling pricing relationship, allowing a price to be composed of multiple other prices (e.g. a recurring charge and a onetime charge)."
          }
        ]
      },
      "BundledProductOffering_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "BundledProductOffering": "#/components/schemas/BundledProductOffering_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductOfferingRef_FVO"
          },
          {
            "type": "object",
            "properties": {
              "bundledProductOfferingOption": {
                "$ref": "#/components/schemas/BundledProductOfferingOption_FVO"
              }
            },
            "description": "Represents a containment of a product offering within another product offering, including specification of cardinality (e.g. is the bundled offering mandatory, how many times can it be instantiated in the parent product, etc.)."
          }
        ]
      },
      "BundledProductOffering_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "BundledProductOffering": "#/components/schemas/BundledProductOffering_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductOfferingRef_MVO"
          },
          {
            "type": "object",
            "properties": {
              "bundledProductOfferingOption": {
                "$ref": "#/components/schemas/BundledProductOfferingOption_MVO"
              }
            },
            "description": "Represents a containment of a product offering within another product offering, including specification of cardinality (e.g. is the bundled offering mandatory, how many times can it be instantiated in the parent product, etc.)."
          }
        ]
      },
      "BundledProductSpecification": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "BundledProductSpecification": "#/components/schemas/BundledProductSpecification"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "description": "Reference of the product specification",
                "format": "uri"
              },
              "id": {
                "type": "string",
                "description": "Unique identifier of the product specification"
              },
              "lifecycleStatus": {
                "type": "string",
                "description": "Used to indicate the current lifecycle status"
              },
              "name": {
                "type": "string",
                "description": "Name of the product specification"
              },
              "version": {
                "type": "string",
                "description": "Version of the product specification"
              }
            },
            "description": "A type of ProductSpecification that belongs to a grouping of ProductSpecifications made available to the market. It inherits of all attributes of ProductSpecification."
          }
        ]
      },
      "BundledProductSpecification_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "BundledProductSpecification": "#/components/schemas/BundledProductSpecification_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "description": "Reference of the product specification",
                "format": "uri"
              },
              "id": {
                "type": "string",
                "description": "Unique identifier of the product specification"
              },
              "lifecycleStatus": {
                "type": "string",
                "description": "Used to indicate the current lifecycle status"
              },
              "name": {
                "type": "string",
                "description": "Name of the product specification"
              },
              "version": {
                "type": "string",
                "description": "Version of the product specification"
              }
            },
            "description": "A type of ProductSpecification that belongs to a grouping of ProductSpecifications made available to the market. It inherits of all attributes of ProductSpecification."
          }
        ]
      },
      "BundledProductSpecification_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "BundledProductSpecification": "#/components/schemas/BundledProductSpecification_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "description": "Reference of the product specification",
                "format": "uri"
              },
              "id": {
                "type": "string",
                "description": "Unique identifier of the product specification"
              },
              "lifecycleStatus": {
                "type": "string",
                "description": "Used to indicate the current lifecycle status"
              },
              "name": {
                "type": "string",
                "description": "Name of the product specification"
              },
              "version": {
                "type": "string",
                "description": "Version of the product specification"
              }
            },
            "description": "A type of ProductSpecification that belongs to a grouping of ProductSpecifications made available to the market. It inherits of all attributes of ProductSpecification."
          }
        ]
      },
      "CategoryRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CategoryRef": "#/components/schemas/CategoryRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Version of the category"
              }
            },
            "description": "Reference to a category in the catalog."
          }
        ]
      },
      "CategoryRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CategoryRef": "#/components/schemas/CategoryRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Version of the category"
              }
            },
            "description": "Reference to a category in the catalog."
          }
        ]
      },
      "CategoryRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CategoryRef": "#/components/schemas/CategoryRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Version of the category"
              }
            },
            "description": "Reference to a category in the catalog."
          }
        ]
      },
      "ChannelRef": {
        "type": "object",
        "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ChannelRef": "#/components/schemas/ChannelRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "ChannelRef_FVO": {
        "type": "object",
        "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ChannelRef": "#/components/schemas/ChannelRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ]
      },
      "ChannelRef_MVO": {
        "type": "object",
        "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ChannelRef": "#/components/schemas/ChannelRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "CharacteristicSpecification": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecification": "#/components/schemas/CharacteristicSpecification"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique ID for the characteristic"
              },
              "name": {
                "type": "string",
                "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
              },
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
              },
              "description": {
                "type": "string",
                "description": "A narrative that explains the CharacteristicSpecification."
              },
              "configurable": {
                "type": "boolean",
                "description": "If true, the Boolean indicates that the target Characteristic is configurable"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "minCardinality": {
                "type": "integer",
                "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
              },
              "maxCardinality": {
                "type": "integer",
                "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
              },
              "isUnique": {
                "type": "boolean",
                "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
              },
              "regex": {
                "type": "string",
                "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
              },
              "extensible": {
                "type": "boolean",
                "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
              },
              "@valueSchemaLocation": {
                "type": "string",
                "description": "This (optional) field provides a link to the schema describing the value type."
              },
              "charSpecRelationship": {
                "type": "array",
                "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecificationRelationship"
                }
              },
              "characteristicValueSpecification": {
                "type": "array",
                "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicValueSpecification"
                }
              }
            },
            "description": "This class defines a characteristic specification."
          }
        ]
      },
      "CharacteristicSpecificationRelationship": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecificationRelationship": "#/components/schemas/CharacteristicSpecificationRelationship"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
              },
              "name": {
                "type": "string",
                "description": "Name of the target characteristic within the specification"
              },
              "characteristicSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the characteristic within the specification"
              },
              "parentSpecificationHref": {
                "type": "string",
                "description": "Hyperlink reference to the parent specification containing the target characteristic",
                "format": "uri"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "parentSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the parent specification containing the target characteristic"
              }
            },
            "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Characteristic specifications. The specification characteristic is embedded within the specification whose ID and href are in this entity, and identified by its ID."
          }
        ]
      },
      "CharacteristicSpecificationRelationship_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecificationRelationship": "#/components/schemas/CharacteristicSpecificationRelationship_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "name",
              "parentSpecificationId",
              "relationshipType"
            ],
            "type": "object",
            "properties": {
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
              },
              "name": {
                "type": "string",
                "description": "Name of the target characteristic within the specification"
              },
              "characteristicSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the characteristic within the specification"
              },
              "parentSpecificationHref": {
                "type": "string",
                "description": "Hyperlink reference to the parent specification containing the target characteristic",
                "format": "uri"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "parentSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the parent specification containing the target characteristic"
              }
            },
            "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Characteristic specifications. The specification characteristic is embedded within the specification whose ID and href are in this entity, and identified by its ID."
          }
        ]
      },
      "CharacteristicSpecificationRelationship_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecificationRelationship": "#/components/schemas/CharacteristicSpecificationRelationship_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "required": [
              "name",
              "parentSpecificationId",
              "relationshipType"
            ],
            "type": "object",
            "properties": {
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
              },
              "name": {
                "type": "string",
                "description": "Name of the target characteristic within the specification"
              },
              "characteristicSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the characteristic within the specification"
              },
              "parentSpecificationHref": {
                "type": "string",
                "description": "Hyperlink reference to the parent specification containing the target characteristic",
                "format": "uri"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "parentSpecificationId": {
                "type": "string",
                "description": "Unique identifier of the parent specification containing the target characteristic"
              }
            },
            "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Characteristic specifications. The specification characteristic is embedded within the specification whose ID and href are in this entity, and identified by its ID."
          }
        ]
      },
      "CharacteristicSpecification_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecification": "#/components/schemas/CharacteristicSpecification_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "name",
              "valueType"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique ID for the characteristic"
              },
              "name": {
                "type": "string",
                "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
              },
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
              },
              "description": {
                "type": "string",
                "description": "A narrative that explains the CharacteristicSpecification."
              },
              "configurable": {
                "type": "boolean",
                "description": "If true, the Boolean indicates that the target Characteristic is configurable"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "minCardinality": {
                "type": "integer",
                "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
              },
              "maxCardinality": {
                "type": "integer",
                "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
              },
              "isUnique": {
                "type": "boolean",
                "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
              },
              "regex": {
                "type": "string",
                "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
              },
              "extensible": {
                "type": "boolean",
                "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
              },
              "@valueSchemaLocation": {
                "type": "string",
                "description": "This (optional) field provides a link to the schema describing the value type."
              },
              "charSpecRelationship": {
                "type": "array",
                "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecificationRelationship_FVO"
                }
              },
              "characteristicValueSpecification": {
                "type": "array",
                "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
                }
              }
            },
            "description": "This class defines a characteristic specification."
          }
        ]
      },
      "CharacteristicSpecification_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicSpecification": "#/components/schemas/CharacteristicSpecification_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "required": [
              "name",
              "valueType"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique ID for the characteristic"
              },
              "name": {
                "type": "string",
                "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
              },
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
              },
              "description": {
                "type": "string",
                "description": "A narrative that explains the CharacteristicSpecification."
              },
              "configurable": {
                "type": "boolean",
                "description": "If true, the Boolean indicates that the target Characteristic is configurable"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "minCardinality": {
                "type": "integer",
                "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
              },
              "maxCardinality": {
                "type": "integer",
                "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
              },
              "isUnique": {
                "type": "boolean",
                "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
              },
              "regex": {
                "type": "string",
                "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
              },
              "extensible": {
                "type": "boolean",
                "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
              },
              "@valueSchemaLocation": {
                "type": "string",
                "description": "This (optional) field provides a link to the schema describing the value type."
              },
              "charSpecRelationship": {
                "type": "array",
                "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecificationRelationship_MVO"
                }
              },
              "characteristicValueSpecification": {
                "type": "array",
                "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
                }
              }
            },
            "description": "This class defines a characteristic specification."
          }
        ]
      },
      "CharacteristicValueSpecification": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicValueSpecification": "#/components/schemas/CharacteristicValueSpecification",
            "StringCharacteristicValueSpecification": "#/components/schemas/StringCharacteristicValueSpecification",
            "StringArrayCharacteristicValueSpecification": "#/components/schemas/StringArrayCharacteristicValueSpecification",
            "ObjectCharacteristicValueSpecification": "#/components/schemas/ObjectCharacteristicValueSpecification",
            "ObjectArrayCharacteristicValueSpecification": "#/components/schemas/ObjectArrayCharacteristicValueSpecification",
            "NumberCharacteristicValueSpecification": "#/components/schemas/NumberCharacteristicValueSpecification",
            "NumberArrayCharacteristicValueSpecification": "#/components/schemas/NumberArrayCharacteristicValueSpecification",
            "MapCharacteristicValueSpecification": "#/components/schemas/MapCharacteristicValueSpecification",
            "MapArrayCharacteristicValueSpecification": "#/components/schemas/MapArrayCharacteristicValueSpecification",
            "IntegerCharacteristicValueSpecification": "#/components/schemas/IntegerCharacteristicValueSpecification",
            "IntegerArrayCharacteristicValueSpecification": "#/components/schemas/IntegerArrayCharacteristicValueSpecification"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
              },
              "isDefault": {
                "type": "boolean",
                "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
              },
              "unitOfMeasure": {
                "type": "string",
                "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "valueFrom": {
                "type": "integer",
                "description": "The low range value that a characteristic can take on"
              },
              "valueTo": {
                "type": "integer",
                "description": "The upper range value that a characteristic can take on"
              },
              "rangeInterval": {
                "type": "string",
                "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
              },
              "regex": {
                "type": "string",
                "description": "A regular expression constraint for given value"
              }
            },
            "description": "specification of a value (number or text or an object) that can be assigned to a Characteristic. This is an abstract base class, the actual value is in one of the strongly-typed subclasses"
          }
        ]
      },
      "CharacteristicValueSpecification_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicValueSpecification": "#/components/schemas/CharacteristicValueSpecification_FVO",
            "StringCharacteristicValueSpecification": "#/components/schemas/StringCharacteristicValueSpecification_FVO",
            "StringArrayCharacteristicValueSpecification": "#/components/schemas/StringArrayCharacteristicValueSpecification_FVO",
            "ObjectCharacteristicValueSpecification": "#/components/schemas/ObjectCharacteristicValueSpecification_FVO",
            "ObjectArrayCharacteristicValueSpecification": "#/components/schemas/ObjectArrayCharacteristicValueSpecification_FVO",
            "NumberCharacteristicValueSpecification": "#/components/schemas/NumberCharacteristicValueSpecification_FVO",
            "NumberArrayCharacteristicValueSpecification": "#/components/schemas/NumberArrayCharacteristicValueSpecification_FVO",
            "MapCharacteristicValueSpecification": "#/components/schemas/MapCharacteristicValueSpecification_FVO",
            "MapArrayCharacteristicValueSpecification": "#/components/schemas/MapArrayCharacteristicValueSpecification_FVO",
            "IntegerCharacteristicValueSpecification": "#/components/schemas/IntegerCharacteristicValueSpecification_FVO",
            "IntegerArrayCharacteristicValueSpecification": "#/components/schemas/IntegerArrayCharacteristicValueSpecification_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "type": "object",
            "properties": {
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
              },
              "isDefault": {
                "type": "boolean",
                "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
              },
              "unitOfMeasure": {
                "type": "string",
                "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "valueFrom": {
                "type": "integer",
                "description": "The low range value that a characteristic can take on"
              },
              "valueTo": {
                "type": "integer",
                "description": "The upper range value that a characteristic can take on"
              },
              "rangeInterval": {
                "type": "string",
                "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
              },
              "regex": {
                "type": "string",
                "description": "A regular expression constraint for given value"
              }
            },
            "description": "specification of a value (number or text or an object) that can be assigned to a Characteristic. This is an abstract base class, the actual value is in one of the strongly-typed subclasses"
          }
        ]
      },
      "CharacteristicValueSpecification_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicValueSpecification": "#/components/schemas/CharacteristicValueSpecification_MVO",
            "StringCharacteristicValueSpecification": "#/components/schemas/StringCharacteristicValueSpecification_MVO",
            "StringArrayCharacteristicValueSpecification": "#/components/schemas/StringArrayCharacteristicValueSpecification_MVO",
            "ObjectCharacteristicValueSpecification": "#/components/schemas/ObjectCharacteristicValueSpecification_MVO",
            "ObjectArrayCharacteristicValueSpecification": "#/components/schemas/ObjectArrayCharacteristicValueSpecification_MVO",
            "NumberCharacteristicValueSpecification": "#/components/schemas/NumberCharacteristicValueSpecification_MVO",
            "NumberArrayCharacteristicValueSpecification": "#/components/schemas/NumberArrayCharacteristicValueSpecification_MVO",
            "MapCharacteristicValueSpecification": "#/components/schemas/MapCharacteristicValueSpecification_MVO",
            "MapArrayCharacteristicValueSpecification": "#/components/schemas/MapArrayCharacteristicValueSpecification_MVO",
            "IntegerCharacteristicValueSpecification": "#/components/schemas/IntegerCharacteristicValueSpecification_MVO",
            "IntegerArrayCharacteristicValueSpecification": "#/components/schemas/IntegerArrayCharacteristicValueSpecification_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
              },
              "isDefault": {
                "type": "boolean",
                "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
              },
              "unitOfMeasure": {
                "type": "string",
                "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "valueFrom": {
                "type": "integer",
                "description": "The low range value that a characteristic can take on"
              },
              "valueTo": {
                "type": "integer",
                "description": "The upper range value that a characteristic can take on"
              },
              "rangeInterval": {
                "type": "string",
                "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
              },
              "regex": {
                "type": "string",
                "description": "A regular expression constraint for given value"
              }
            },
            "description": "specification of a value (number or text or an object) that can be assigned to a Characteristic. This is an abstract base class, the actual value is in one of the strongly-typed subclasses"
          }
        ]
      },
      "Duration": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "Time interval (number of seconds, minutes, hours, etc.)"
          },
          "units": {
            "type": "string",
            "description": "Unit of time (seconds, minutes, hours, etc.)"
          }
        },
        "description": "A time interval in a given unit of time"
      },
      "Entity": {
        "type": "object",
        "description": "Base entity schema for use in TMForum Open-APIs. Property.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/Addressable"
          }
        ]
      },
      "EntityRef": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/Addressable"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the referred entity."
              },
              "href": {
                "type": "string",
                "description": "The URI of the referred entity.",
                "format": "uri"
              },
              "name": {
                "type": "string",
                "description": "Name of the referred entity."
              },
              "@referredType": {
                "type": "string",
                "description": "The actual type of the target instance when needed for disambiguation."
              }
            },
            "description": "Entity reference schema to be use for all entityRef class."
          }
        ]
      },
      "EntityRef_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "$ref": "#/components/schemas/Addressable_FVO"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the referred entity."
              },
              "href": {
                "type": "string",
                "description": "The URI of the referred entity.",
                "format": "uri"
              },
              "name": {
                "type": "string",
                "description": "Name of the referred entity."
              },
              "@referredType": {
                "type": "string",
                "description": "The actual type of the target instance when needed for disambiguation."
              }
            },
            "description": "Entity reference schema to be use for all entityRef class."
          }
        ]
      },
      "Entity_FVO": {
        "type": "object",
        "description": "Base entity schema for use in TMForum Open-APIs. Property.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "$ref": "#/components/schemas/Addressable_FVO"
          }
        ]
      },
      "Entity_MVO": {
        "type": "object",
        "description": "Base entity schema for use in TMForum Open-APIs. Property.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          }
        ]
      },
      "Extensible": {
        "required": [
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "When sub-classing, this defines the sub-class Extensible name"
          },
          "@baseType": {
            "type": "string",
            "description": "When sub-classing, this defines the super-class"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
          }
        },
        "description": "Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means that the Entity described by the schema  MUST be extended with the @type"
      },
      "Extensible_FVO": {
        "required": [
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "When sub-classing, this defines the sub-class Extensible name"
          },
          "@baseType": {
            "type": "string",
            "description": "When sub-classing, this defines the super-class"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
          }
        },
        "description": "Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means that the Entity described by the schema  MUST be extended with the @type"
      },
      "ExternalIdentifier": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ExternalIdentifier": "#/components/schemas/ExternalIdentifier"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "Name of the external system that owns the entity.",
                "example": "MagentoCommerce"
              },
              "externalIdentifierType": {
                "type": "string",
                "description": "Type of the identification, typically would be the type of the entity within the external system",
                "example": "ProductOrder"
              },
              "id": {
                "type": "string",
                "description": "identification of the entity within the external system."
              }
            },
            "description": "An identification of an entity that is owned by or originates in a software system different from the current system, for example a ProductOrder handed off from a commerce platform into an order handling system. The structure identifies the system itself, the nature of the entity within the system (e.g. class name) and the unique ID of the entity within the system. It is anticipated that multiple external IDs can be held for a single entity, e.g. if the entity passed through multiple systems on the way to the current system. In this case the consumer is expected to sequence the IDs in the array in reverse order of provenance, i.e. most recent system first in the list."
          }
        ]
      },
      "ExternalIdentifier_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ExternalIdentifier": "#/components/schemas/ExternalIdentifier_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "Name of the external system that owns the entity.",
                "example": "MagentoCommerce"
              },
              "externalIdentifierType": {
                "type": "string",
                "description": "Type of the identification, typically would be the type of the entity within the external system",
                "example": "ProductOrder"
              },
              "id": {
                "type": "string",
                "description": "identification of the entity within the external system."
              }
            },
            "description": "An identification of an entity that is owned by or originates in a software system different from the current system, for example a ProductOrder handed off from a commerce platform into an order handling system. The structure identifies the system itself, the nature of the entity within the system (e.g. class name) and the unique ID of the entity within the system. It is anticipated that multiple external IDs can be held for a single entity, e.g. if the entity passed through multiple systems on the way to the current system. In this case the consumer is expected to sequence the IDs in the array in reverse order of provenance, i.e. most recent system first in the list."
          }
        ]
      },
      "ExternalIdentifier_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ExternalIdentifier": "#/components/schemas/ExternalIdentifier_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "Name of the external system that owns the entity.",
                "example": "MagentoCommerce"
              },
              "externalIdentifierType": {
                "type": "string",
                "description": "Type of the identification, typically would be the type of the entity within the external system",
                "example": "ProductOrder"
              },
              "id": {
                "type": "string",
                "description": "identification of the entity within the external system."
              }
            },
            "description": "An identification of an entity that is owned by or originates in a software system different from the current system, for example a ProductOrder handed off from a commerce platform into an order handling system. The structure identifies the system itself, the nature of the entity within the system (e.g. class name) and the unique ID of the entity within the system. It is anticipated that multiple external IDs can be held for a single entity, e.g. if the entity passed through multiple systems on the way to the current system. In this case the consumer is expected to sequence the IDs in the array in reverse order of provenance, i.e. most recent system first in the list."
          }
        ]
      },
      "IntegerArrayCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array of format integer"
          }
        ]
      },
      "IntegerArrayCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array of format integer"
          }
        ]
      },
      "IntegerArrayCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array of format integer"
          }
        ]
      },
      "IntegerCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is an integer number"
          }
        ]
      },
      "IntegerCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is an integer number"
          }
        ]
      },
      "IntegerCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is an integer number"
          }
        ]
      },
      "IntentSpecificationRef": {
        "type": "object",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "IntentSpecificationRef": "#/components/schemas/IntentSpecificationRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "IntentSpecificationRef_FVO": {
        "type": "object",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "IntentSpecificationRef": "#/components/schemas/IntentSpecificationRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ]
      },
      "IntentSpecificationRef_MVO": {
        "type": "object",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "IntentSpecificationRef": "#/components/schemas/IntentSpecificationRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "MapArrayCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of mapped objects"
          }
        ]
      },
      "MapArrayCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of mapped objects"
          }
        ]
      },
      "MapArrayCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of mapped objects"
          }
        ]
      },
      "MapCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a mapped object"
          }
        ]
      },
      "MapCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a mapped object"
          }
        ]
      },
      "MapCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a mapped object"
          }
        ]
      },
      "MarketSegmentRef": {
        "type": "object",
        "description": "provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth.",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "MarketSegmentRef": "#/components/schemas/MarketSegmentRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "$ref": "#/components/schemas/Entity"
          }
        ]
      },
      "MarketSegmentRef_FVO": {
        "type": "object",
        "description": "provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth.",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "MarketSegmentRef": "#/components/schemas/MarketSegmentRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "$ref": "#/components/schemas/Entity_FVO"
          }
        ]
      },
      "MarketSegmentRef_MVO": {
        "type": "object",
        "description": "provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth.",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "MarketSegmentRef": "#/components/schemas/MarketSegmentRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "$ref": "#/components/schemas/Entity_MVO"
          }
        ]
      },
      "Money": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
          },
          "value": {
            "type": "number",
            "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
            "format": "float"
          }
        },
        "description": "A base / value business entity used to represent money"
      },
      "NumberArrayCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array with no specific format "
          }
        ]
      },
      "NumberArrayCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array with no specific format "
          }
        ]
      },
      "NumberArrayCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is a number array with no specific format "
          }
        ]
      },
      "NumberCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a number of no specific format"
          }
        ]
      },
      "NumberCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a number of no specific format"
          }
        ]
      },
      "NumberCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a number of no specific format"
          }
        ]
      },
      "ObjectArrayCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of objects"
          }
        ]
      },
      "ObjectArrayCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of objects"
          }
        ]
      },
      "ObjectArrayCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of objects"
          }
        ]
      },
      "ObjectCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is any object"
          }
        ]
      },
      "ObjectCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is any object"
          }
        ]
      },
      "ObjectCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is any object"
          }
        ]
      },
      "PartyRef": {
        "type": "object",
        "description": "A Party reference",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "PartyRefOrPartyRoleRef": {
        "type": "object",
        "description": "",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef",
            "PartyRoleRef": "#/components/schemas/PartyRoleRef"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/PartyRef"
          },
          {
            "$ref": "#/components/schemas/PartyRoleRef"
          }
        ]
      },
      "PartyRefOrPartyRoleRef_FVO": {
        "type": "object",
        "description": "",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef_FVO",
            "PartyRoleRef": "#/components/schemas/PartyRoleRef_FVO"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/PartyRef_FVO"
          },
          {
            "$ref": "#/components/schemas/PartyRoleRef_FVO"
          }
        ]
      },
      "PartyRefOrPartyRoleRef_MVO": {
        "type": "object",
        "description": "",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef_MVO",
            "PartyRoleRef": "#/components/schemas/PartyRoleRef_MVO"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/PartyRef_MVO"
          },
          {
            "$ref": "#/components/schemas/PartyRoleRef_MVO"
          }
        ]
      },
      "PartyRef_FVO": {
        "type": "object",
        "description": "A Party reference",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ]
      },
      "PartyRef_MVO": {
        "type": "object",
        "description": "A Party reference",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRef": "#/components/schemas/PartyRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "PartyRoleRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRoleRef": "#/components/schemas/PartyRoleRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "partyId": {
                "type": "string",
                "description": "The identifier of the engaged party that is linked to the PartyRole object."
              },
              "partyName": {
                "type": "string",
                "description": "The name of the engaged party that is linked to the PartyRole object."
              }
            },
            "description": "Party role reference. A party role represents the part played by a party in a given context."
          }
        ]
      },
      "PartyRoleRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRoleRef": "#/components/schemas/PartyRoleRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "type": "object",
            "properties": {
              "partyId": {
                "type": "string",
                "description": "The identifier of the engaged party that is linked to the PartyRole object."
              },
              "partyName": {
                "type": "string",
                "description": "The name of the engaged party that is linked to the PartyRole object."
              }
            },
            "description": "Party role reference. A party role represents the part played by a party in a given context."
          }
        ]
      },
      "PartyRoleRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PartyRoleRef": "#/components/schemas/PartyRoleRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "partyId": {
                "type": "string",
                "description": "The identifier of the engaged party that is linked to the PartyRole object."
              },
              "partyName": {
                "type": "string",
                "description": "The name of the engaged party that is linked to the PartyRole object."
              }
            },
            "description": "Party role reference. A party role represents the part played by a party in a given context."
          }
        ]
      },
      "PlaceRef": {
        "type": "object",
        "description": "Place reference.",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PlaceRef": "#/components/schemas/PlaceRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "PlaceRef_FVO": {
        "type": "object",
        "description": "Place reference.",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PlaceRef": "#/components/schemas/PlaceRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ]
      },
      "PlaceRef_MVO": {
        "type": "object",
        "description": "Place reference.",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PlaceRef": "#/components/schemas/PlaceRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "PolicyRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PolicyRef": "#/components/schemas/PolicyRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "unique identifier"
              },
              "href": {
                "type": "string",
                "description": "Hyperlink reference",
                "format": "uri"
              },
              "version": {
                "type": "string"
              },
              "@type": {
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              }
            },
            "description": "Reference to managed Policy object"
          }
        ]
      },
      "PolicyRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PolicyRef": "#/components/schemas/PolicyRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "unique identifier"
              },
              "href": {
                "type": "string",
                "description": "Hyperlink reference",
                "format": "uri"
              },
              "version": {
                "type": "string"
              },
              "@type": {
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              }
            },
            "description": "Reference to managed Policy object"
          }
        ]
      },
      "PolicyRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PolicyRef": "#/components/schemas/PolicyRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "unique identifier"
              },
              "href": {
                "type": "string",
                "description": "Hyperlink reference",
                "format": "uri"
              },
              "version": {
                "type": "string"
              },
              "@type": {
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              }
            },
            "description": "Reference to managed Policy object"
          }
        ]
      },
      "PricingLogicAlgorithm": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "PricingLogicAlgorithm": "#/components/schemas/PricingLogicAlgorithm"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description of the PricingLogicAlgorithm"
              },
              "name": {
                "type": "string",
                "description": "Name given to the PricingLogicAlgorithm"
              },
              "plaSpecId": {
                "type": "string",
                "description": "id of corresponding PricingLogicAlgorithm specification"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              }
            },
            "description": "The PricingLogicAlgorithm entity represents an instantiation of an interface specification to external rating function (without a modeled bahavior in SID). Some of the parameters of the interface definiition may be already set (such as price per unit) and some may be gathered during the rating process from the event (such as call duration) or from ProductCharacteristicValues (such as assigned bandwidth)"
          }
        ]
      },
      "ProductOffering": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductOffering": "#/components/schemas/ProductOffering"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description of the productOffering"
              },
              "isBundle": {
                "type": "boolean",
                "description": "isBundle determines whether a productOffering represents a single productOffering (false), or a bundle of productOfferings (true)."
              },
              "isSellable": {
                "type": "boolean",
                "description": "A flag indicating if this product offer can be sold stand-alone for sale or not. If this flag is false it indicates that the offer can only be sold within a bundle."
              },
              "statusReason": {
                "type": "string",
                "description": "A string providing a complementary information on the value of the lifecycle status attribute."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "version": {
                "type": "string",
                "description": "ProductOffering version"
              },
              "place": {
                "type": "array",
                "description": "Place defines the places where the products are sold or delivered.",
                "items": {
                  "$ref": "#/components/schemas/PlaceRef"
                }
              },
              "serviceLevelSpecification": {
                "$ref": "#/components/schemas/ServiceLevelSpecificationRef"
              },
              "channel": {
                "type": "array",
                "description": "The channel defines the channel for selling product offerings.",
                "items": {
                  "$ref": "#/components/schemas/ChannelRef"
                }
              },
              "serviceCandidate": {
                "$ref": "#/components/schemas/ServiceCandidateRef"
              },
              "category": {
                "type": "array",
                "description": "The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates.",
                "items": {
                  "$ref": "#/components/schemas/CategoryRef"
                }
              },
              "resourceCandidate": {
                "$ref": "#/components/schemas/ResourceCandidateRef"
              },
              "productOfferingTerm": {
                "type": "array",
                "description": "A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods.",
                "items": {
                  "$ref": "#/components/schemas/ProductOfferingTerm"
                }
              },
              "productOfferingPrice": {
                "type": "array",
                "description": "An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased. The price is valid for a defined period of time and may not represent the actual price paid by a customer.",
                "items": {
                  "$ref": "#/components/schemas/ProductOfferingPrice"
                }
              },
              "agreement": {
                "type": "array",
                "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                "items": {
                  "$ref": "#/components/schemas/AgreementRef"
                }
              },
              "bundledProductOffering": {
                "type": "array",
                "description": "A type of ProductOffering that belongs to a grouping of ProductOfferings made available to the market. It inherits of all attributes of ProductOffering.",
                "items": {
                  "$ref": "#/components/schemas/BundledProductOffering"
                }
              },
              "bundledGroupProductOffering": {
                "type": "array",
                "description": "A group of product offerings that can be selected for instantiation, e.g. between 2 and 7 from a list of 15 channel packs.",
                "items": {
                  "$ref": "#/components/schemas/BundledGroupProductOffering"
                }
              },
              "attachment": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentOrDocumentRef"
                }
              },
              "marketSegment": {
                "type": "array",
                "description": "provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth.",
                "items": {
                  "$ref": "#/components/schemas/MarketSegmentRef"
                }
              },
              "productOfferingRelationship": {
                "type": "array",
                "description": "A relationship between this product offering and other product offerings.",
                "items": {
                  "$ref": "#/components/schemas/ProductOfferingRelationship"
                }
              },
              "productOfferingCharacteristic": {
                "type": "array",
                "description": "A characteristic quality or distinctive feature of a ProductOffering. The characteristic can take on a discrete value fixed at design (catalog authoring) time, such as Mobile Plan Rank, and is not generally modifiable at inventory level.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification"
                }
              },
              "prodSpecCharValueUse": {
                "type": "array",
                "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics.",
                "items": {
                  "$ref": "#/components/schemas/ProductSpecificationCharacteristicValueUse"
                }
              },
              "policy": {
                "type": "array",
                "description": "The Policy resource represents a policy/rule applied to ProductOffering.",
                "items": {
                  "$ref": "#/components/schemas/PolicyRef"
                }
              },
              "allowedAction": {
                "type": "array",
                "description": "List of actions that can be executed (in context of a product order) on products instantiated from this offering",
                "items": {
                  "$ref": "#/components/schemas/AllowedProductAction"
                }
              },
              "lastUpdate": {
                "type": "string",
                "description": "Date and time of the last update",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "type": "string",
                "description": "Used to indicate the current lifecycle status"
              },
              "name": {
                "type": "string",
                "description": "Name of the productOffering"
              },
              "productSpecification": {
                "$ref": "#/components/schemas/ProductSpecificationRef"
              },
              "externalIdentifier": {
                "type": "array",
                "description": "List of external identifieers for the offering, e.g. identifier in source catalog",
                "items": {
                  "$ref": "#/components/schemas/ExternalIdentifier"
                }
              },
              "accessProbability": {
                "maximum": 1.0,
                "minimum": 0.0,
                "type": "integer",
                "description": "Probability that an order of this offering can be fulfilled (in %).",
                "example": 0.75,
                "default": 1.0
              },
              "relatedParty": {
                "type": "array",
                "description": "A related party defines party or party role linked to a specific entity.",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef"
                }
              }
            },
            "description": "Represents entities that are orderable from the provider of the catalog, this resource includes pricing information."
          }
        ]
      },
      "ProductOfferingPrice": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductOfferingPrice": "#/components/schemas/ProductOfferingPrice"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description of the productOfferingPrice"
              },
              "version": {
                "type": "string",
                "description": "ProductOfferingPrice version"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "unitOfMeasure": {
                "$ref": "#/components/schemas/Quantity"
              },
              "recurringChargePeriodType": {
                "type": "string",
                "description": "The period to repeat the application of the price\nCould be month, week..."
              },
              "recurringChargePeriodLength": {
                "type": "integer",
                "description": "the period of the recurring charge:  1, 2, ... .It sets to zero if it is not applicable"
              },
              "isBundle": {
                "type": "boolean",
                "description": "A flag indicating if this ProductOfferingPrice is composite (bundle) or not"
              },
              "price": {
                "$ref": "#/components/schemas/Money"
              },
              "percentage": {
                "type": "number",
                "description": "Percentage to apply if this Product Offering Price is an Alteration (such as a Discount)",
                "format": "float"
              },
              "bundledPopRelationship": {
                "type": "array",
                "description": "this object represents a bundle relationship from a bundle product offering price (parent) to a simple product offering price (child). A simple product offering price may participate in more than one bundle relationship.",
                "items": {
                  "$ref": "#/components/schemas/BundledProductOfferingPriceRelationship"
                }
              },
              "popRelationship": {
                "type": "array",
                "description": "Product Offering Prices related to this Product Offering Price, for example a price alteration such as allowance or discount",
                "items": {
                  "$ref": "#/components/schemas/ProductOfferingPriceRelationship"
                }
              },
              "prodSpecCharValueUse": {
                "type": "array",
                "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOfferingPrice to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering and ProcuctOfferingPrice level. The list of values in ProductSpecificationCharacteristicValueUse is a strict subset of the list of values as defined in the corresponding product specification characteristics.",
                "items": {
                  "$ref": "#/components/schemas/ProductSpecificationCharacteristicValueUse"
                }
              },
              "productOfferingTerm": {
                "type": "array",
                "description": "A list of conditions under which a ProductOfferingPrice is made available to Customers. For instance, a Product Offering Price can be offered with multiple commitment periods.",
                "items": {
                  "$ref": "#/components/schemas/ProductOfferingTerm"
                }
              },
              "place": {
                "type": "array",
                "description": "Place defines the places where the products are sold or delivered.",
                "items": {
                  "$ref": "#/components/schemas/PlaceRef"
                }
              },
              "policy": {
                "type": "array",
                "description": "The Policy resource represents a policy/rule applied to ProductOfferingPrice.",
                "items": {
                  "$ref": "#/components/schemas/PolicyRef"
                }
              },
              "pricingLogicAlgorithm": {
                "type": "array",
                "description": "The PricingLogicAlgorithm entity represents an instantiation of an interface specification to external rating function (without a modeled behavior in SID). Some of the parameters of the interface definition may be already set (such as price per unit) and some may be gathered during the rating process from the event (such as call duration) or from ProductCharacteristicValues (such as assigned bandwidth).",
                "items": {
                  "$ref": "#/components/schemas/PricingLogicAlgorithm"
                }
              },
              "tax": {
                "type": "array",
                "description": "An amount of money levied on the price of a Product by a legislative body.",
                "items": {
                  "$ref": "#/components/schemas/TaxItem"
                }
              },
              "name": {
                "type": "string",
                "description": "Name of the productOfferingPrice"
              },
              "priceType": {
                "type": "string",
                "description": "A category that describes the price, such as recurring, discount, allowance, penalty, and so forth."
              },
              "lastUpdate": {
                "type": "string",
                "description": "the last update time of this ProductOfferingPrice",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "type": "string",
                "description": "the lifecycle status of this ProductOfferingPrice"
              },
              "externalIdentifier": {
                "type": "array",
                "description": "List of external identifieers for the offering price, e.g. identifier in source catalog",
                "items": {
                  "$ref": "#/components/schemas/ExternalIdentifier"
                }
              }
            },
            "description": "Is based on both the basic cost to develop and produce products and the enterprises policy on revenue targets. This price may be further revised through discounting (a Product Offering Price that reflects an alteration). The price, applied for a productOffering may also be influenced by the productOfferingTerm, the customer selected, eg: a productOffering can be offered with multiple terms, like commitment periods for the contract. The price may be influenced by this productOfferingTerm. A productOffering may be cheaper with a 24 month commitment than with a 12 month commitment."
          }
        ]
      },
      "ProductOfferingPriceRelationship": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductOfferingPriceRelationship": "#/components/schemas/ProductOfferingPriceRelationship"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "role": {
                "type": "string",
                "description": "The association role for the source product offering price"
              },
              "relationshipType": {
                "type": "string",
                "description": "type of the relationship, for example override, discount, etc."
              },
              "version": {
                "type": "string",
                "description": "Version of the referred product offering price."
              }
            },
            "description": "Describes a non-composite relationship between product offering prices. For example one price might be an discount alteration for another price."
          }
        ]
      },
      "ProductOfferingRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductOfferingRef": "#/components/schemas/ProductOfferingRef",
            "BundledProductOffering": "#/components/schemas/BundledProductOffering"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Version of the product offering"
              }
            },
            "description": "ProductOffering reference. A product offering represents entities that are orderable from the provider of the catalog, this resource includes pricing information."
          }
        ]
      },
      "ProductOfferingRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductOfferingRef": "#/components/schemas/ProductOfferingRef_FVO",
            "BundledProductOffering": "#/components/schemas/BundledProductOffering_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Version of the product offering"
              }
            },
            "description": "ProductOffering reference. A product offering represents entities that are orderable from the provider of the catalog, this resource includes pricing information."
          }
        ]
      },
      "ProductOfferingRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductOfferingRef": "#/components/schemas/ProductOfferingRef_MVO",
            "BundledProductOffering": "#/components/schemas/BundledProductOffering_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Version of the product offering"
              }
            },
            "description": "ProductOffering reference. A product offering represents entities that are orderable from the provider of the catalog, this resource includes pricing information."
          }
        ]
      },
      "ProductOfferingRelationship": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductOfferingRelationship": "#/components/schemas/ProductOfferingRelationship"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "role": {
                "type": "string",
                "description": "The association role for the source product offering"
              },
              "name": {
                "type": "string",
                "description": "Name of the referred product offering type."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship between product offerings such as requires, exchangableTo, optionalFor"
              },
              "version": {
                "type": "string",
                "description": "Version of the referred product offering."
              }
            },
            "description": "A relationship between two product Offerings."
          }
        ]
      },
      "ProductOfferingRelationship_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductOfferingRelationship": "#/components/schemas/ProductOfferingRelationship_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "required": [
              "id",
              "relationshipType"
            ],
            "type": "object",
            "properties": {
              "role": {
                "type": "string",
                "description": "The association role for the source product offering"
              },
              "name": {
                "type": "string",
                "description": "Name of the referred product offering type."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship between product offerings such as requires, exchangableTo, optionalFor"
              },
              "version": {
                "type": "string",
                "description": "Version of the referred product offering."
              }
            },
            "description": "A relationship between two product Offerings."
          }
        ]
      },
      "ProductOfferingRelationship_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductOfferingRelationship": "#/components/schemas/ProductOfferingRelationship_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "required": [
              "id",
              "relationshipType"
            ],
            "type": "object",
            "properties": {
              "role": {
                "type": "string",
                "description": "The association role for the source product offering"
              },
              "name": {
                "type": "string",
                "description": "Name of the referred product offering type."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship between product offerings such as requires, exchangableTo, optionalFor"
              },
              "version": {
                "type": "string",
                "description": "Version of the referred product offering."
              }
            },
            "description": "A relationship between two product Offerings."
          }
        ]
      },
      "ProductOfferingTerm": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductOfferingTerm": "#/components/schemas/ProductOfferingTerm"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description of the productOfferingTerm"
              },
              "duration": {
                "$ref": "#/components/schemas/Duration"
              },
              "name": {
                "type": "string",
                "description": "Name of the productOfferingTerm"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              }
            },
            "description": "A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods."
          }
        ]
      },
      "ProductOfferingTerm_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductOfferingTerm": "#/components/schemas/ProductOfferingTerm_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "name"
            ],
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description of the productOfferingTerm"
              },
              "duration": {
                "$ref": "#/components/schemas/Duration"
              },
              "name": {
                "type": "string",
                "description": "Name of the productOfferingTerm"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              }
            },
            "description": "A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods."
          }
        ]
      },
      "ProductOfferingTerm_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductOfferingTerm": "#/components/schemas/ProductOfferingTerm_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description of the productOfferingTerm"
              },
              "duration": {
                "$ref": "#/components/schemas/Duration"
              },
              "name": {
                "type": "string",
                "description": "Name of the productOfferingTerm"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              }
            },
            "description": "A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods."
          }
        ]
      },
      "ProductOffering_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductOffering": "#/components/schemas/ProductOffering_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity_FVO"
          },
          {
            "required": [
              "@type",
              "lifecycleStatus",
              "name"
            ],
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description of the productOffering"
              },
              "isBundle": {
                "type": "boolean",
                "description": "isBundle determines whether a productOffering represents a single productOffering (false), or a bundle of productOfferings (true)."
              },
              "isSellable": {
                "type": "boolean",
                "description": "A flag indicating if this product offer can be sold stand-alone for sale or not. If this flag is false it indicates that the offer can only be sold within a bundle."
              },
              "statusReason": {
                "type": "string",
                "description": "A string providing a complementary information on the value of the lifecycle status attribute."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "version": {
                "type": "string",
                "description": "ProductOffering version"
              },
              "place": {
                "type": "array",
                "description": "Place defines the places where the products are sold or delivered.",
                "items": {
                  "$ref": "#/components/schemas/PlaceRef_FVO"
                }
              },
              "serviceLevelSpecification": {
                "$ref": "#/components/schemas/ServiceLevelSpecificationRef"
              },
              "channel": {
                "type": "array",
                "description": "The channel defines the channel for selling product offerings.",
                "items": {
                  "$ref": "#/components/schemas/ChannelRef_FVO"
                }
              },
              "serviceCandidate": {
                "$ref": "#/components/schemas/ServiceCandidateRef_FVO"
              },
              "category": {
                "type": "array",
                "description": "The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates.",
                "items": {
                  "$ref": "#/components/schemas/CategoryRef_FVO"
                }
              },
              "resourceCandidate": {
                "$ref": "#/components/schemas/ResourceCandidateRef_FVO"
              },
              "productOfferingTerm": {
                "type": "array",
                "description": "A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods.",
                "items": {
                  "$ref": "#/components/schemas/ProductOfferingTerm_FVO"
                }
              },
              "productOfferingPrice": {
                "type": "array",
                "description": "An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased. The price is valid for a defined period of time and may not represent the actual price paid by a customer.",
                "items": {
                  "$ref": "#/components/schemas/ProductOfferingPrice"
                }
              },
              "agreement": {
                "type": "array",
                "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                "items": {
                  "$ref": "#/components/schemas/AgreementRef_FVO"
                }
              },
              "bundledProductOffering": {
                "type": "array",
                "description": "A type of ProductOffering that belongs to a grouping of ProductOfferings made available to the market. It inherits of all attributes of ProductOffering.",
                "items": {
                  "$ref": "#/components/schemas/BundledProductOffering_FVO"
                }
              },
              "bundledGroupProductOffering": {
                "type": "array",
                "description": "A group of product offerings that can be selected for instantiation, e.g. between 2 and 7 from a list of 15 channel packs.",
                "items": {
                  "$ref": "#/components/schemas/BundledGroupProductOffering"
                }
              },
              "attachment": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentOrDocumentRef"
                }
              },
              "marketSegment": {
                "type": "array",
                "description": "provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth.",
                "items": {
                  "$ref": "#/components/schemas/MarketSegmentRef_FVO"
                }
              },
              "productOfferingRelationship": {
                "type": "array",
                "description": "A relationship between this product offering and other product offerings.",
                "items": {
                  "$ref": "#/components/schemas/ProductOfferingRelationship_FVO"
                }
              },
              "productOfferingCharacteristic": {
                "type": "array",
                "description": "A characteristic quality or distinctive feature of a ProductOffering. The characteristic can take on a discrete value fixed at design (catalog authoring) time, such as Mobile Plan Rank, and is not generally modifiable at inventory level.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification_FVO"
                }
              },
              "prodSpecCharValueUse": {
                "type": "array",
                "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics.",
                "items": {
                  "$ref": "#/components/schemas/ProductSpecificationCharacteristicValueUse_FVO"
                }
              },
              "policy": {
                "type": "array",
                "description": "The Policy resource represents a policy/rule applied to ProductOffering.",
                "items": {
                  "$ref": "#/components/schemas/PolicyRef_FVO"
                }
              },
              "allowedAction": {
                "type": "array",
                "description": "List of actions that can be executed (in context of a product order) on products instantiated from this offering",
                "items": {
                  "$ref": "#/components/schemas/AllowedProductAction_FVO"
                }
              },
              "lastUpdate": {
                "type": "string",
                "description": "Date and time of the last update",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "type": "string",
                "description": "Used to indicate the current lifecycle status"
              },
              "name": {
                "type": "string",
                "description": "Name of the productOffering"
              },
              "productSpecification": {
                "$ref": "#/components/schemas/ProductSpecificationRef_FVO"
              },
              "externalIdentifier": {
                "type": "array",
                "description": "List of external identifieers for the offering, e.g. identifier in source catalog",
                "items": {
                  "$ref": "#/components/schemas/ExternalIdentifier_FVO"
                }
              },
              "accessProbability": {
                "maximum": 1.0,
                "minimum": 0.0,
                "type": "integer",
                "description": "Probability that an order of this offering can be fulfilled (in %).",
                "example": 0.75,
                "default": 1.0
              },
              "relatedParty": {
                "type": "array",
                "description": "A related party defines party or party role linked to a specific entity.",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef"
                }
              }
            },
            "description": "Represents entities that are orderable from the provider of the catalog, this resource includes pricing information."
          }
        ]
      },
      "ProductOffering_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductOffering": "#/components/schemas/ProductOffering_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity_MVO"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description of the productOffering"
              },
              "isBundle": {
                "type": "boolean",
                "description": "isBundle determines whether a productOffering represents a single productOffering (false), or a bundle of productOfferings (true)."
              },
              "isSellable": {
                "type": "boolean",
                "description": "A flag indicating if this product offer can be sold stand-alone for sale or not. If this flag is false it indicates that the offer can only be sold within a bundle."
              },
              "statusReason": {
                "type": "string",
                "description": "A string providing a complementary information on the value of the lifecycle status attribute."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "version": {
                "type": "string",
                "description": "ProductOffering version"
              },
              "place": {
                "type": "array",
                "description": "Place defines the places where the products are sold or delivered.",
                "items": {
                  "$ref": "#/components/schemas/PlaceRef_MVO"
                }
              },
              "serviceLevelSpecification": {
                "$ref": "#/components/schemas/ServiceLevelSpecificationRef"
              },
              "channel": {
                "type": "array",
                "description": "The channel defines the channel for selling product offerings.",
                "items": {
                  "$ref": "#/components/schemas/ChannelRef_MVO"
                }
              },
              "serviceCandidate": {
                "$ref": "#/components/schemas/ServiceCandidateRef_MVO"
              },
              "category": {
                "type": "array",
                "description": "The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates.",
                "items": {
                  "$ref": "#/components/schemas/CategoryRef_MVO"
                }
              },
              "resourceCandidate": {
                "$ref": "#/components/schemas/ResourceCandidateRef_MVO"
              },
              "productOfferingTerm": {
                "type": "array",
                "description": "A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods.",
                "items": {
                  "$ref": "#/components/schemas/ProductOfferingTerm_MVO"
                }
              },
              "productOfferingPrice": {
                "type": "array",
                "description": "An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased. The price is valid for a defined period of time and may not represent the actual price paid by a customer.",
                "items": {
                  "$ref": "#/components/schemas/ProductOfferingPrice"
                }
              },
              "agreement": {
                "type": "array",
                "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                "items": {
                  "$ref": "#/components/schemas/AgreementRef_MVO"
                }
              },
              "bundledProductOffering": {
                "type": "array",
                "description": "A type of ProductOffering that belongs to a grouping of ProductOfferings made available to the market. It inherits of all attributes of ProductOffering.",
                "items": {
                  "$ref": "#/components/schemas/BundledProductOffering_MVO"
                }
              },
              "bundledGroupProductOffering": {
                "type": "array",
                "description": "A group of product offerings that can be selected for instantiation, e.g. between 2 and 7 from a list of 15 channel packs.",
                "items": {
                  "$ref": "#/components/schemas/BundledGroupProductOffering"
                }
              },
              "attachment": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentOrDocumentRef"
                }
              },
              "marketSegment": {
                "type": "array",
                "description": "provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth.",
                "items": {
                  "$ref": "#/components/schemas/MarketSegmentRef_MVO"
                }
              },
              "productOfferingRelationship": {
                "type": "array",
                "description": "A relationship between this product offering and other product offerings.",
                "items": {
                  "$ref": "#/components/schemas/ProductOfferingRelationship_MVO"
                }
              },
              "productOfferingCharacteristic": {
                "type": "array",
                "description": "A characteristic quality or distinctive feature of a ProductOffering. The characteristic can take on a discrete value fixed at design (catalog authoring) time, such as Mobile Plan Rank, and is not generally modifiable at inventory level.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification_MVO"
                }
              },
              "prodSpecCharValueUse": {
                "type": "array",
                "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics.",
                "items": {
                  "$ref": "#/components/schemas/ProductSpecificationCharacteristicValueUse_MVO"
                }
              },
              "policy": {
                "type": "array",
                "description": "The Policy resource represents a policy/rule applied to ProductOffering.",
                "items": {
                  "$ref": "#/components/schemas/PolicyRef_MVO"
                }
              },
              "allowedAction": {
                "type": "array",
                "description": "List of actions that can be executed (in context of a product order) on products instantiated from this offering",
                "items": {
                  "$ref": "#/components/schemas/AllowedProductAction_MVO"
                }
              },
              "lifecycleStatus": {
                "type": "string",
                "description": "Used to indicate the current lifecycle status"
              },
              "name": {
                "type": "string",
                "description": "Name of the productOffering"
              },
              "productSpecification": {
                "$ref": "#/components/schemas/ProductSpecificationRef_MVO"
              },
              "externalIdentifier": {
                "type": "array",
                "description": "List of external identifieers for the offering, e.g. identifier in source catalog",
                "items": {
                  "$ref": "#/components/schemas/ExternalIdentifier_MVO"
                }
              },
              "accessProbability": {
                "maximum": 1.0,
                "minimum": 0.0,
                "type": "integer",
                "description": "Probability that an order of this offering can be fulfilled (in %).",
                "example": 0.75,
                "default": 1.0
              },
              "relatedParty": {
                "type": "array",
                "description": "A related party defines party or party role linked to a specific entity.",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef"
                }
              }
            },
            "description": "Represents entities that are orderable from the provider of the catalog, this resource includes pricing information."
          }
        ]
      },
      "ProductSpecification": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductSpecification": "#/components/schemas/ProductSpecification"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "brand": {
                "type": "string",
                "description": "The manufacturer or trademark of the specification"
              },
              "description": {
                "type": "string",
                "description": "A narrative that explains in detail what the product specification is"
              },
              "isBundle": {
                "type": "boolean",
                "description": "isBundle determines whether a productSpecification represents a single productSpecification (false), or a bundle of productSpecification (true)."
              },
              "productNumber": {
                "type": "string",
                "description": "An identification number assigned to uniquely identity the specification"
              },
              "category": {
                "type": "array",
                "description": "The category resource is used to group product specifications in logical containers. Categories can contain other categories and/or other catalog entries.",
                "items": {
                  "$ref": "#/components/schemas/CategoryRef"
                }
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "version": {
                "type": "string",
                "description": "Product specification version"
              },
              "relatedParty": {
                "type": "array",
                "description": "A related party defines party or party role linked to a specific entity.",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef"
                }
              },
              "productSpecCharacteristic": {
                "type": "array",
                "description": "A characteristic quality or distinctive feature of a ProductSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification"
                }
              },
              "serviceSpecification": {
                "type": "array",
                "description": "ServiceSpecification(s) required to realize a ProductSpecification.",
                "items": {
                  "$ref": "#/components/schemas/ServiceSpecificationRef"
                }
              },
              "bundledProductSpecification": {
                "type": "array",
                "description": "A type of ProductSpecification that belongs to a grouping of ProductSpecifications made available to the market. It inherits of all attributes of ProductSpecification.",
                "items": {
                  "$ref": "#/components/schemas/BundledProductSpecification"
                }
              },
              "productSpecificationRelationship": {
                "type": "array",
                "description": "A migration, substitution, dependency or exclusivity relationship between/among product specifications.",
                "items": {
                  "$ref": "#/components/schemas/ProductSpecificationRelationship"
                }
              },
              "resourceSpecification": {
                "type": "array",
                "description": "The ResourceSpecification is required to realize a ProductSpecification.",
                "items": {
                  "$ref": "#/components/schemas/ResourceSpecificationRef"
                }
              },
              "attachment": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentOrDocumentRef"
                }
              },
              "policy": {
                "type": "array",
                "description": "The Policy resource represents a policy/rule applied to ProductSpecification.",
                "items": {
                  "$ref": "#/components/schemas/PolicyRef"
                }
              },
              "targetProductSchema": {
                "$ref": "#/components/schemas/TargetProductSchema"
              },
              "intentSpecification": {
                "$ref": "#/components/schemas/IntentSpecificationRef"
              },
              "lastUpdate": {
                "type": "string",
                "description": "Date and time of the last update",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "type": "string",
                "description": "Used to indicate the current lifecycle status"
              },
              "name": {
                "type": "string",
                "description": "Name of the product specification"
              },
              "externalIdentifier": {
                "type": "array",
                "description": "List of external identifieers for the specification, e.g. identifier in source catalog",
                "items": {
                  "$ref": "#/components/schemas/ExternalIdentifier"
                }
              }
            },
            "description": "Is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role."
          }
        ]
      },
      "ProductSpecificationCharacteristicValueUse": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductSpecificationCharacteristicValueUse": "#/components/schemas/ProductSpecificationCharacteristicValueUse"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the associated productSpecificationCharacteristic"
              },
              "id": {
                "type": "string",
                "description": "Unique ID for the characteristic"
              },
              "description": {
                "type": "string",
                "description": "A narrative that explains in detail what the productSpecificationCharacteristic is"
              },
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
              },
              "minCardinality": {
                "type": "integer",
                "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
              },
              "maxCardinality": {
                "type": "integer",
                "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "productSpecCharacteristicValue": {
                "type": "array",
                "description": "A number or text that can be assigned to a ProductSpecificationCharacteristic.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicValueSpecification"
                }
              },
              "productSpecification": {
                "$ref": "#/components/schemas/ProductSpecificationRef"
              }
            },
            "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics."
          }
        ]
      },
      "ProductSpecificationCharacteristicValueUse_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductSpecificationCharacteristicValueUse": "#/components/schemas/ProductSpecificationCharacteristicValueUse_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the associated productSpecificationCharacteristic"
              },
              "id": {
                "type": "string",
                "description": "Unique ID for the characteristic"
              },
              "description": {
                "type": "string",
                "description": "A narrative that explains in detail what the productSpecificationCharacteristic is"
              },
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
              },
              "minCardinality": {
                "type": "integer",
                "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
              },
              "maxCardinality": {
                "type": "integer",
                "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "productSpecCharacteristicValue": {
                "type": "array",
                "description": "A number or text that can be assigned to a ProductSpecificationCharacteristic.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
                }
              },
              "productSpecification": {
                "$ref": "#/components/schemas/ProductSpecificationRef_FVO"
              }
            },
            "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics."
          }
        ]
      },
      "ProductSpecificationCharacteristicValueUse_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductSpecificationCharacteristicValueUse": "#/components/schemas/ProductSpecificationCharacteristicValueUse_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the associated productSpecificationCharacteristic"
              },
              "id": {
                "type": "string",
                "description": "Unique ID for the characteristic"
              },
              "description": {
                "type": "string",
                "description": "A narrative that explains in detail what the productSpecificationCharacteristic is"
              },
              "valueType": {
                "type": "string",
                "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
              },
              "minCardinality": {
                "type": "integer",
                "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
              },
              "maxCardinality": {
                "type": "integer",
                "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "productSpecCharacteristicValue": {
                "type": "array",
                "description": "A number or text that can be assigned to a ProductSpecificationCharacteristic.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
                }
              },
              "productSpecification": {
                "$ref": "#/components/schemas/ProductSpecificationRef_MVO"
              }
            },
            "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics."
          }
        ]
      },
      "ProductSpecificationRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductSpecificationRef": "#/components/schemas/ProductSpecificationRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Version of the product specification"
              },
              "targetProductSchema": {
                "$ref": "#/components/schemas/TargetProductSchema"
              }
            },
            "description": "ProductSpecification reference. A product Specification represents entities that are orderable from the provider of the catalog."
          }
        ]
      },
      "ProductSpecificationRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductSpecificationRef": "#/components/schemas/ProductSpecificationRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Version of the product specification"
              },
              "targetProductSchema": {
                "$ref": "#/components/schemas/TargetProductSchema_FVO"
              }
            },
            "description": "ProductSpecification reference. A product Specification represents entities that are orderable from the provider of the catalog."
          }
        ]
      },
      "ProductSpecificationRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductSpecificationRef": "#/components/schemas/ProductSpecificationRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Version of the product specification"
              },
              "targetProductSchema": {
                "$ref": "#/components/schemas/TargetProductSchema_MVO"
              }
            },
            "description": "ProductSpecification reference. A product Specification represents entities that are orderable from the provider of the catalog."
          }
        ]
      },
      "ProductSpecificationRelationship": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductSpecificationRelationship": "#/components/schemas/ProductSpecificationRelationship"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "characteristic": {
                "type": "array",
                "description": "A characteristic that refines the relationship. For example, consider the relationship between broadband and TV. For a 4k TV it is important to know the minimum bandwidth to support 4k, so a characteristic Resolution might be defined on the relationship to allow capturing of this in the inventory",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification"
                }
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "relationshipType": {
                "type": "string",
                "description": "type of the relationship, for example override, discount, etc."
              },
              "version": {
                "type": "string",
                "description": "Version of the referred product specification."
              }
            },
            "description": "A migration, substitution, dependency or exclusivity relationship between/among product specifications."
          }
        ]
      },
      "ProductSpecificationRelationship_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductSpecificationRelationship": "#/components/schemas/ProductSpecificationRelationship_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "required": [
              "id",
              "relationshipType"
            ],
            "type": "object",
            "properties": {
              "characteristic": {
                "type": "array",
                "description": "A characteristic that refines the relationship. For example, consider the relationship between broadband and TV. For a 4k TV it is important to know the minimum bandwidth to support 4k, so a characteristic Resolution might be defined on the relationship to allow capturing of this in the inventory",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification_FVO"
                }
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "relationshipType": {
                "type": "string",
                "description": "type of the relationship, for example override, discount, etc."
              },
              "version": {
                "type": "string",
                "description": "Version of the referred product specification."
              }
            },
            "description": "A migration, substitution, dependency or exclusivity relationship between/among product specifications."
          }
        ]
      },
      "ProductSpecificationRelationship_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductSpecificationRelationship": "#/components/schemas/ProductSpecificationRelationship_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "required": [
              "id",
              "relationshipType"
            ],
            "type": "object",
            "properties": {
              "characteristic": {
                "type": "array",
                "description": "A characteristic that refines the relationship. For example, consider the relationship between broadband and TV. For a 4k TV it is important to know the minimum bandwidth to support 4k, so a characteristic Resolution might be defined on the relationship to allow capturing of this in the inventory",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification_MVO"
                }
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "relationshipType": {
                "type": "string",
                "description": "type of the relationship, for example override, discount, etc."
              },
              "version": {
                "type": "string",
                "description": "Version of the referred product specification."
              }
            },
            "description": "A migration, substitution, dependency or exclusivity relationship between/among product specifications."
          }
        ]
      },
      "ProductSpecification_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductSpecification": "#/components/schemas/ProductSpecification_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity_FVO"
          },
          {
            "required": [
              "@type",
              "lifecycleStatus",
              "name"
            ],
            "type": "object",
            "properties": {
              "brand": {
                "type": "string",
                "description": "The manufacturer or trademark of the specification"
              },
              "description": {
                "type": "string",
                "description": "A narrative that explains in detail what the product specification is"
              },
              "isBundle": {
                "type": "boolean",
                "description": "isBundle determines whether a productSpecification represents a single productSpecification (false), or a bundle of productSpecification (true)."
              },
              "productNumber": {
                "type": "string",
                "description": "An identification number assigned to uniquely identity the specification"
              },
              "category": {
                "type": "array",
                "description": "The category resource is used to group product specifications in logical containers. Categories can contain other categories and/or other catalog entries.",
                "items": {
                  "$ref": "#/components/schemas/CategoryRef_FVO"
                }
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "version": {
                "type": "string",
                "description": "Product specification version"
              },
              "relatedParty": {
                "type": "array",
                "description": "A related party defines party or party role linked to a specific entity.",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO"
                }
              },
              "productSpecCharacteristic": {
                "type": "array",
                "description": "A characteristic quality or distinctive feature of a ProductSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification_FVO"
                }
              },
              "serviceSpecification": {
                "type": "array",
                "description": "ServiceSpecification(s) required to realize a ProductSpecification.",
                "items": {
                  "$ref": "#/components/schemas/ServiceSpecificationRef_FVO"
                }
              },
              "bundledProductSpecification": {
                "type": "array",
                "description": "A type of ProductSpecification that belongs to a grouping of ProductSpecifications made available to the market. It inherits of all attributes of ProductSpecification.",
                "items": {
                  "$ref": "#/components/schemas/BundledProductSpecification_FVO"
                }
              },
              "productSpecificationRelationship": {
                "type": "array",
                "description": "A migration, substitution, dependency or exclusivity relationship between/among product specifications.",
                "items": {
                  "$ref": "#/components/schemas/ProductSpecificationRelationship_FVO"
                }
              },
              "resourceSpecification": {
                "type": "array",
                "description": "The ResourceSpecification is required to realize a ProductSpecification.",
                "items": {
                  "$ref": "#/components/schemas/ResourceSpecificationRef_FVO"
                }
              },
              "attachment": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentOrDocumentRef"
                }
              },
              "policy": {
                "type": "array",
                "description": "The Policy resource represents a policy/rule applied to ProductSpecification.",
                "items": {
                  "$ref": "#/components/schemas/PolicyRef_FVO"
                }
              },
              "targetProductSchema": {
                "$ref": "#/components/schemas/TargetProductSchema_FVO"
              },
              "intentSpecification": {
                "$ref": "#/components/schemas/IntentSpecificationRef_FVO"
              },
              "lastUpdate": {
                "type": "string",
                "description": "Date and time of the last update",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "type": "string",
                "description": "Used to indicate the current lifecycle status"
              },
              "name": {
                "type": "string",
                "description": "Name of the product specification"
              },
              "externalIdentifier": {
                "type": "array",
                "description": "List of external identifieers for the specification, e.g. identifier in source catalog",
                "items": {
                  "$ref": "#/components/schemas/ExternalIdentifier_FVO"
                }
              }
            },
            "description": "Is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role."
          }
        ]
      },
      "ProductSpecification_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ProductSpecification": "#/components/schemas/ProductSpecification_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity_MVO"
          },
          {
            "type": "object",
            "properties": {
              "brand": {
                "type": "string",
                "description": "The manufacturer or trademark of the specification"
              },
              "description": {
                "type": "string",
                "description": "A narrative that explains in detail what the product specification is"
              },
              "isBundle": {
                "type": "boolean",
                "description": "isBundle determines whether a productSpecification represents a single productSpecification (false), or a bundle of productSpecification (true)."
              },
              "productNumber": {
                "type": "string",
                "description": "An identification number assigned to uniquely identity the specification"
              },
              "category": {
                "type": "array",
                "description": "The category resource is used to group product specifications in logical containers. Categories can contain other categories and/or other catalog entries.",
                "items": {
                  "$ref": "#/components/schemas/CategoryRef_MVO"
                }
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "version": {
                "type": "string",
                "description": "Product specification version"
              },
              "relatedParty": {
                "type": "array",
                "description": "A related party defines party or party role linked to a specific entity.",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO"
                }
              },
              "productSpecCharacteristic": {
                "type": "array",
                "description": "A characteristic quality or distinctive feature of a ProductSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process.",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicSpecification_MVO"
                }
              },
              "serviceSpecification": {
                "type": "array",
                "description": "ServiceSpecification(s) required to realize a ProductSpecification.",
                "items": {
                  "$ref": "#/components/schemas/ServiceSpecificationRef_MVO"
                }
              },
              "bundledProductSpecification": {
                "type": "array",
                "description": "A type of ProductSpecification that belongs to a grouping of ProductSpecifications made available to the market. It inherits of all attributes of ProductSpecification.",
                "items": {
                  "$ref": "#/components/schemas/BundledProductSpecification_MVO"
                }
              },
              "productSpecificationRelationship": {
                "type": "array",
                "description": "A migration, substitution, dependency or exclusivity relationship between/among product specifications.",
                "items": {
                  "$ref": "#/components/schemas/ProductSpecificationRelationship_MVO"
                }
              },
              "resourceSpecification": {
                "type": "array",
                "description": "The ResourceSpecification is required to realize a ProductSpecification.",
                "items": {
                  "$ref": "#/components/schemas/ResourceSpecificationRef_MVO"
                }
              },
              "attachment": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentOrDocumentRef"
                }
              },
              "policy": {
                "type": "array",
                "description": "The Policy resource represents a policy/rule applied to ProductSpecification.",
                "items": {
                  "$ref": "#/components/schemas/PolicyRef_MVO"
                }
              },
              "targetProductSchema": {
                "$ref": "#/components/schemas/TargetProductSchema_MVO"
              },
              "intentSpecification": {
                "$ref": "#/components/schemas/IntentSpecificationRef_MVO"
              },
              "lifecycleStatus": {
                "type": "string",
                "description": "Used to indicate the current lifecycle status"
              },
              "name": {
                "type": "string",
                "description": "Name of the product specification"
              },
              "externalIdentifier": {
                "type": "array",
                "description": "List of external identifieers for the specification, e.g. identifier in source catalog",
                "items": {
                  "$ref": "#/components/schemas/ExternalIdentifier_MVO"
                }
              }
            },
            "description": "Is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role."
          }
        ]
      },
      "Quantity": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Numeric value in a given unit",
            "format": "float",
            "default": 1
          },
          "units": {
            "type": "string",
            "description": "Unit"
          }
        },
        "description": "An amount in a given unit"
      },
      "RelatedPartyRefOrPartyRoleRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "RelatedPartyRefOrPartyRoleRef": "#/components/schemas/RelatedPartyRefOrPartyRoleRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "role": {
                "type": "string",
                "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
              },
              "partyOrPartyRole": {
                "$ref": "#/components/schemas/PartyRefOrPartyRoleRef"
              }
            },
            "description": "RelatedParty reference. A related party defines party or party role or its reference, linked to a specific entity"
          }
        ]
      },
      "RelatedPartyRefOrPartyRoleRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "RelatedPartyRefOrPartyRoleRef": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "required": [
              "role"
            ],
            "type": "object",
            "properties": {
              "role": {
                "type": "string",
                "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
              },
              "partyOrPartyRole": {
                "$ref": "#/components/schemas/PartyRefOrPartyRoleRef_FVO"
              }
            },
            "description": "RelatedParty reference. A related party defines party or party role or its reference, linked to a specific entity"
          }
        ]
      },
      "RelatedPartyRefOrPartyRoleRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "RelatedPartyRefOrPartyRoleRef": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "role": {
                "type": "string",
                "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
              },
              "partyOrPartyRole": {
                "$ref": "#/components/schemas/PartyRefOrPartyRoleRef_MVO"
              }
            },
            "description": "RelatedParty reference. A related party defines party or party role or its reference, linked to a specific entity"
          }
        ]
      },
      "ResourceCandidateRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ResourceCandidateRef": "#/components/schemas/ResourceCandidateRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "the version of resource candidate"
              }
            },
            "description": "ResourceCandidate is an entity that makes a resource specification available to a catalog. A ResourceCandidate and its associated resource specification may be published - made visible - in any number of resource catalogs, or in none."
          }
        ]
      },
      "ResourceCandidateRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ResourceCandidateRef": "#/components/schemas/ResourceCandidateRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "the version of resource candidate"
              }
            },
            "description": "ResourceCandidate is an entity that makes a resource specification available to a catalog. A ResourceCandidate and its associated resource specification may be published - made visible - in any number of resource catalogs, or in none."
          }
        ]
      },
      "ResourceCandidateRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ResourceCandidateRef": "#/components/schemas/ResourceCandidateRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "the version of resource candidate"
              }
            },
            "description": "ResourceCandidate is an entity that makes a resource specification available to a catalog. A ResourceCandidate and its associated resource specification may be published - made visible - in any number of resource catalogs, or in none."
          }
        ]
      },
      "ResourceSpecificationRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ResourceSpecificationRef": "#/components/schemas/ResourceSpecificationRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Resource Specification version"
              }
            },
            "description": "Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.\nA ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification."
          }
        ]
      },
      "ResourceSpecificationRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ResourceSpecificationRef": "#/components/schemas/ResourceSpecificationRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Resource Specification version"
              }
            },
            "description": "Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.\nA ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification."
          }
        ]
      },
      "ResourceSpecificationRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ResourceSpecificationRef": "#/components/schemas/ResourceSpecificationRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Resource Specification version"
              }
            },
            "description": "Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.\nA ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification."
          }
        ]
      },
      "ServiceLevelSpecificationRef": {
        "type": "object",
        "description": "A Service Level Specification represents a pre-defined or negotiated set of Service Level \nObjectives. In addition, certain consequences are associated with not meeting the Service Level \nObjectives. Service Level Agreements are expressed in terms of Service Level Specifications.",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ServiceLevelSpecificationRef": "#/components/schemas/ServiceLevelSpecificationRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ]
      },
      "ServiceCandidateRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ServiceCandidateRef": "#/components/schemas/ServiceCandidateRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Version of the service candidate"
              }
            },
            "description": "ServiceCandidate reference. ServiceCandidate is an entity that makes a ServiceSpecification available to a catalog."
          }
        ]
      },
      "ServiceCandidateRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ServiceCandidateRef": "#/components/schemas/ServiceCandidateRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Version of the service candidate"
              }
            },
            "description": "ServiceCandidate reference. ServiceCandidate is an entity that makes a ServiceSpecification available to a catalog."
          }
        ]
      },
      "ServiceCandidateRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ServiceCandidateRef": "#/components/schemas/ServiceCandidateRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Version of the service candidate"
              }
            },
            "description": "ServiceCandidate reference. ServiceCandidate is an entity that makes a ServiceSpecification available to a catalog."
          }
        ]
      },
      "ServiceSpecificationRef": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ServiceSpecificationRef": "#/components/schemas/ServiceSpecificationRef"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Service specification version"
              }
            },
            "description": "Service specification reference: ServiceSpecification(s) required to realize a ProductSpecification."
          }
        ]
      },
      "ServiceSpecificationRef_FVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ServiceSpecificationRef": "#/components/schemas/ServiceSpecificationRef_FVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_FVO"
          },
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Service specification version"
              }
            },
            "description": "Service specification reference: ServiceSpecification(s) required to realize a ProductSpecification."
          }
        ]
      },
      "ServiceSpecificationRef_MVO": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "ServiceSpecificationRef": "#/components/schemas/ServiceSpecificationRef_MVO"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Service specification version"
              }
            },
            "description": "Service specification reference: ServiceSpecification(s) required to realize a ProductSpecification."
          }
        ]
      },
      "StringArrayCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of strings"
          }
        ]
      },
      "StringArrayCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of strings"
          }
        ]
      },
      "StringArrayCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "description": "A specification for a characteristic for which the value is an array of strings"
          }
        ]
      },
      "StringCharacteristicValueSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a string"
          }
        ]
      },
      "StringCharacteristicValueSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_FVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a string"
          }
        ]
      },
      "StringCharacteristicValueSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacteristicValueSpecification_MVO"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Value of the characteristic"
              }
            },
            "description": "A specification for a characteristic for which the value is a string"
          }
        ]
      },
      "TargetProductSchema": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "Class type of the target product"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "This field provides a link to the schema describing the target product",
            "format": "uri"
          }
        },
        "description": "The reference object to the schema and type of target product which is described by product specification"
      },
      "TargetProductSchema_FVO": {
        "required": [
          "@schemaLocation",
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "Class type of the target product"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "This field provides a link to the schema describing the target product",
            "format": "uri"
          }
        },
        "description": "The reference object to the schema and type of target product which is described by product specification"
      },
      "TargetProductSchema_MVO": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "Class type of the target product"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "This field provides a link to the schema describing the target product",
            "format": "uri"
          }
        },
        "description": "The reference object to the schema and type of target product which is described by product specification"
      },
      "TaxItem": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "TaxItem": "#/components/schemas/TaxItem"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "properties": {
              "taxAmount": {
                "$ref": "#/components/schemas/Money"
              },
              "taxCategory": {
                "type": "string",
                "description": "Tax category"
              },
              "taxRate": {
                "type": "number",
                "description": "Applied rate of the tax",
                "format": "float"
              }
            },
            "description": "A tax item is created for each tax rate and tax type used in the bill."
          }
        ]
      },
      "TimePeriod": {
        "type": "object",
        "properties": {
          "startDateTime": {
            "type": "string",
            "description": "Start of the time period, using IETC-RFC-3339 format",
            "format": "date-time",
            "example": "1985-04-12T23:20:50.52Z"
          },
          "endDateTime": {
            "type": "string",
            "description": "End of the time period, using IETC-RFC-3339 format",
            "format": "date-time",
            "example": "1985-04-12T23:20:50.52Z"
          }
        },
        "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both"
      },
      "Error": {
        "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)",
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "Error": "#/components/schemas/Error"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "required": [
              "code",
              "reason"
            ],
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Application relevant detail, defined in the API or a common list."
              },
              "reason": {
                "type": "string",
                "description": "Explanation of the reason for the error which can be shown to a client user."
              },
              "message": {
                "type": "string",
                "description": "More details and corrective actions related to the error which can be shown to a client user."
              },
              "status": {
                "type": "string",
                "description": "HTTP Error code extension"
              },
              "referenceError": {
                "type": "string",
                "description": "URI of documentation describing the error."
              }
            }
          }
        ]
      },
      "JsonPatch": {
        "required": [
          "op",
          "path"
        ],
        "type": "object",
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to be performed",
            "enum": [
              "add",
              "remove",
              "replace",
              "move",
              "copy",
              "test"
            ]
          },
          "path": {
            "type": "string",
            "description": "A JSON-Pointer"
          },
          "value": {
            "description": "The value to be used within the operations."
          },
          "from": {
            "type": "string",
            "description": "A string containing a JSON Pointer value."
          }
        },
        "description": "A JSONPatch document as defined by RFC 6902"
      },
      "JsonPatchOperations": {
        "type": "array",
        "description": "JSONPatch Operations document as defined by RFC 6902",
        "items": {
          "$ref": "#/components/schemas/JsonPatch"
        }
      }
    },
    "responses": {
      "202": {
        "description": "Accepted"
      },
      "204": {
        "description": "Deleted"
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "405": {
        "description": "Method Not allowed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "409": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "501": {
        "description": "Not Implemented",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "503": {
        "description": "Service Unavailable",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "200ProductOfferingArray": {
        "description": "Success",
        "headers": {
          "X-Total-Count": {
            "$ref": "#/components/headers/X-Total-Count"
          },
          "X-Result-Count": {
            "$ref": "#/components/headers/X-Result-Count"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProductOffering"
              }
            },
            "examples": {
              "ProductOffering_list_example": {
                "$ref": "#/components/examples/ProductOffering_list_example_response"
              }
            }
          }
        }
      },
      "200ProductOffering_Get": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProductOffering"
            },
            "examples": {
              "ProductOffering_retrieve_example": {
                "$ref": "#/components/examples/ProductOffering_retrieve_example_response"
              }
            }
          }
        }
      },
      "200ProductOffering_Patch": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProductOffering"
            },
            "examples": {
              "Product_Offering_Update_Implicit_Merge": {
                "$ref": "#/components/examples/Product_Offering_Update_Implicit_Merge_response"
              }
            }
          },
          "application/merge-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/ProductOffering"
            },
            "examples": {
              "Product_Offering_Update_Patch_Merge": {
                "$ref": "#/components/examples/Product_Offering_Update_Patch_Merge_response"
              }
            }
          },
          "application/json-patch+json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProductOffering"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductOffering"
                  }
                },
                {
                  "type": "string",
                  "nullable": true
                }
              ]
            },
            "examples": {
              "Product_Offering_Update_JSON_Patch": {
                "$ref": "#/components/examples/Product_Offering_Update_JSON_Patch_response"
              }
            }
          },
          "application/json-patch-query+json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProductOffering"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductOffering"
                  }
                },
                {
                  "type": "string",
                  "nullable": true
                }
              ]
            },
            "examples": {
              "Product_Offering_Update_JSON_Patch_Query": {
                "$ref": "#/components/examples/Product_Offering_Update_JSON_Patch_Query_response"
              }
            }
          }
        }
      },
      "201ProductOffering": {
        "description": "OK/Created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProductOffering"
            },
            "examples": {
              "Product_Offering_Create_example": {
                "$ref": "#/components/examples/Product_Offering_Create_example_response"
              }
            }
          }
        }
      },
      "200ProductSpecificationArray": {
        "description": "Success",
        "headers": {
          "X-Total-Count": {
            "$ref": "#/components/headers/X-Total-Count"
          },
          "X-Result-Count": {
            "$ref": "#/components/headers/X-Result-Count"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProductSpecification"
              }
            },
            "examples": {
              "ProductSpecification_list_example": {
                "$ref": "#/components/examples/ProductSpecification_list_example_response"
              }
            }
          }
        }
      },
      "200ProductSpecification_Get": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProductSpecification"
            },
            "examples": {
              "ProductSpecification_retrieve_example": {
                "$ref": "#/components/examples/ProductSpecification_retrieve_example_response"
              }
            }
          }
        }
      },
      "200ProductSpecification_Patch": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProductSpecification"
            },
            "examples": {
              "Product_Specification_Update_Implicit_Merge_example": {
                "$ref": "#/components/examples/Product_Specification_Update_Implicit_Merge_example_response"
              }
            }
          },
          "application/merge-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/ProductSpecification"
            },
            "examples": {
              "Product_Specification_Update_Patch_Merge_example": {
                "$ref": "#/components/examples/Product_Specification_Update_Patch_Merge_example_response"
              }
            }
          },
          "application/json-patch+json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProductSpecification"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSpecification"
                  }
                },
                {
                  "type": "string",
                  "nullable": true
                }
              ]
            },
            "examples": {
              "Product_Specification_Update_JSON_Patch": {
                "$ref": "#/components/examples/Product_Specification_Update_JSON_Patch_response"
              }
            }
          },
          "application/json-patch-query+json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProductSpecification"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSpecification"
                  }
                },
                {
                  "type": "string",
                  "nullable": true
                }
              ]
            },
            "examples": {
              "Product_Specification_Update_JSON_Patch_Query": {
                "$ref": "#/components/examples/Product_Specification_Update_JSON_Patch_Query_response"
              }
            }
          }
        }
      },
      "201ProductSpecification": {
        "description": "OK/Created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProductSpecification"
            },
            "examples": {
              "Product_Specification_Create_example": {
                "$ref": "#/components/examples/Product_Specification_Create_example_response"
              },
              "Product_Specification_Create_example_with_intent": {
                "$ref": "#/components/examples/Product_Specification_Create_example_with_intent_response"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "Id": {
        "name": "id",
        "in": "path",
        "description": "Identifier of the Resource",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "Fields": {
        "name": "fields",
        "in": "query",
        "description": "Comma-separated properties to be provided in response",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "Offset": {
        "name": "offset",
        "in": "query",
        "description": "Requested index for start of resources to be provided in response",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      },
      "Limit": {
        "name": "limit",
        "in": "query",
        "description": "Requested number of resources to be provided in response",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      }
    },
    "examples": {
      "ProductOffering_list_example_response": {
        "description": "Here is an example of a request for retrieving multiple offerings.",
        "value": [
          {
            "id": "7655",
            "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOffering/7655",
            "name": "Basic Firewall for Business",
            "description": "This product offering suggests a firewall service that can be deployed in business customer premise.",
            "version": "2.1",
            "validFor": {
              "startDateTime": "2020-09-23T00:00:00Z",
              "endDateTime": "2021-08-25T00:00:00Z"
            },
            "lastUpdate": "2020-09-27T00:00:00Z",
            "lifecycleStatus": "Active",
            "isBundle": false,
            "isSellable": true,
            "statusReason": "Released for sale",
            "place": [
              {
                "id": "9979",
                "href": "https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/9979",
                "name": "San Francisco Bay Area",
                "@referredType": "GeographicAddress",
                "@type": "PlaceRef"
              }
            ],
            "serviceLevelAgreement": {
              "id": "8082",
              "href": "https://mycsp.com:8080/tmf-api/slaManagement/v5/sla/8082",
              "name": "Gold SLA for Business",
              "@referredType": "ServiceLevelAgreement",
              "@type": "ServiceLevelAgreementRef"
            },
            "productSpecification": {
              "id": "9881",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
              "version": "1.1",
              "name": "Robotics999",
              "@referredType": "ProductSpecification",
              "@type": "ProductSpecificationRef"
            },
            "channel": [
              {
                "id": "4406",
                "href": "https://mycsp.com:8080/tmf-api/salesChannelManagement/v5/channel/4406",
                "name": "Online Channel",
                "@referredType": "SalesChannel",
                "@type": "ChannelRef"
              }
            ],
            "serviceCandidate": {
              "id": "8167",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceCandidate/8167",
              "version": "1.0",
              "name": "Mega Max",
              "@referredType": "ServiceCandidate",
              "@type": "ServiceCandidateRef"
            },
            "category": [
              {
                "id": "2646",
                "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/category/2646",
                "version": "2.0",
                "name": "Cloud",
                "@referredType": "Category",
                "@type": "CategoryRef"
              }
            ],
            "resourceCandidate": {
              "id": "8937",
              "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceCandidate/8937",
              "name": "Mega Band",
              "@referredType": "ResourceCandidate",
              "@type": "ResourceCandidateRef"
            },
            "productOfferingTerm": [
              {
                "name": "New Client Condition",
                "description": "This product offering term is for new client at fix duration of less than a year",
                "duration": {
                  "amount": 12,
                  "units": "Month"
                },
                "validFor": {
                  "startDateTime": "2020-09-23T00:00:00Z",
                  "endDateTime": "2021-09-23T00:00:00Z"
                },
                "@type": "ProductOfferingTerm"
              }
            ],
            "productOfferingPrice": [
              {
                "id": "1747",
                "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOfferingPrice/1747",
                "name": "Recurring Monthly Price for Business Firewall",
                "@referredType": "ProductOfferingPrice",
                "@type": "ProductOfferingPrice"
              }
            ],
            "agreement": [
              {
                "id": "5537",
                "href": "https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreement/5537",
                "name": "Moon",
                "@referredType": "Agreement",
                "@type": "AgreementRef"
              }
            ],
            "attachment": [
              {
                "description": "This attachment gives a block diagram of the firewall.",
                "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
                "mimeType": "image/jpeg",
                "id": "22",
                "url": "https://mycsp.com:7070/docloader?docnum=3534536",
                "@referredType": "Attachment",
                "@type": "AttachmentRefOrValue"
              }
            ],
            "marketSegment": [
              {
                "id": "1266",
                "href": "https://mycsp.com:8080/tmf-api/productOfferingReferences/v5/marketSegment/1266",
                "name": "North Region",
                "@referredType": "MarketSegment",
                "@type": "MarketSegmentRef"
              }
            ],
            "bundledProductOffering": [ ],
            "productOfferingRelationship": [
              {
                "id": "331",
                "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOffering/331",
                "relationshipType": "DependsOn",
                "validFor": {
                  "startDateTime": "2020-09-23T16:42:23Z"
                },
                "role": "A-Role",
                "name": "Carrier Grade NAT",
                "@referredType": "ProductOffering",
                "@type": "ProductOfferingRelationship"
              }
            ],
            "prodSpecCharValueUse": [
              {
                "name": "Number of Ports",
                "id": "3331",
                "description": "The total Number of Ports for this product",
                "valueType": "number",
                "minCardinality": 1,
                "maxCardinality": 1,
                "validFor": {
                  "startDateTime": "2020-09-23T00:00:00Z",
                  "endDateTime": "2021-09-23T00:00:00Z"
                },
                "@type": "ProductSpecificationCharacteristicValueUse",
                "productSpecCharacteristicValue": [
                  {
                    "isDefault": true,
                    "valueType": "number",
                    "validFor": {
                      "startDateTime": "2020-09-23T00:00:00Z",
                      "endDateTime": "2021-09-23T00:00:00Z"
                    },
                    "value": 8,
                    "@type": "NumberCharacteristicValueSpecification"
                  },
                  {
                    "isDefault": false,
                    "valueType": "number",
                    "validFor": {
                      "startDateTime": "2020-09-23T00:00:00Z",
                      "endDateTime": "2021-09-23T00:00:00Z"
                    },
                    "value": 16,
                    "@type": "NumberCharacteristicValueSpecification"
                  }
                ],
                "productSpecification": {
                  "id": "9881",
                  "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
                  "version": "1.1",
                  "name": "Robotics999",
                  "@referredType": "ProductSpecification",
                  "@type": "ProductSpecificationRef"
                }
              }
            ],
            "@type": "ProductOffering"
          },
          {
            "id": "2909",
            "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOffering/2909",
            "name": "Enhanced Broadband for business",
            "description": "This product offering suggesting broadband with high speed bandwidth that can be deployed in business customer premise.",
            "version": "1.0",
            "validFor": {
              "startDateTime": "2020-08-25T00:00:00Z",
              "endDateTime": "2021-08-25T00:00:00Z"
            },
            "lastUpdate": "2020-08-27T00:00:00Z",
            "lifecycleStatus": "Active",
            "isBundle": false,
            "isSellable": true,
            "statusReason": "None",
            "place": [
              {
                "id": "2927",
                "href": "https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/2927",
                "name": "Toronto",
                "@referredType": "GeographicAddress",
                "@type": "PlaceRef"
              }
            ],
            "serviceLevelAgreement": {
              "id": "8082",
              "href": "https://mycsp.com:8080/tmf-api/slaManagement/v5/sla/8082",
              "name": "Gold SLA for Business",
              "@referredType": "ServiceLevelAgreement",
              "@type": "ServiceLevelAgreementRef"
            },
            "productSpecification": {
              "id": "5843",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/5843",
              "version": "1.0",
              "name": "Enhanced Broadband PS",
              "@referredType": "ProductSpecification",
              "@type": "ProductSpecificationRef"
            },
            "channel": [
              {
                "id": "4406",
                "href": "https://mycsp.com:8080/tmf-api/salesChannelManagement/v5/channel/4406",
                "name": "Online Channel",
                "@referredType": "SalesChannel",
                "@type": "ChannelRef"
              }
            ],
            "category": [
              {
                "id": "5051",
                "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/category/5051",
                "version": "2.0",
                "name": "WiredServices",
                "@referredType": "Category",
                "@type": "CategoryRef"
              }
            ],
            "productOfferingTerm": [
              {
                "name": "3-year term",
                "description": "This product offering term is for a 3-year plan agreement",
                "duration": {
                  "amount": 36,
                  "units": "Month"
                },
                "validFor": {
                  "startDateTime": "2020-09-23T00:00:00Z",
                  "endDateTime": "2023-09-23T00:00:00Z"
                },
                "@type": "ProductOfferingTerm"
              }
            ],
            "productOfferingPrice": [
              {
                "id": "1103",
                "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOfferingPrice/1103",
                "name": "Recurring Monthly Price",
                "@referredType": "ProductOfferingPrice",
                "@type": "ProductOfferingPrice"
              }
            ],
            "agreement": [
              {
                "id": "5557",
                "href": "https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreement/5557",
                "name": "Service Contract",
                "@referredType": "Agreement",
                "@type": "AgreementRef"
              }
            ],
            "attachment": [
              {
                "description": "This attachment gives a block diagram of the firewall.",
                "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/2213",
                "mimeType": "image/jpeg",
                "id": "2213",
                "url": "https://mycsp.com:7070/docloader?docnum=3531741",
                "@referredType": "Attachment",
                "@type": "AttachmentRefOrValue"
              }
            ],
            "marketSegment": [ ],
            "bundledProductOffering": [ ],
            "productOfferingRelationship": [ ],
            "prodSpecCharValueUse": [
              {
                "name": "Bandwidth",
                "description": "The total Number of Mbps for this product",
                "id": "1907",
                "valueType": "number",
                "minCardinality": 1,
                "maxCardinality": 1,
                "validFor": {
                  "startDateTime": "2020-09-23T00:00:00Z",
                  "endDateTime": "2021-09-23T00:00:00Z"
                },
                "@type": "ProductSpecificationCharacteristicValueUse",
                "productSpecCharacteristicValue": [
                  {
                    "isDefault": true,
                    "valueType": "number",
                    "validFor": {
                      "startDateTime": "2020-09-23T00:00:00Z",
                      "endDateTime": "2021-09-23T00:00:00Z"
                    },
                    "value": 1000,
                    "@type": "NumberCharacteristicValueSpecification"
                  },
                  {
                    "isDefault": false,
                    "valueType": "number",
                    "validFor": {
                      "startDateTime": "2020-09-23T00:00:00Z",
                      "endDateTime": "2021-09-23T00:00:00Z"
                    },
                    "value": 2000,
                    "@type": "NumberCharacteristicValueSpecification"
                  }
                ],
                "productSpecification": {
                  "id": "5843",
                  "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/5843",
                  "version": "1.0",
                  "name": "Enhanced Broadband PS",
                  "@referredType": "ProductSpecification",
                  "@type": "ProductSpecificationRef"
                }
              }
            ],
            "@type": "ProductOffering"
          }
        ]
      },
      "ProductOffering_retrieve_example_response": {
        "description": "Here is an example of a request for retrieving a specific offering.",
        "value": {
          "id": "7655",
          "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOffering/7655",
          "name": "Basic Firewall for Business",
          "description": "This product offering suggests a firewall service that can be deployed in business customer premise.",
          "version": "2.1",
          "validFor": {
            "startDateTime": "2020-09-23T00:00:00Z",
            "endDateTime": "2021-08-25T00:00:00Z"
          },
          "lastUpdate": "2020-09-27T00:00:00Z",
          "lifecycleStatus": "Active",
          "isBundle": false,
          "isSellable": true,
          "statusReason": "Released for sale",
          "place": [
            {
              "id": "9979",
              "href": "https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/9979",
              "name": "San Francisco Bay Area",
              "@referredType": "GeographicAddress",
              "@type": "PlaceRef"
            }
          ],
          "serviceLevelAgreement": {
            "id": "8082",
            "href": "https://mycsp.com:8080/tmf-api/slaManagement/v5/sla/8082",
            "name": "Gold SLA for Business",
            "@referredType": "ServiceLevelAgreement",
            "@type": "ServiceLevelAgreementRef"
          },
          "productSpecification": {
            "id": "9881",
            "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
            "version": "1.1",
            "name": "Robotics999",
            "@referredType": "ProductSpecification",
            "@type": "ProductSpecificationRef"
          },
          "channel": [
            {
              "id": "4406",
              "href": "https://mycsp.com:8080/tmf-api/salesChannelManagement/v5/channel/4406",
              "name": "Online Channel",
              "@referredType": "Channel",
              "@type": "ChannelRef"
            }
          ],
          "serviceCandidate": {
            "id": "8167",
            "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceCandidate/8167",
            "version": "1.0",
            "name": "Mega Max",
            "@referredType": "ServiceCandidate",
            "@type": "ServiceCandidateRef"
          },
          "category": [
            {
              "id": "2646",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/category/2646",
              "version": "2.0",
              "name": "Cloud",
              "@referredType": "Category",
              "@type": "CategoryRef"
            }
          ],
          "resourceCandidate": {
            "id": "8937",
            "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceCandidate/8937",
            "name": "Mega Band",
            "@referredType": "ResourceCandidate",
            "@type": "ResourceCandidateRef"
          },
          "productOfferingTerm": [
            {
              "name": "New Client Condition",
              "description": "This product offering term is for new client at fix duration of less than a year",
              "duration": {
                "amount": 12,
                "units": "Month"
              },
              "validFor": {
                "startDateTime": "2020-09-23T00:00:00Z",
                "endDateTime": "2021-09-23T00:00:00Z"
              },
              "@type": "ProductOfferingTerm"
            }
          ],
          "productOfferingPrice": [
            {
              "id": "1747",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOfferingPrice/1747",
              "name": "Recurring Monthly Price for Business Firewall",
              "@referredType": "ProductOfferingPrice",
              "@type": "ProductOfferingPrice"
            }
          ],
          "agreement": [
            {
              "id": "5537",
              "href": "https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreement/5537",
              "name": "Moon",
              "@referredType": "Agreement",
              "@type": "AgreementRef"
            }
          ],
          "attachment": [
            {
              "description": "This attachment gives a block diagram of the firewall.",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "mimeType": "image/jpeg",
              "id": "22",
              "url": "https://mycsp.com:7070/docloader?docnum=3534536",
              "@referredType": "Attachment",
              "@type": "AttachmentRefOrValue"
            }
          ],
          "marketSegment": [
            {
              "id": "1266",
              "href": "https://mycsp.com:8080/tmf-api/productOfferingReferences/v5/marketSegment/1266",
              "name": "North Region",
              "@referredType": "MarketSegment",
              "@type": "MarketSegmentRef"
            }
          ],
          "bundledProductOffering": [ ],
          "productOfferingRelationship": [
            {
              "id": "331",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOffering/331",
              "relationshipType": "DependsOn",
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              },
              "role": "A-Role",
              "name": "Carrier Grade NAT",
              "@referredType": "ProductOffering",
              "@type": "ProductOfferingRelationship"
            }
          ],
          "prodSpecCharValueUse": [
            {
              "name": "Number of Ports",
              "id": "3331",
              "description": "The total Number of Ports for this product",
              "valueType": "number",
              "minCardinality": 1,
              "maxCardinality": 1,
              "validFor": {
                "startDateTime": "2020-09-23T00:00:00Z",
                "endDateTime": "2021-09-23T00:00:00Z"
              },
              "@type": "ProductSpecificationCharacteristicValueUse",
              "productSpecCharacteristicValue": [
                {
                  "isDefault": true,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2021-09-23T00:00:00Z"
                  },
                  "value": 8,
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2021-09-23T00:00:00Z"
                  },
                  "value": 16,
                  "@type": "NumberCharacteristicValueSpecification"
                }
              ],
              "productSpecification": {
                "id": "9881",
                "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
                "version": "1.1",
                "name": "Robotics999",
                "@referredType": "ProductSpecification",
                "@type": "ProductSpecificationRef"
              }
            }
          ],
          "@type": "ProductOffering"
        }
      },
      "ProductSpecification_list_example_response": {
        "description": "Here is an example of a request for retrieving multiple product specifications.",
        "value": [
          {
            "id": "9881",
            "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
            "name": "Cisco Firepower NGFW",
            "brand": "Cisco",
            "productNumber": "CSC-340-NGFW",
            "description": "Powerful product that integrates with a firewall, including intrusion prevention, advanced malware protection, cloud-based sandboxing, URL filtering, endpoint protection, web gateway, email security, network traffic analysis, network access control and CASB.",
            "isBundle": true,
            "lastUpdate": "2020-09-23T16:42:23Z",
            "lifecycleStatus": "Active",
            "validFor": {
              "startDateTime": "2020-09-23T00:00:00Z",
              "endDateTime": "2022-11-24T16:42:23Z"
            },
            "version": "2.0",
            "relatedParty": [
              {
                "role": "Owner",
                "@type": "RelatedPartyRefOrPartyRoleRef",
                "partyOrPartyRole": {
                  "id": "1234",
                  "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/partyRole/1234",
                  "name": "Gustave Flaubert",
                  "@type": "PartyRef",
                  "@referredType": "Individual"
                }
              }
            ],
            "attachment": [
              {
                "id": "22",
                "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
                "name": "Product Picture",
                "mimeType": "image/jpeg",
                "url": "https://mycsp.com:7070/docloader?docnum=774451234",
                "@referredType": "Attachment",
                "@type": "AttachmentRefOrValue"
              },
              {
                "id": "33",
                "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
                "name": "Product Manual",
                "mimeType": "application/pdf",
                "url": "https://mycsp.com:7070/docloader?docnum=774454321",
                "@referredType": "Attachment",
                "@type": "AttachmentRefOrValue"
              }
            ],
            "bundledProductSpecification": [
              {
                "id": "15",
                "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/15",
                "name": "URL Filter",
                "@type": "BundledProductSpecification",
                "@baseType": "",
                "lifecycleStatus": "Active"
              },
              {
                "id": "64",
                "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/64",
                "name": "Malware Protector",
                "@type": "BundledProductSpecification",
                "@baseType": "",
                "lifecycleStatus": "Active"
              }
            ],
            "targetProductSchema": {
              "@type": "Firewall",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Product/Firewall.schema.json"
            },
            "productSpecificationRelationship": [
              {
                "id": "23",
                "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/23",
                "relationshipType": "OptionalFor",
                "validFor": {
                  "startDateTime": "2020-09-23T16:42:23Z"
                },
                "name": "DataPlan",
                "role": "A-Item",
                "@referredType": "ProductSpecification",
                "@type": "ProductSpecificationRelationship"
              }
            ],
            "serviceSpecification": [
              {
                "id": "22",
                "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/22",
                "name": "Firewall",
                "version": "1.0",
                "@referredType": "ServiceSpecification",
                "@type": "ServiceSpecificationRef"
              }
            ],
            "resourceSpecification": [
              {
                "id": "63",
                "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceSpecification/63",
                "name": "Firewall Port",
                "version": "1.0",
                "@referredType": "PhysicalResourceSpecification",
                "@type": "ResourceSpecificationRef"
              }
            ],
            "productSpecCharacteristic": [
              {
                "name": "Number of Ports",
                "description": "The total Number of Ports for this product",
                "valueType": "number",
                "configurable": true,
                "minCardinality": 1,
                "maxCardinality": 1,
                "isUnique": true,
                "@type": "CharacteristicSpecification",
                "charSpecRelationship": [
                  {
                    "parentSpecificationId": "43",
                    "parentSpecificationHref": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/43",
                    "characteristicSpecificationId": "2",
                    "name": "Bandwidth",
                    "validFor": {
                      "startDateTime": "2020-09-23T16:42:23-04:00"
                    },
                    "@type": "CharacteristicSpecificationRelationship"
                  }
                ],
                "characteristicValueSpecification": [
                  {
                    "isDefault": true,
                    "valueType": "number",
                    "validFor": {
                      "startDateTime": "2020-09-23T00:00:00Z",
                      "endDateTime": "2022-11-24T00:00:00Z"
                    },
                    "value": "8",
                    "@type": "NumberCharacteristicValueSpecification"
                  },
                  {
                    "isDefault": false,
                    "valueType": "number",
                    "validFor": {
                      "startDateTime": "2020-09-23T00:00:00Z",
                      "endDateTime": "2022-11-24T00:00:00Z"
                    },
                    "value": "16",
                    "@type": "NumberCharacteristicValueSpecification"
                  },
                  {
                    "isDefault": false,
                    "valueType": "number",
                    "validFor": {
                      "startDateTime": "2020-09-23T00:00:00Z",
                      "endDateTime": "2022-11-24T00:00:00Z"
                    },
                    "value": "24",
                    "@type": "NumberCharacteristicValueSpecification"
                  }
                ],
                "validFor": {
                  "startDateTime": "2020-09-23T16:42:23Z"
                }
              },
              {
                "name": "Color",
                "description": "Color of the Firewall housing",
                "valueType": "string",
                "configurable": true,
                "minCardinality": 1,
                "maxCardinality": 1,
                "extensible": true,
                "isUnique": true,
                "@type": "CharacteristicSpecification",
                "characteristicValueSpecification": [
                  {
                    "isDefault": true,
                    "valueType": "string",
                    "value": "Black",
                    "@type": "StringCharacteristicValueSpecification"
                  },
                  {
                    "isDefault": false,
                    "valueType": "string",
                    "value": "White",
                    "@type": "StringCharacteristicValueSpecification"
                  }
                ],
                "validFor": {
                  "startDateTime": "2020-09-23T16:42:23Z"
                }
              }
            ],
            "@type": "ProductSpecification"
          },
          {
            "id": "5563",
            "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/5563",
            "name": "Deep Packet Inspection",
            "brand": "HPE",
            "productNumber": "HPE-367-DPI",
            "description": "This product specification describes a Deep Packet Inspection product that can be deployed in customer premise.",
            "isBundle": false,
            "lastUpdate": "2020-10-23T16:42:23Z",
            "lifecycleStatus": "In Design",
            "validFor": {
              "startDateTime": "2020-09-23T00:00:00Z",
              "endDateTime": "2022-11-24T16:42:23Z"
            },
            "version": "1.0",
            "relatedParty": [
              {
                "role": "Owner",
                "@type": "RelatedPartyRefOrPartyRoleRef",
                "partyOrPartyRole": {
                  "id": "1234",
                  "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/partyRole/1234",
                  "name": "Gustave Flaubert",
                  "@type": "PartyRef",
                  "@referredType": "Individual"
                }
              }
            ],
            "attachment": [
              {
                "id": "2017",
                "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/2017",
                "name": "Product Manual",
                "mimeType": "application/pdf",
                "url": "https://mycsp.com:7070/docloader?docnum=4168051665",
                "@referredType": "Attachment",
                "@type": "AttachmentRefOrValue"
              }
            ],
            "targetProductSchema": {
              "@type": "DPI",
              "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Product/Firewall.schema.json"
            },
            "serviceSpecification": [
              {
                "id": "5059",
                "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/5059",
                "name": "DPI Service",
                "version": "1.0",
                "@referredType": "ServiceSpecification",
                "@type": "ServiceSpecificationRef"
              }
            ],
            "productSpecCharacteristic": [
              {
                "name": "httpIncomingTraffic",
                "description": "DPI for http Incoming Traffic",
                "valueType": "string",
                "configurable": true,
                "minCardinality": 1,
                "maxCardinality": 1,
                "isUnique": true,
                "@type": "CharacteristicSpecification",
                "characteristicValueSpecification": [
                  {
                    "isDefault": true,
                    "valueType": "string",
                    "validFor": {
                      "startDateTime": "2020-09-23T00:00:00Z",
                      "endDateTime": "2022-11-24T00:00:00Z"
                    },
                    "value": "enabled",
                    "@type": "StringCharacteristicValueSpecification"
                  },
                  {
                    "isDefault": false,
                    "valueType": "string",
                    "validFor": {
                      "startDateTime": "2020-09-23T00:00:00Z",
                      "endDateTime": "2022-11-24T00:00:00Z"
                    },
                    "value": "disabled",
                    "@type": "StringCharacteristicValueSpecification"
                  }
                ],
                "validFor": {
                  "startDateTime": "2020-09-23T16:42:23Z"
                }
              },
              {
                "name": "httpIOutgoingTraffic",
                "description": "DPI for http Outgoing Traffic",
                "valueType": "string",
                "configurable": true,
                "minCardinality": 1,
                "maxCardinality": 1,
                "extensible": true,
                "isUnique": true,
                "@type": "CharacteristicSpecification",
                "characteristicValueSpecification": [
                  {
                    "isDefault": false,
                    "valueType": "string",
                    "value": "enabled",
                    "@type": "StringCharacteristicValueSpecification"
                  },
                  {
                    "isDefault": true,
                    "valueType": "string",
                    "value": "disabled",
                    "@type": "StringCharacteristicValueSpecification"
                  }
                ],
                "validFor": {
                  "startDateTime": "2020-09-23T16:42:23Z"
                }
              }
            ],
            "@type": "ProductSpecification"
          }
        ]
      },
      "ProductSpecification_retrieve_example_response": {
        "description": "Here is an example of a request for retrieving a specific specification.",
        "value": {
          "id": "9881",
          "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
          "name": "Cisco Firepower NGFW",
          "brand": "Cisco",
          "productNumber": "CSC-340-NGFW",
          "description": "Powerful product that integrates with a firewall, including intrusion prevention, advanced malware protection, cloud-based sandboxing, URL filtering, endpoint protection, web gateway, email security, network traffic analysis, network access control and CASB.",
          "isBundle": true,
          "lastUpdate": "2020-09-23T16:42:23Z",
          "lifecycleStatus": "Active",
          "validFor": {
            "startDateTime": "2020-09-23T00:00:00Z",
            "endDateTime": "2022-11-24T16:42:23Z"
          },
          "version": "2.0",
          "relatedParty": [
            {
              "role": "Owner",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "partyOrPartyRole": {
                "id": "1234",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/partyRole/1234",
                "name": "Gustave Flaubert",
                "@type": "PartyRef",
                "@referredType": "Individual"
              }
            }
          ],
          "attachment": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Picture",
              "mimeType": "image/jpeg",
              "url": "https://mycsp.com:7070/docloader?docnum=774451234",
              "@referredType": "Attachment",
              "@type": "AttachmentRefOrValue"
            },
            {
              "id": "33",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Manual",
              "mimeType": "application/pdf",
              "url": "https://mycsp.com:7070/docloader?docnum=774454321",
              "@referredType": "Attachment",
              "@type": "AttachmentRefOrValue"
            }
          ],
          "bundledProductSpecification": [
            {
              "id": "15",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/15",
              "name": "URL Filter",
              "@type": "BundledProductSpecification",
              "lifecycleStatus": "Active"
            },
            {
              "id": "64",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/64",
              "name": "Malware Protector",
              "@type": "BundledProductSpecification",
              "lifecycleStatus": "Active"
            }
          ],
          "targetProductSchema": {
            "@type": "Firewall",
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Product/Firewall.schema.json"
          },
          "productSpecificationRelationship": [
            {
              "id": "23",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/23",
              "relationshipType": "OptionalFor",
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              },
              "name": "DataPlan",
              "role": "A-Item",
              "@referredType": "ProductSpecification",
              "@type": "ProductSpecificationRelationship"
            }
          ],
          "serviceSpecification": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/22",
              "name": "Firewall",
              "version": "1.0",
              "@referredType": "ServiceSpecification",
              "@type": "ServiceSpecificationRef"
            }
          ],
          "resourceSpecification": [
            {
              "id": "63",
              "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceSpecification/63",
              "name": "Firewall Port",
              "version": "1.0",
              "@referredType": "PhysicalResourceSpecification",
              "@type": "ResourceSpecificationRef"
            }
          ],
          "productSpecCharacteristic": [
            {
              "name": "Number of Ports",
              "description": "The total Number of Ports for this product",
              "valueType": "number",
              "configurable": true,
              "minCardinality": 1,
              "maxCardinality": 1,
              "isUnique": true,
              "@type": "CharacteristicSpecification",
              "charSpecRelationship": [
                {
                  "parentSpecificationId": "43",
                  "parentSpecificationHref": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/43",
                  "characteristicSpecificationId": "2",
                  "relationshipType": "Dependency",
                  "name": "Bandwidth",
                  "validFor": {
                    "startDateTime": "2020-09-23T16:42:23-04:00"
                  },
                  "@type": "CharacteristicSpecificationRelationship"
                }
              ],
              "characteristicValueSpecification": [
                {
                  "isDefault": true,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": 8,
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": 16,
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": 24,
                  "@type": "NumberCharacteristicValueSpecification"
                }
              ],
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              }
            },
            {
              "name": "Color",
              "description": "Color of the Firewall housing",
              "valueType": "string",
              "configurable": true,
              "minCardinality": 1,
              "maxCardinality": 1,
              "extensible": true,
              "isUnique": true,
              "@type": "CharacteristicSpecification",
              "characteristicValueSpecification": [
                {
                  "isDefault": true,
                  "valueType": "string",
                  "value": "Black",
                  "@type": "StringCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "string",
                  "value": "White",
                  "@type": "StringCharacteristicValueSpecification"
                }
              ],
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              }
            }
          ],
          "@type": "ProductSpecification"
        }
      },
      "Product_Offering_Create_example_request": {
        "description": "Here is an example of a request for creating a product offering.",
        "value": {
          "id": "7655",
          "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOffering/7655",
          "name": "Basic Firewall for Business",
          "description": "This product offering suggests a firewall service that can be deployed in business customer premise.",
          "version": "1.0",
          "validFor": {
            "startDateTime": "2020-09-23T00:00:00Z",
            "endDateTime": "2021-08-25T00:00:00Z"
          },
          "lastUpdate": "2020-09-27T00:00:00Z",
          "lifecycleStatus": "Active",
          "isBundle": false,
          "isSellable": true,
          "statusReason": "Released for sale",
          "place": [
            {
              "id": "9979",
              "href": "https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/9979",
              "name": "San Francisco Bay Area",
              "@referredType": "GeographicAddress",
              "@type": "PlaceRef"
            }
          ],
          "serviceLevelAgreement": {
            "id": "8082",
            "href": "https://mycsp.com:8080/tmf-api/slaManagement/v5/sla/8082",
            "name": "Gold SLA for Business",
            "@referredType": "ServiceLevelAgreement",
            "@type": "ServiceLevelAgreementRef"
          },
          "productSpecification": {
            "id": "9881",
            "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
            "version": "1.1",
            "name": "Robotics999",
            "@referredType": "ProductSpecification",
            "@type": "ProductSpecificationRef"
          },
          "channel": [
            {
              "id": "4406",
              "href": "https://mycsp.com:8080/tmf-api/salesChannelManagement/v5/channel/4406",
              "name": "Online Channel",
              "@referredType": "Channel",
              "@type": "ChannelRef"
            }
          ],
          "serviceCandidate": {
            "id": "8167",
            "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceCandidate/8167",
            "version": "1.0",
            "name": "Mega Max",
            "@referredType": "ServiceCandidate",
            "@type": "ServiceCandidateRef"
          },
          "category": [
            {
              "id": "2646",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/category/2646",
              "version": "2.0",
              "name": "Cloud",
              "@referredType": "Category",
              "@type": "CategoryRef"
            }
          ],
          "resourceCandidate": {
            "id": "8937",
            "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceCandidate/8937",
            "name": "Mega Band",
            "@referredType": "ResourceCandidate",
            "@type": "ResourceCandidateRef"
          },
          "productOfferingTerm": [
            {
              "name": "New Client Condition",
              "description": "This product offering term is for new client at fix duration of less than a year",
              "duration": {
                "amount": 12,
                "units": "Month"
              },
              "validFor": {
                "startDateTime": "2020-09-23T00:00:00Z",
                "endDateTime": "2021-09-23T00:00:00Z"
              },
              "@type": "ProductOfferingTerm"
            }
          ],
          "productOfferingPrice": [
            {
              "id": "1747",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOfferingPrice/1747",
              "name": "Recurring Monthly Price for Business Firewall",
              "@referredType": "ProductOfferingPrice",
              "@type": "ProductOfferingPrice"
            }
          ],
          "agreement": [
            {
              "id": "5537",
              "href": "https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreement/5537",
              "name": "Moon",
              "@referredType": "Agreement",
              "@type": "AgreementRef"
            }
          ],
          "attachment": [
            {
              "description": "This attachment gives a block diagram of the firewall.",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "mimeType": "image/jpeg",
              "id": "22",
              "name": "My Attachment",
              "url": "https://mycsp.com:7070/docloader?docnum=3534536",
              "@referredType": "Attachment",
              "@type": "AttachmentRef"
            }
          ],
          "marketSegment": [
            {
              "id": "1266",
              "href": "https://mycsp.com:8080/tmf-api/productOfferingReferences/v5/marketSegment/1266",
              "name": "North Region",
              "@referredType": "MarketSegment",
              "@type": "MarketSegmentRef"
            }
          ],
          "bundledProductOffering": [ ],
          "productOfferingRelationship": [
            {
              "id": "331",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOffering/331",
              "relationshipType": "DependsOn",
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              },
              "role": "A-Role",
              "name": "Carrier Grade NAT",
              "@referredType": "ProductOffering",
              "@type": "ProductOfferingRelationship"
            }
          ],
          "prodSpecCharValueUse": [
            {
              "name": "Number of Ports",
              "id": "3331",
              "description": "The total Number of Ports for this product",
              "valueType": "number",
              "minCardinality": 1,
              "maxCardinality": 1,
              "validFor": {
                "startDateTime": "2020-09-23T00:00:00Z",
                "endDateTime": "2021-09-23T00:00:00Z"
              },
              "@type": "ProductSpecificationCharacteristicValueUse",
              "productSpecCharacteristicValue": [
                {
                  "isDefault": true,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2021-09-23T00:00:00Z"
                  },
                  "value": "8",
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2021-09-23T00:00:00Z"
                  },
                  "value": "16",
                  "@type": "NumberCharacteristicValueSpecification"
                }
              ],
              "productSpecification": {
                "id": "9881",
                "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
                "version": "1.1",
                "name": "Robotics999",
                "@referredType": "ProductSpecification",
                "@type": "ProductSpecificationRef"
              }
            }
          ],
          "@type": "ProductOffering"
        }
      },
      "Product_Offering_Create_example_response": {
        "description": "Here is an example of a response for creating a product offering.",
        "value": {
          "id": "7655",
          "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOffering/7655",
          "name": "Basic Firewall for Business",
          "description": "This product offering suggests a firewall service that can be deployed in business customer premise.",
          "version": "1.0",
          "validFor": {
            "startDateTime": "2020-09-23T00:00:00Z",
            "endDateTime": "2021-08-25T00:00:00Z"
          },
          "lastUpdate": "2020-09-27T00:00:00Z",
          "lifecycleStatus": "Active",
          "isBundle": false,
          "isSellable": true,
          "statusReason": "Released for sale",
          "place": [
            {
              "id": "9979",
              "href": "https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/9979",
              "name": "San Francisco Bay Area",
              "@referredType": "GeographicAddress",
              "@type": "PlaceRef"
            }
          ],
          "serviceLevelAgreement": {
            "id": "8082",
            "href": "https://mycsp.com:8080/tmf-api/slaManagement/v5/sla/8082",
            "name": "Gold SLA for Business",
            "@referredType": "ServiceLevelAgreement",
            "@type": "ServiceLevelAgreementRef"
          },
          "productSpecification": {
            "id": "9881",
            "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
            "version": "1.1",
            "name": "Robotics999",
            "@referredType": "ProductSpecification",
            "@type": "ProductSpecificationRef"
          },
          "channel": [
            {
              "id": "4406",
              "href": "https://mycsp.com:8080/tmf-api/salesChannelManagement/v5/channel/4406",
              "name": "Online Channel",
              "@referredType": "Channel",
              "@type": "ChannelRef"
            }
          ],
          "serviceCandidate": {
            "id": "8167",
            "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceCandidate/8167",
            "version": "1.0",
            "name": "Mega Max",
            "@referredType": "ServiceCandidate",
            "@type": "ServiceCandidateRef"
          },
          "category": [
            {
              "id": "2646",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/category/2646",
              "version": "2.0",
              "name": "Cloud",
              "@referredType": "Category",
              "@type": "CategoryRef"
            }
          ],
          "resourceCandidate": {
            "id": "8937",
            "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceCandidate/8937",
            "name": "Mega Band",
            "@referredType": "ResourceCandidate",
            "@type": "ResourceCandidateRef"
          },
          "productOfferingTerm": [
            {
              "name": "New Client Condition",
              "description": "This product offering term is for new client at fix duration of less than a year",
              "duration": {
                "amount": 12,
                "units": "Month"
              },
              "validFor": {
                "startDateTime": "2020-09-23T00:00:00Z",
                "endDateTime": "2021-09-23T00:00:00Z"
              },
              "@type": "ProductOfferingTerm"
            }
          ],
          "productOfferingPrice": [
            {
              "id": "1747",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOfferingPrice/1747",
              "name": "Recurring Monthly Price for Business Firewall",
              "@referredType": "ProductOfferingPrice",
              "@type": "ProductOfferingPrice"
            }
          ],
          "agreement": [
            {
              "id": "5537",
              "href": "https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreement/5537",
              "name": "Moon",
              "@referredType": "Agreement",
              "@type": "AgreementRef"
            }
          ],
          "attachment": [
            {
              "description": "This attachment gives a block diagram of the firewall.",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "mimeType": "image/jpeg",
              "id": "22",
              "url": "https://mycsp.com:7070/docloader?docnum=3534536",
              "@referredType": "Attachment",
              "@type": "AttachmentRefOrValue"
            }
          ],
          "marketSegment": [
            {
              "id": "1266",
              "href": "https://mycsp.com:8080/tmf-api/productOfferingReferences/v5/marketSegment/1266",
              "name": "North Region",
              "@referredType": "MarketSegment",
              "@type": "MarketSegmentRef"
            }
          ],
          "bundledProductOffering": [ ],
          "productOfferingRelationship": [
            {
              "id": "331",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOffering/331",
              "relationshipType": "DependsOn",
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              },
              "role": "A-Role",
              "name": "Carrier Grade NAT",
              "@referredType": "ProductOffering",
              "@type": "ProductOfferingRelationship"
            }
          ],
          "prodSpecCharValueUse": [
            {
              "name": "Number of Ports",
              "id": "3331",
              "description": "The total Number of Ports for this product",
              "valueType": "number",
              "minCardinality": 1,
              "maxCardinality": 1,
              "validFor": {
                "startDateTime": "2020-09-23T00:00:00Z",
                "endDateTime": "2021-09-23T00:00:00Z"
              },
              "@type": "ProductSpecificationCharacteristicValueUse",
              "productSpecCharacteristicValue": [
                {
                  "isDefault": true,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2021-09-23T00:00:00Z"
                  },
                  "value": 8,
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2021-09-23T00:00:00Z"
                  },
                  "value": 16,
                  "@type": "NumberCharacteristicValueSpecification"
                }
              ],
              "productSpecification": {
                "id": "9881",
                "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
                "version": "1.1",
                "name": "Robotics999",
                "@referredType": "ProductSpecification",
                "@type": "ProductSpecificationRef"
              }
            }
          ],
          "@type": "ProductOffering"
        }
      },
      "Product_Specification_Create_example_request": {
        "description": "Here is an example of a request for creating a product specification.",
        "value": {
          "id": "9881",
          "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
          "name": "Cisco Firepower NGFW",
          "brand": "Cisco",
          "productNumber": "CSC-340-NGFW",
          "description": "Powerful product that integrates with a firewall, including intrusion prevention, advanced malware protection, cloud-based sandboxing, URL filtering, endpoint protection, web gateway, email security, network traffic analysis, network access control and CASB.",
          "isBundle": true,
          "lastUpdate": "2020-09-23T16:42:23Z",
          "lifecycleStatus": "Active",
          "validFor": {
            "startDateTime": "2020-09-23T00:00:00Z",
            "endDateTime": "2022-11-24T16:42:23Z"
          },
          "version": "1.0",
          "relatedParty": [
            {
              "role": "Owner",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "partyOrPartyRole": {
                "id": "1234",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/partyRole/1234",
                "name": "Gustave Flaubert",
                "@type": "PartyRef",
                "@referredType": "Individual"
              }
            }
          ],
          "attachment": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Picture",
              "mimeType": "image/jpeg",
              "url": "https://mycsp.com:7070/docloader?docnum=774451234",
              "@referredType": "Attachment",
              "@type": "AttachmentRef"
            },
            {
              "id": "33",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Manual",
              "mimeType": "application/pdf",
              "url": "https://mycsp.com:7070/docloader?docnum=774454321",
              "@referredType": "Attachment",
              "@type": "AttachmentRef"
            }
          ],
          "bundledProductSpecification": [
            {
              "id": "15",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/15",
              "name": "URL Filter",
              "@type": "BundledProductSpecification",
              "lifecycleStatus": "Active"
            },
            {
              "id": "64",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/64",
              "name": "Malware Protector",
              "@type": "BundledProductSpecification",
              "lifecycleStatus": "Active"
            }
          ],
          "targetProductSchema": {
            "@type": "Firewall",
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Product/Firewall.schema.json"
          },
          "productSpecificationRelationship": [
            {
              "id": "23",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/23",
              "relationshipType": "OptionalFor",
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              },
              "name": "DataPlan",
              "role": "A-Item",
              "@referredType": "ProductSpecification",
              "@type": "ProductSpecificationRelationship"
            }
          ],
          "serviceSpecification": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/22",
              "name": "Firewall",
              "version": "1.0",
              "@referredType": "ServiceSpecification",
              "@type": "ServiceSpecificationRef"
            }
          ],
          "resourceSpecification": [
            {
              "id": "63",
              "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceSpecification/63",
              "name": "Firewall Port",
              "version": "1.0",
              "@referredType": "PhysicalResourceSpecification",
              "@type": "ResourceSpecificationRef"
            }
          ],
          "productSpecCharacteristic": [
            {
              "name": "Number of Ports",
              "description": "The total Number of Ports for this product",
              "valueType": "number",
              "configurable": true,
              "minCardinality": 1,
              "maxCardinality": 1,
              "isUnique": true,
              "@type": "CharacteristicSpecification",
              "charSpecRelationship": [
                {
                  "parentSpecificationId": "43",
                  "parentSpecificationHref": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/43",
                  "characteristicSpecificationId": "2",
                  "relationshipType": "dependency",
                  "name": "Bandwidth",
                  "validFor": {
                    "startDateTime": "2020-09-23T16:42:23-04:00"
                  },
                  "@type": "CharacteristicSpecificationRelationship"
                }
              ],
              "characteristicValueSpecification": [
                {
                  "isDefault": true,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": "8",
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": "16",
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": "24",
                  "@type": "NumberCharacteristicValueSpecification"
                }
              ],
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              }
            },
            {
              "name": "Color",
              "description": "Color of the Firewall housing",
              "valueType": "string",
              "configurable": true,
              "minCardinality": 1,
              "maxCardinality": 1,
              "extensible": true,
              "isUnique": true,
              "@type": "CharacteristicSpecification",
              "characteristicValueSpecification": [
                {
                  "isDefault": true,
                  "valueType": "string",
                  "value": "Black",
                  "@type": "StringCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "string",
                  "value": "White",
                  "@type": "StringCharacteristicValueSpecification"
                }
              ],
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              }
            }
          ],
          "@type": "ProductSpecification"
        }
      },
      "Product_Specification_Create_example_response": {
        "description": "Here is an example of a response for creating a product specification.",
        "value": {
          "id": "9881",
          "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
          "name": "Cisco Firepower NGFW",
          "brand": "Cisco",
          "productNumber": "CSC-340-NGFW",
          "description": "Powerful product that integrates with a firewall, including intrusion prevention, advanced malware protection, cloud-based sandboxing, URL filtering, endpoint protection, web gateway, email security, network traffic analysis, network access control and CASB.",
          "isBundle": true,
          "lastUpdate": "2020-09-23T16:42:23Z",
          "lifecycleStatus": "Active",
          "validFor": {
            "startDateTime": "2020-09-23T00:00:00Z",
            "endDateTime": "2022-11-24T16:42:23Z"
          },
          "version": "1.0",
          "relatedParty": [
            {
              "role": "Owner",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "partyOrPartyRole": {
                "id": "1234",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/partyRole/1234",
                "name": "Gustave Flaubert",
                "@type": "PartyRef",
                "@referredType": "Individual"
              }
            }
          ],
          "attachment": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Picture",
              "mimeType": "image/jpeg",
              "url": "https://mycsp.com:7070/docloader?docnum=774451234",
              "@referredType": "Attachment",
              "@type": "AttachmentRefOrValue"
            },
            {
              "id": "33",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Manual",
              "mimeType": "application/pdf",
              "url": "https://mycsp.com:7070/docloader?docnum=774454321",
              "@referredType": "Attachment",
              "@type": "AttachmentRefOrValue"
            }
          ],
          "bundledProductSpecification": [
            {
              "id": "15",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/15",
              "name": "URL Filter",
              "@type": "BundledProductSpecification",
              "lifecycleStatus": "Active"
            },
            {
              "id": "64",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/64",
              "name": "Malware Protector",
              "@type": "BundledProductSpecification",
              "lifecycleStatus": "Active"
            }
          ],
          "targetProductSchema": {
            "@type": "Firewall",
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Product/Firewall.schema.json"
          },
          "productSpecificationRelationship": [
            {
              "id": "23",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/23",
              "relationshipType": "OptionalFor",
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              },
              "name": "DataPlan",
              "role": "A-Item",
              "@referredType": "ProductSpecification",
              "@type": "ProductSpecificationRelationship"
            }
          ],
          "serviceSpecification": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/22",
              "name": "Firewall",
              "version": "1.0",
              "@referredType": "ServiceSpecification",
              "@type": "ServiceSpecificationRef"
            }
          ],
          "resourceSpecification": [
            {
              "id": "63",
              "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceSpecification/63",
              "name": "Firewall Port",
              "version": "1.0",
              "@referredType": "PhysicalResourceSpecification",
              "@type": "ResourceSpecificationRef"
            }
          ],
          "productSpecCharacteristic": [
            {
              "name": "Number of Ports",
              "description": "The total Number of Ports for this product",
              "valueType": "number",
              "configurable": true,
              "minCardinality": 1,
              "maxCardinality": 1,
              "isUnique": true,
              "@type": "CharacteristicSpecification",
              "charSpecRelationship": [
                {
                  "parentSpecificationId": "43",
                  "parentSpecificationHref": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/43",
                  "characteristicSpecificationId": "2",
                  "name": "Bandwidth",
                  "validFor": {
                    "startDateTime": "2020-09-23T16:42:23-04:00"
                  },
                  "@type": "CharacteristicSpecificationRelationship"
                }
              ],
              "characteristicValueSpecification": [
                {
                  "isDefault": true,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": "8",
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": "16",
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": "24",
                  "@type": "NumberCharacteristicValueSpecification"
                }
              ],
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              }
            },
            {
              "name": "Color",
              "description": "Color of the Firewall housing",
              "valueType": "string",
              "configurable": true,
              "minCardinality": 1,
              "maxCardinality": 1,
              "extensible": true,
              "isUnique": true,
              "@type": "CharacteristicSpecification",
              "characteristicValueSpecification": [
                {
                  "isDefault": true,
                  "valueType": "string",
                  "value": "Black",
                  "@type": "StringCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "string",
                  "value": "White",
                  "@type": "StringCharacteristicValueSpecification"
                }
              ],
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              }
            }
          ],
          "@type": "ProductSpecification"
        }
      },
      "Product_Specification_Create_example_with_intent_request": {
        "description": "Here is an example of a request for creating a product specification with intent specifications.",
        "value": {
          "id": "9881",
          "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
          "name": "Cisco Firepower NGFW",
          "brand": "Cisco",
          "productNumber": "CSC-340-NGFW",
          "description": "Powerful product that integrates with a firewall, including intrusion prevention, advanced malware protection, cloud-based sandboxing, URL filtering, endpoint protection, web gateway, email security, network traffic analysis, network access control and CASB.",
          "isBundle": true,
          "lastUpdate": "2020-09-23T16:42:23Z",
          "lifecycleStatus": "Active",
          "validFor": {
            "startDateTime": "2020-09-23T00:00:00Z",
            "endDateTime": "2022-11-24T16:42:23Z"
          },
          "version": "1.0",
          "relatedParty": [
            {
              "role": "Owner",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "partyOrPartyRole": {
                "id": "1234",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/partyRole/1234",
                "name": "Gustave Flaubert",
                "@type": "PartyRef",
                "@referredType": "Individual"
              }
            }
          ],
          "attachment": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Picture",
              "mimeType": "image/jpeg",
              "url": "https://mycsp.com:7070/docloader?docnum=774451234",
              "@referredType": "Attachment",
              "@type": "AttachmentRef"
            },
            {
              "id": "33",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Manual",
              "mimeType": "application/pdf",
              "url": "https://mycsp.com:7070/docloader?docnum=774454321",
              "@referredType": "Attachment",
              "@type": "AttachmentRef"
            }
          ],
          "bundledProductSpecification": [
            {
              "id": "15",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/15",
              "name": "URL Filter",
              "@type": "BundledProductSpecification",
              "lifecycleStatus": "Active"
            },
            {
              "id": "64",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/64",
              "name": "Malware Protector",
              "@type": "BundledProductSpecification",
              "lifecycleStatus": "Active"
            }
          ],
          "targetProductSchema": {
            "@type": "Firewall",
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Product/Firewall.schema.json"
          },
          "productSpecificationRelationship": [
            {
              "id": "23",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/23",
              "relationshipType": "OptionalFor",
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              },
              "name": "DataPlan",
              "role": "A-Item",
              "@referredType": "ProductSpecification",
              "@type": "ProductSpecificationRelationship"
            }
          ],
          "serviceSpecification": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/22",
              "name": "Firewall",
              "version": "1.0",
              "@referredType": "ServiceSpecification",
              "@type": "ServiceSpecificationRef"
            }
          ],
          "resourceSpecification": [
            {
              "id": "63",
              "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceSpecification/63",
              "name": "Firewall Port",
              "version": "1.0",
              "@referredType": "PhysicalResourceSpecification",
              "@type": "ResourceSpecificationRef"
            }
          ],
          "intentSpecification": {
            "@type": "IntentSpecificationRef",
            "id": "EventLiveBroadcast_IntentSpec",
            "name": "EventLiveBroadcastIntentSpec",
            "@referredType": "IntentSpecification",
            "@href": "/intent/v5/IntentSpecification/EventLiveBroadcast_IntentSpec"
          },
          "@type": "ProductSpecification"
        }
      },
      "Product_Specification_Create_example_with_intent_response": {
        "description": "Here is an example of a response for creating a product specification specification with intent specifications.",
        "value": {
          "id": "9881",
          "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
          "name": "Cisco Firepower NGFW",
          "brand": "Cisco",
          "productNumber": "CSC-340-NGFW",
          "description": "Powerful product that integrates with a firewall, including intrusion prevention, advanced malware protection, cloud-based sandboxing, URL filtering, endpoint protection, web gateway, email security, network traffic analysis, network access control and CASB.",
          "isBundle": true,
          "lastUpdate": "2020-09-23T16:42:23Z",
          "lifecycleStatus": "Active",
          "validFor": {
            "startDateTime": "2020-09-23T00:00:00Z",
            "endDateTime": "2022-11-24T16:42:23Z"
          },
          "version": "1.0",
          "relatedParty": [
            {
              "role": "Owner",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "partyOrPartyRole": {
                "id": "1234",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/partyRole/1234",
                "name": "Gustave Flaubert",
                "@type": "PartyRef",
                "@referredType": "Individual"
              }
            }
          ],
          "attachment": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Picture",
              "mimeType": "image/jpeg",
              "url": "https://mycsp.com:7070/docloader?docnum=774451234",
              "@referredType": "Attachment",
              "@type": "AttachmentRefOrValue"
            },
            {
              "id": "33",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Manual",
              "mimeType": "application/pdf",
              "url": "https://mycsp.com:7070/docloader?docnum=774454321",
              "@referredType": "Attachment",
              "@type": "AttachmentRefOrValue"
            }
          ],
          "bundledProductSpecification": [
            {
              "id": "15",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/15",
              "name": "URL Filter",
              "@type": "BundledProductSpecification",
              "lifecycleStatus": "Active"
            },
            {
              "id": "64",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/64",
              "name": "Malware Protector",
              "@type": "BundledProductSpecification",
              "lifecycleStatus": "Active"
            }
          ],
          "targetProductSchema": {
            "@type": "Firewall",
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Product/Firewall.schema.json"
          },
          "productSpecificationRelationship": [
            {
              "id": "23",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/23",
              "relationshipType": "OptionalFor",
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              },
              "name": "DataPlan",
              "role": "A-Item",
              "@referredType": "ProductSpecification",
              "@type": "ProductSpecificationRelationship"
            }
          ],
          "serviceSpecification": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/22",
              "name": "Firewall",
              "version": "1.0",
              "@referredType": "ServiceSpecification",
              "@type": "ServiceSpecificationRef"
            }
          ],
          "resourceSpecification": [
            {
              "id": "63",
              "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceSpecification/63",
              "name": "Firewall Port",
              "version": "1.0",
              "@referredType": "PhysicalResourceSpecification",
              "@type": "ResourceSpecificationRef"
            }
          ],
          "intentSpecification": {
            "@type": "IntentSpecificationRef",
            "id": "EventLiveBroadcast_IntentSpec",
            "name": "EventLiveBroadcastIntentSpec",
            "@referredType": "IntentSpecification",
            "@href": "/intent/v5/IntentSpecification/EventLiveBroadcast_IntentSpec"
          },
          "@type": "ProductSpecification"
        }
      },
      "Product_Offering_Update_Patch_Merge_request": {
        "description": "Here is an example of a request for updating a product offering.",
        "value": {
          "version": "3.0",
          "validFor": {
            "startDateTime": "2020-11-06T00:00:00Z",
            "endDateTime": "2021-11-06T00:00:00Z"
          },
          "@type": "ProductOffering"
        }
      },
      "Product_Offering_Update_Patch_Merge_response": {
        "description": "Here is an example of a response for updating a product offering by adding a geographic area.",
        "value": {
          "id": "7655",
          "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOffering/7655",
          "name": "Basic Firewall for Business",
          "description": "This product offering suggests a firewall service that can be deployed in business customer premise.",
          "version": "3.0",
          "validFor": {
            "startDateTime": "2020-11-06T00:00:00Z",
            "endDateTime": "2021-11-06T00:00:00Z"
          },
          "lastUpdate": "2020-09-27T00:00:00Z",
          "lifecycleStatus": "Active",
          "isBundle": false,
          "isSellable": true,
          "statusReason": "Released for sale",
          "place": [
            {
              "id": "9979",
              "href": "https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/9979",
              "name": "San Francisco Bay Area",
              "@referredType": "GeographicAddress",
              "@type": "PlaceRef"
            }
          ],
          "serviceLevelAgreement": {
            "id": "8082",
            "href": "https://mycsp.com:8080/tmf-api/slaManagement/v5/sla/8082",
            "name": "Gold SLA for Business",
            "@referredType": "ServiceLevelAgreement",
            "@type": "ServiceLevelAgreementRef"
          },
          "productSpecification": {
            "id": "9881",
            "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
            "version": "1.1",
            "name": "Robotics999",
            "@referredType": "ProductSpecification",
            "@type": "ProductSpecificationRef"
          },
          "channel": [
            {
              "id": "4406",
              "href": "https://mycsp.com:8080/tmf-api/salesChannelManagement/v5/channel/4406",
              "name": "Online Channel",
              "@referredType": "SalesChannel",
              "@type": "ChannelRef"
            }
          ],
          "serviceCandidate": {
            "id": "8167",
            "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceCandidate/8167",
            "version": "1.0",
            "name": "Mega Max",
            "@referredType": "ServiceCandidate",
            "@type": "ServiceCandidateRef"
          },
          "category": [
            {
              "id": "2646",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/category/2646",
              "version": "2.0",
              "name": "Cloud",
              "@referredType": "Category",
              "@type": "CategoryRef"
            }
          ],
          "resourceCandidate": {
            "id": "8937",
            "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceCandidate/8937",
            "name": "Mega Band",
            "@referredType": "ResourceCandidate",
            "@type": "ResourceCandidateRef"
          },
          "productOfferingTerm": [
            {
              "name": "New Client Condition",
              "description": "This product offering term is for new client at fix duration of less than a year",
              "duration": {
                "amount": 12,
                "units": "Month"
              },
              "validFor": {
                "startDateTime": "2020-09-23T00:00:00Z",
                "endDateTime": "2021-09-23T00:00:00Z"
              },
              "@type": "ProductOfferingTerm"
            }
          ],
          "productOfferingPrice": [
            {
              "id": "1747",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOfferingPrice/1747",
              "name": "Recurring Monthly Price for Business Firewall",
              "@referredType": "ProductOfferingPrice",
              "@type": "ProductOfferingPrice"
            }
          ],
          "agreement": [
            {
              "id": "5537",
              "href": "https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreement/5537",
              "name": "Moon",
              "@referredType": "Agreement",
              "@type": "AgreementRef"
            }
          ],
          "attachment": [
            {
              "description": "This attachment gives a block diagram of the firewall.",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "mimeType": "image/jpeg",
              "id": "22",
              "url": "https://mycsp.com:7070/docloader?docnum=3534536",
              "@referredType": "Attachment",
              "@type": "AttachmentRefOrValue"
            }
          ],
          "marketSegment": [
            {
              "id": "1266",
              "href": "https://mycsp.com:8080/tmf-api/productOfferingReferences/v5/marketSegment/1266",
              "name": "North Region",
              "@referredType": "MarketSegment",
              "@type": "MarketSegmentRef"
            }
          ],
          "bundledProductOffering": [ ],
          "productOfferingRelationship": [
            {
              "id": "331",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOffering/331",
              "relationshipType": "DependsOn",
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              },
              "role": "A-Role",
              "name": "Carrier Grade NAT",
              "@referredType": "ProductOffering",
              "@type": "ProductOfferingRelationship"
            }
          ],
          "prodSpecCharValueUse": [
            {
              "name": "Number of Ports",
              "id": "3331",
              "description": "The total Number of Ports for this product",
              "valueType": "number",
              "minCardinality": 1,
              "maxCardinality": 1,
              "validFor": {
                "startDateTime": "2020-09-23T00:00:00Z",
                "endDateTime": "2021-09-23T00:00:00Z"
              },
              "@type": "ProductSpecificationCharacteristicValueUse",
              "productSpecCharacteristicValue": [
                {
                  "isDefault": true,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2021-09-23T00:00:00Z"
                  },
                  "value": 8,
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2021-09-23T00:00:00Z"
                  },
                  "value": 16,
                  "@type": "NumberCharacteristicValueSpecification"
                }
              ],
              "productSpecification": {
                "id": "9881",
                "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
                "version": "1.1",
                "name": "Robotics999",
                "@referredType": "ProductSpecification",
                "@type": "ProductSpecificationRef"
              }
            }
          ],
          "@type": "ProductOffering"
        }
      },
      "Product_Offering_Update_Implicit_Merge_request": {
        "description": "Here is an example of a request for updating a product offering.",
        "value": {
          "version": "3.0",
          "validFor": {
            "startDateTime": "2020-11-06T00:00:00Z",
            "endDateTime": "2021-11-06T00:00:00Z"
          },
          "@type": "ProductOffering"
        }
      },
      "Product_Offering_Update_Implicit_Merge_response": {
        "description": "Here is an example of a response for updating a product offering by adding a geographic area.",
        "value": {
          "id": "7655",
          "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOffering/7655",
          "name": "Basic Firewall for Business",
          "description": "This product offering suggests a firewall service that can be deployed in business customer premise.",
          "version": "3.0",
          "validFor": {
            "startDateTime": "2020-11-06T00:00:00Z",
            "endDateTime": "2021-11-06T00:00:00Z"
          },
          "lastUpdate": "2020-09-27T00:00:00Z",
          "lifecycleStatus": "Active",
          "isBundle": false,
          "isSellable": true,
          "statusReason": "Released for sale",
          "place": [
            {
              "id": "9979",
              "href": "https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/9979",
              "name": "San Francisco Bay Area",
              "@referredType": "GeographicAddress",
              "@type": "PlaceRef"
            }
          ],
          "serviceLevelAgreement": {
            "id": "8082",
            "href": "https://mycsp.com:8080/tmf-api/slaManagement/v5/sla/8082",
            "name": "Gold SLA for Business",
            "@referredType": "ServiceLevelAgreement",
            "@type": "ServiceLevelAgreementRef"
          },
          "productSpecification": {
            "id": "9881",
            "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
            "version": "1.1",
            "name": "Robotics999",
            "@referredType": "ProductSpecification",
            "@type": "ProductSpecificationRef"
          },
          "channel": [
            {
              "id": "4406",
              "href": "https://mycsp.com:8080/tmf-api/salesChannelManagement/v5/channel/4406",
              "name": "Online Channel",
              "@referredType": "SalesChannel",
              "@type": "ChannelRef"
            }
          ],
          "serviceCandidate": {
            "id": "8167",
            "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceCandidate/8167",
            "version": "1.0",
            "name": "Mega Max",
            "@referredType": "ServiceCandidate",
            "@type": "ServiceCandidateRef"
          },
          "category": [
            {
              "id": "2646",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/category/2646",
              "version": "2.0",
              "name": "Cloud",
              "@referredType": "Category",
              "@type": "CategoryRef"
            }
          ],
          "resourceCandidate": {
            "id": "8937",
            "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceCandidate/8937",
            "name": "Mega Band",
            "@referredType": "ResourceCandidate",
            "@type": "ResourceCandidateRef"
          },
          "productOfferingTerm": [
            {
              "name": "New Client Condition",
              "description": "This product offering term is for new client at fix duration of less than a year",
              "duration": {
                "amount": 12,
                "units": "Month"
              },
              "validFor": {
                "startDateTime": "2020-09-23T00:00:00Z",
                "endDateTime": "2021-09-23T00:00:00Z"
              },
              "@type": "ProductOfferingTerm"
            }
          ],
          "productOfferingPrice": [
            {
              "id": "1747",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOfferingPrice/1747",
              "name": "Recurring Monthly Price for Business Firewall",
              "@referredType": "ProductOfferingPrice",
              "@type": "ProductOfferingPrice"
            }
          ],
          "agreement": [
            {
              "id": "5537",
              "href": "https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreement/5537",
              "name": "Moon",
              "@referredType": "Agreement",
              "@type": "AgreementRef"
            }
          ],
          "attachment": [
            {
              "description": "This attachment gives a block diagram of the firewall.",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "mimeType": "image/jpeg",
              "id": "22",
              "url": "https://mycsp.com:7070/docloader?docnum=3534536",
              "@referredType": "Attachment",
              "@type": "AttachmentRefOrValue"
            }
          ],
          "marketSegment": [
            {
              "id": "1266",
              "href": "https://mycsp.com:8080/tmf-api/productOfferingReferences/v5/marketSegment/1266",
              "name": "North Region",
              "@referredType": "MarketSegment",
              "@type": "MarketSegmentRef"
            }
          ],
          "bundledProductOffering": [ ],
          "productOfferingRelationship": [
            {
              "id": "331",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOffering/331",
              "relationshipType": "DependsOn",
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              },
              "role": "A-Role",
              "name": "Carrier Grade NAT",
              "@referredType": "ProductOffering",
              "@type": "ProductOfferingRelationship"
            }
          ],
          "prodSpecCharValueUse": [
            {
              "name": "Number of Ports",
              "id": "3331",
              "description": "The total Number of Ports for this product",
              "valueType": "number",
              "minCardinality": 1,
              "maxCardinality": 1,
              "validFor": {
                "startDateTime": "2020-09-23T00:00:00Z",
                "endDateTime": "2021-09-23T00:00:00Z"
              },
              "@type": "ProductSpecificationCharacteristicValueUse",
              "productSpecCharacteristicValue": [
                {
                  "isDefault": true,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2021-09-23T00:00:00Z"
                  },
                  "value": 8,
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2021-09-23T00:00:00Z"
                  },
                  "value": 16,
                  "@type": "NumberCharacteristicValueSpecification"
                }
              ],
              "productSpecification": {
                "id": "9881",
                "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
                "version": "1.1",
                "name": "Robotics999",
                "@referredType": "ProductSpecification",
                "@type": "ProductSpecificationRef"
              }
            }
          ],
          "@type": "ProductOffering"
        }
      },
      "Product_Offering_Update_JSON_Patch_request": {
        "description": "Here is an example of a request for updating a product offering by adding a geographic area.",
        "value": [
          {
            "op": "add",
            "path": "/place",
            "value": {
              "id": "9989",
              "href": "https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/9989",
              "name": "New York",
              "@referredType": "GeographicAddress",
              "@type": "PlaceRef"
            }
          }
        ]
      },
      "Product_Offering_Update_JSON_Patch_response": {
        "description": "The updated product offering with geographic area",
        "value": {
          "id": "7655",
          "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOffering/7655",
          "name": "Basic Firewall for Business",
          "description": "This product offering suggests a firewall service that can be deployed in business customer premise.",
          "version": "3.0",
          "validFor": {
            "startDateTime": "2020-11-06T00:00:00Z",
            "endDateTime": "2021-11-06T00:00:00Z"
          },
          "lastUpdate": "2020-09-27T00:00:00Z",
          "lifecycleStatus": "Active",
          "isBundle": false,
          "isSellable": true,
          "statusReason": "Released for sale",
          "place": [
            {
              "id": "9979",
              "href": "https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/9979",
              "name": "San Francisco Bay Area",
              "@referredType": "GeographicAddress",
              "@type": "PlaceRef"
            },
            {
              "id": "9989",
              "href": "https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/9989",
              "name": "New York",
              "@referredType": "GeographicAddress",
              "@type": "PlaceRef"
            }
          ],
          "serviceLevelAgreement": {
            "id": "8082",
            "href": "https://mycsp.com:8080/tmf-api/slaManagement/v5/sla/8082",
            "name": "Gold SLA for Business",
            "@referredType": "ServiceLevelAgreement",
            "@type": "ServiceLevelAgreementRef"
          },
          "productSpecification": {
            "id": "9881",
            "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
            "version": "1.1",
            "name": "Robotics999",
            "@referredType": "ProductSpecification",
            "@type": "ProductSpecificationRef"
          },
          "channel": [
            {
              "id": "4406",
              "href": "https://mycsp.com:8080/tmf-api/salesChannelManagement/v5/channel/4406",
              "name": "Online Channel",
              "@referredType": "SalesChannel",
              "@type": "ChannelRef"
            }
          ],
          "serviceCandidate": {
            "id": "8167",
            "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceCandidate/8167",
            "version": "1.0",
            "name": "Mega Max",
            "@referredType": "ServiceCandidate",
            "@type": "ServiceCandidateRef"
          },
          "category": [
            {
              "id": "2646",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/category/2646",
              "version": "2.0",
              "name": "Cloud",
              "@referredType": "Category",
              "@type": "CategoryRef"
            }
          ],
          "resourceCandidate": {
            "id": "8937",
            "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceCandidate/8937",
            "name": "Mega Band",
            "@referredType": "ResourceCandidate",
            "@type": "ResourceCandidateRef"
          },
          "productOfferingTerm": [
            {
              "name": "New Client Condition",
              "description": "This product offering term is for new client at fix duration of less than a year",
              "duration": {
                "amount": 12,
                "units": "Month"
              },
              "validFor": {
                "startDateTime": "2020-09-23T00:00:00Z",
                "endDateTime": "2021-09-23T00:00:00Z"
              },
              "@type": "ProductOfferingTerm"
            }
          ],
          "productOfferingPrice": [
            {
              "id": "1747",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOfferingPrice/1747",
              "name": "Recurring Monthly Price for Business Firewall",
              "@referredType": "ProductOfferingPrice",
              "@type": "ProductOfferingPrice"
            }
          ],
          "agreement": [
            {
              "id": "5537",
              "href": "https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreement/5537",
              "name": "Moon",
              "@referredType": "Agreement",
              "@type": "AgreementRef"
            }
          ],
          "attachment": [
            {
              "description": "This attachment gives a block diagram of the firewall.",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "mimeType": "image/jpeg",
              "id": "22",
              "url": "https://mycsp.com:7070/docloader?docnum=3534536",
              "@referredType": "Attachment",
              "@type": "AttachmentRefOrValue"
            }
          ],
          "marketSegment": [
            {
              "id": "1266",
              "href": "https://mycsp.com:8080/tmf-api/productOfferingReferences/v5/marketSegment/1266",
              "name": "North Region",
              "@referredType": "MarketSegment",
              "@type": "MarketSegmentRef"
            }
          ],
          "bundledProductOffering": [ ],
          "productOfferingRelationship": [
            {
              "id": "331",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOffering/331",
              "relationshipType": "DependsOn",
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              },
              "role": "A-Role",
              "name": "Carrier Grade NAT",
              "@referredType": "ProductOffering",
              "@type": "ProductOfferingRelationship"
            }
          ],
          "prodSpecCharValueUse": [
            {
              "name": "Number of Ports",
              "id": "3331",
              "description": "The total Number of Ports for this product",
              "valueType": "number",
              "minCardinality": 1,
              "maxCardinality": 1,
              "validFor": {
                "startDateTime": "2020-09-23T00:00:00Z",
                "endDateTime": "2021-09-23T00:00:00Z"
              },
              "@type": "ProductSpecificationCharacteristicValueUse",
              "productSpecCharacteristicValue": [
                {
                  "isDefault": true,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2021-09-23T00:00:00Z"
                  },
                  "value": 8,
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2021-09-23T00:00:00Z"
                  },
                  "value": 16,
                  "@type": "NumberCharacteristicValueSpecification"
                }
              ],
              "productSpecification": {
                "id": "9881",
                "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
                "version": "1.1",
                "name": "Robotics999",
                "@referredType": "ProductSpecification",
                "@type": "ProductSpecificationRef"
              }
            }
          ],
          "@type": "ProductOffering"
        }
      },
      "Product_Offering_Update_JSON_Patch_Query_request": {
        "description": "Here is an example of a request for updating a product offering by changing an allowed characteristic value.",
        "value": [
          {
            "op": "add",
            "path": "/place",
            "value": {
              "id": "9989",
              "href": "https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/9989",
              "name": "New York",
              "@referredType": "GeographicAddress",
              "@type": "PlaceRef"
            }
          }
        ]
      },
      "Product_Offering_Update_JSON_Patch_Query_response": {
        "description": "The updated product offering with new characteristic value",
        "value": {
          "id": "7655",
          "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOffering/7655",
          "name": "Basic Firewall for Business",
          "description": "This product offering suggests a firewall service that can be deployed in business customer premise.",
          "version": "3.0",
          "validFor": {
            "startDateTime": "2020-11-06T00:00:00Z",
            "endDateTime": "2021-11-06T00:00:00Z"
          },
          "lastUpdate": "2020-09-27T00:00:00Z",
          "lifecycleStatus": "Active",
          "isBundle": false,
          "isSellable": true,
          "statusReason": "Released for sale",
          "place": [
            {
              "id": "9979",
              "href": "https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/9979",
              "name": "San Francisco Bay Area",
              "@referredType": "GeographicAddress",
              "@type": "PlaceRef"
            },
            {
              "id": "9989",
              "href": "https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/9989",
              "name": "New York",
              "@referredType": "GeographicAddress",
              "@type": "PlaceRef"
            }
          ],
          "serviceLevelAgreement": {
            "id": "8082",
            "href": "https://mycsp.com:8080/tmf-api/slaManagement/v5/sla/8082",
            "name": "Gold SLA for Business",
            "@referredType": "ServiceLevelAgreement",
            "@type": "ServiceLevelAgreementRef"
          },
          "productSpecification": {
            "id": "9881",
            "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
            "version": "1.1",
            "name": "Robotics999",
            "@referredType": "ProductSpecification",
            "@type": "ProductSpecificationRef"
          },
          "channel": [
            {
              "id": "4406",
              "href": "https://mycsp.com:8080/tmf-api/salesChannelManagement/v5/channel/4406",
              "name": "Online Channel",
              "@referredType": "SalesChannel",
              "@type": "ChannelRef"
            }
          ],
          "serviceCandidate": {
            "id": "8167",
            "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceCandidate/8167",
            "version": "1.0",
            "name": "Mega Max",
            "@referredType": "ServiceCandidate",
            "@type": "ServiceCandidateRef"
          },
          "category": [
            {
              "id": "2646",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/category/2646",
              "version": "2.0",
              "name": "Cloud",
              "@referredType": "Category",
              "@type": "CategoryRef"
            }
          ],
          "resourceCandidate": {
            "id": "8937",
            "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceCandidate/8937",
            "name": "Mega Band",
            "@referredType": "ResourceCandidate",
            "@type": "ResourceCandidateRef"
          },
          "productOfferingTerm": [
            {
              "name": "New Client Condition",
              "description": "This product offering term is for new client at fix duration of less than a year",
              "duration": {
                "amount": 12,
                "units": "Month"
              },
              "validFor": {
                "startDateTime": "2020-09-23T00:00:00Z",
                "endDateTime": "2021-09-23T00:00:00Z"
              },
              "@type": "ProductOfferingTerm"
            }
          ],
          "productOfferingPrice": [
            {
              "id": "1747",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOfferingPrice/1747",
              "name": "Recurring Monthly Price for Business Firewall",
              "@referredType": "ProductOfferingPrice",
              "@type": "ProductOfferingPrice"
            }
          ],
          "agreement": [
            {
              "id": "5537",
              "href": "https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreement/5537",
              "name": "Moon",
              "@referredType": "Agreement",
              "@type": "AgreementRef"
            }
          ],
          "attachment": [
            {
              "description": "This attachment gives a block diagram of the firewall.",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "mimeType": "image/jpeg",
              "id": "22",
              "url": "https://mycsp.com:7070/docloader?docnum=3534536",
              "@referredType": "Attachment",
              "@type": "AttachmentRefOrValue"
            }
          ],
          "marketSegment": [
            {
              "id": "1266",
              "href": "https://mycsp.com:8080/tmf-api/productOfferingReferences/v5/marketSegment/1266",
              "name": "North Region",
              "@referredType": "MarketSegment",
              "@type": "MarketSegmentRef"
            }
          ],
          "bundledProductOffering": [ ],
          "productOfferingRelationship": [
            {
              "id": "331",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productOffering/331",
              "relationshipType": "DependsOn",
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              },
              "role": "A-Role",
              "name": "Carrier Grade NAT",
              "@referredType": "ProductOffering",
              "@type": "ProductOfferingRelationship"
            }
          ],
          "prodSpecCharValueUse": [
            {
              "name": "Number of Ports",
              "id": "3331",
              "description": "The total Number of Ports for this product",
              "valueType": "number",
              "minCardinality": 1,
              "maxCardinality": 1,
              "validFor": {
                "startDateTime": "2020-09-23T00:00:00Z",
                "endDateTime": "2021-09-23T00:00:00Z"
              },
              "@type": "ProductSpecificationCharacteristicValueUse",
              "productSpecCharacteristicValue": [
                {
                  "isDefault": true,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2021-09-23T00:00:00Z"
                  },
                  "value": 8,
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2021-09-23T00:00:00Z"
                  },
                  "value": 16,
                  "@type": "NumberCharacteristicValueSpecification"
                }
              ],
              "productSpecification": {
                "id": "9881",
                "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
                "version": "1.1",
                "name": "Robotics999",
                "@referredType": "ProductSpecification",
                "@type": "ProductSpecificationRef"
              }
            }
          ],
          "@type": "ProductOffering"
        }
      },
      "Product_Specification_Update_Patch_Merge_example_request": {
        "description": "Here is an example of a request for updating a product specification.",
        "value": {
          "version": "3.1",
          "validFor": {
            "startDateTime": "2020-11-24T00:00:00Z",
            "endDateTime": "2022-11-24T00:00:00Z"
          },
          "@type": "ProductSpecification"
        }
      },
      "Product_Specification_Update_Patch_Merge_example_response": {
        "description": "Here is an example of a response for updating a product specification using JSON Patch.",
        "value": {
          "id": "9881",
          "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
          "name": "Cisco Firepower NGFW",
          "brand": "Cisco",
          "productNumber": "CSC-340-NGFW",
          "description": "Powerful product that integrates with a firewall, including intrusion prevention, advanced malware protection, cloud-based sandboxing, URL filtering, endpoint protection, web gateway, email security, network traffic analysis, network access control and CASB.",
          "isBundle": true,
          "lastUpdate": "2020-09-23T16:42:23Z",
          "lifecycleStatus": "Active",
          "version": "3.1",
          "validFor": {
            "startDateTime": "2020-11-24T00:00:00Z",
            "endDateTime": "2022-11-24T00:00:00Z"
          },
          "relatedParty": [
            {
              "role": "Owner",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "partyOrPartyRole": {
                "id": "1234",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/partyRole/1234",
                "name": "Gustave Flaubert",
                "@type": "PartyRef",
                "@referredType": "Individual"
              }
            }
          ],
          "attachment": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Picture",
              "mimeType": "image/jpeg",
              "url": "https://mycsp.com:7070/docloader?docnum=774451234",
              "@referredType": "Attachment",
              "@type": "AttachmentRefOrValue"
            },
            {
              "id": "33",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Manual",
              "mimeType": "application/pdf",
              "url": "https://mycsp.com:7070/docloader?docnum=774454321",
              "@referredType": "Attachment",
              "@type": "AttachmentRefOrValue"
            }
          ],
          "bundledProductSpecification": [
            {
              "id": "15",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/15",
              "name": "URL Filter",
              "@type": "BundledProductSpecification",
              "@baseType": "",
              "lifecycleStatus": "Active"
            },
            {
              "id": "64",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/64",
              "name": "Malware Protector",
              "@type": "BundledProductSpecification",
              "@baseType": "",
              "lifecycleStatus": "Active"
            }
          ],
          "targetProductSchema": {
            "@type": "Firewall",
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Product/Firewall.schema.json"
          },
          "productSpecificationRelationship": [
            {
              "id": "23",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/23",
              "relationshipType": "OptionalFor",
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              },
              "name": "DataPlan",
              "role": "A-Item",
              "@referredType": "ProductSpecification",
              "@type": "ProductSpecificationRelationship"
            }
          ],
          "serviceSpecification": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/22",
              "name": "Firewall",
              "version": "1.0",
              "@referredType": "ServiceSpecification",
              "@type": "ServiceSpecificationRef"
            }
          ],
          "resourceSpecification": [
            {
              "id": "63",
              "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceSpecification/63",
              "name": "Firewall Port",
              "version": "1.0",
              "@referredType": "PhysicalResourceSpecification",
              "@type": "ResourceSpecificationRef"
            }
          ],
          "productSpecCharacteristic": [
            {
              "name": "Number of Ports",
              "description": "The total Number of Ports for this product",
              "valueType": "number",
              "configurable": true,
              "minCardinality": 1,
              "maxCardinality": 1,
              "isUnique": true,
              "@type": "CharacteristicSpecification",
              "productSpecCharRelationship": [
                {
                  "parentSpecificationId": "43",
                  "parentSpecificationHref": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/43",
                  "characteristicSpecificationId": "2",
                  "relationshipType": "Dependency",
                  "name": "Bandwidth",
                  "validFor": {
                    "startDateTime": "2020-09-23T16:42:23-04:00"
                  },
                  "@type": "CharacteristicSpecificationRelationship"
                }
              ],
              "characteristicValueSpecification": [
                {
                  "isDefault": true,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": 8,
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": 16,
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": 24,
                  "@type": "NumberCharacteristicValueSpecification"
                }
              ],
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              }
            },
            {
              "name": "Color",
              "description": "Color of the Firewall housing",
              "valueType": "string",
              "configurable": true,
              "minCardinality": 1,
              "maxCardinality": 1,
              "extensible": true,
              "isUnique": true,
              "@type": "CharacteristicSpecification",
              "characteristicValueSpecification": [
                {
                  "isDefault": true,
                  "valueType": "string",
                  "value": "Black",
                  "@type": "StringCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "string",
                  "value": "White",
                  "@type": "StringCharacteristicValueSpecification"
                }
              ],
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              }
            }
          ],
          "@type": "ProductSpecification"
        }
      },
      "Product_Specification_Update_Implicit_Merge_example_request": {
        "description": "Here is an example of a request for updating a product specification.",
        "value": {
          "version": "3.1",
          "validFor": {
            "startDateTime": "2020-11-24T00:00:00Z",
            "endDateTime": "2022-11-24T00:00:00Z"
          },
          "@type": "ProductSpecification"
        }
      },
      "Product_Specification_Update_Implicit_Merge_example_response": {
        "description": "Here is an example of a response for updating a product specification using JSON Patch.",
        "value": {
          "id": "9881",
          "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
          "name": "Cisco Firepower NGFW",
          "brand": "Cisco",
          "productNumber": "CSC-340-NGFW",
          "description": "Powerful product that integrates with a firewall, including intrusion prevention, advanced malware protection, cloud-based sandboxing, URL filtering, endpoint protection, web gateway, email security, network traffic analysis, network access control and CASB.",
          "isBundle": true,
          "lastUpdate": "2020-09-23T16:42:23Z",
          "lifecycleStatus": "Active",
          "version": "3.1",
          "validFor": {
            "startDateTime": "2020-11-24T00:00:00Z",
            "endDateTime": "2022-11-24T00:00:00Z"
          },
          "relatedParty": [
            {
              "role": "Owner",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "partyOrPartyRole": {
                "id": "1234",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/partyRole/1234",
                "name": "Gustave Flaubert",
                "@type": "PartyRef",
                "@referredType": "Individual"
              }
            }
          ],
          "attachment": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Picture",
              "mimeType": "image/jpeg",
              "url": "https://mycsp.com:7070/docloader?docnum=774451234",
              "@referredType": "Attachment",
              "@type": "AttachmentRefOrValue"
            },
            {
              "id": "33",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Manual",
              "mimeType": "application/pdf",
              "url": "https://mycsp.com:7070/docloader?docnum=774454321",
              "@referredType": "Attachment",
              "@type": "AttachmentRefOrValue"
            }
          ],
          "bundledProductSpecification": [
            {
              "id": "15",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/15",
              "name": "URL Filter",
              "@type": "BundledProductSpecification",
              "@baseType": "",
              "lifecycleStatus": "Active"
            },
            {
              "id": "64",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/64",
              "name": "Malware Protector",
              "@type": "BundledProductSpecification",
              "@baseType": "",
              "lifecycleStatus": "Active"
            }
          ],
          "targetProductSchema": {
            "@type": "Firewall",
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Product/Firewall.schema.json"
          },
          "productSpecificationRelationship": [
            {
              "id": "23",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/23",
              "relationshipType": "OptionalFor",
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              },
              "name": "DataPlan",
              "role": "A-Item",
              "@referredType": "ProductSpecification",
              "@type": "ProductSpecificationRelationship"
            }
          ],
          "serviceSpecification": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/22",
              "name": "Firewall",
              "version": "1.0",
              "@referredType": "ServiceSpecification",
              "@type": "ServiceSpecificationRef"
            }
          ],
          "resourceSpecification": [
            {
              "id": "63",
              "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceSpecification/63",
              "name": "Firewall Port",
              "version": "1.0",
              "@referredType": "PhysicalResourceSpecification",
              "@type": "ResourceSpecificationRef"
            }
          ],
          "productSpecCharacteristic": [
            {
              "name": "Number of Ports",
              "description": "The total Number of Ports for this product",
              "valueType": "number",
              "configurable": true,
              "minCardinality": 1,
              "maxCardinality": 1,
              "isUnique": true,
              "@type": "CharacteristicSpecification",
              "productSpecCharRelationship": [
                {
                  "parentSpecificationId": "43",
                  "parentSpecificationHref": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/43",
                  "characteristicSpecificationId": "2",
                  "relationshipType": "Dependency",
                  "name": "Bandwidth",
                  "validFor": {
                    "startDateTime": "2020-09-23T16:42:23-04:00"
                  },
                  "@type": "CharacteristicSpecificationRelationship"
                }
              ],
              "characteristicValueSpecification": [
                {
                  "isDefault": true,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": 8,
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": 16,
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": 24,
                  "@type": "NumberCharacteristicValueSpecification"
                }
              ],
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              }
            },
            {
              "name": "Color",
              "description": "Color of the Firewall housing",
              "valueType": "string",
              "configurable": true,
              "minCardinality": 1,
              "maxCardinality": 1,
              "extensible": true,
              "isUnique": true,
              "@type": "CharacteristicSpecification",
              "characteristicValueSpecification": [
                {
                  "isDefault": true,
                  "valueType": "string",
                  "value": "Black",
                  "@type": "StringCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "string",
                  "value": "White",
                  "@type": "StringCharacteristicValueSpecification"
                }
              ],
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              }
            }
          ],
          "@type": "ProductSpecification"
        }
      },
      "Product_Specification_Update_JSON_Patch_request": {
        "description": "Here is an example of a request for updating a product specification by adding a related party.",
        "value": [
          {
            "op": "add",
            "path": "/relatedParty",
            "value": {
              "role": "Technical Expert",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "partyOrPartyRole": {
                "id": "4321",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/partyRole/4321",
                "name": "Jean Jones",
                "@type": "PartyRefOrPartyRoleRef",
                "@referredType": "PartyRole"
              }
            }
          }
        ]
      },
      "Product_Specification_Update_JSON_Patch_response": {
        "description": "The updated product specification with related party",
        "value": {
          "id": "9881",
          "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
          "name": "Cisco Firepower NGFW",
          "brand": "Cisco",
          "productNumber": "CSC-340-NGFW",
          "description": "Powerful product that integrates with a firewall, including intrusion prevention, advanced malware protection, cloud-based sandboxing, URL filtering, endpoint protection, web gateway, email security, network traffic analysis, network access control and CASB.",
          "isBundle": true,
          "lastUpdate": "2020-09-23T16:42:23Z",
          "lifecycleStatus": "Active",
          "version": "3.1",
          "validFor": {
            "startDateTime": "2020-11-24T00:00:00Z",
            "endDateTime": "2022-11-24T00:00:00Z"
          },
          "relatedParty": [
            {
              "role": "Owner",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "partyOrPartyRole": {
                "id": "1234",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/partyRole/1234",
                "name": "Gustave Flaubert",
                "@type": "PartyRef",
                "@referredType": "Individual"
              }
            },
            {
              "role": "Technical Expert",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "partyOrPartyRole": {
                "id": "4321",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/partyRole/4321",
                "name": "Jean Jones",
                "@type": "PartyRefOrPartyRoleRef",
                "@referredType": "PartyRole"
              }
            }
          ],
          "attachment": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Picture",
              "mimeType": "image/jpeg",
              "url": "https://mycsp.com:7070/docloader?docnum=774451234",
              "@referredType": "Attachment"
            },
            {
              "id": "33",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Manual",
              "mimeType": "application/pdf",
              "url": "https://mycsp.com:7070/docloader?docnum=774454321",
              "@referredType": "Attachment"
            }
          ],
          "bundledProductSpecification": [
            {
              "id": "15",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/15",
              "name": "URL Filter",
              "@type": "BundledProductSpecification",
              "lifecycleStatus": "Active"
            },
            {
              "id": "64",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/64",
              "name": "Malware Protector",
              "@type": "BundledProductSpecification",
              "lifecycleStatus": "Active"
            }
          ],
          "targetProductSchema": {
            "@type": "Firewall",
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Product/Firewall.schema.json"
          },
          "productSpecificationRelationship": [
            {
              "id": "23",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/23",
              "relationshipType": "OptionalFor",
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              },
              "name": "DataPlan",
              "role": "A-Item",
              "@referredType": "ProductSpecification",
              "@type": "ProductSpecificationRelationship"
            }
          ],
          "serviceSpecification": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/22",
              "name": "Firewall",
              "version": "1.0",
              "@referredType": "ServiceSpecification",
              "@type": "ServiceSpecificationRef"
            }
          ],
          "resourceSpecification": [
            {
              "id": "63",
              "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceSpecification/63",
              "name": "Firewall Port",
              "version": "1.0",
              "@referredType": "PhysicalResourceSpecification",
              "@type": "ResourceSpecificationRef"
            }
          ],
          "productSpecCharacteristic": [
            {
              "name": "Number of Ports",
              "description": "The total Number of Ports for this product",
              "valueType": "number",
              "configurable": true,
              "minCardinality": 1,
              "maxCardinality": 1,
              "isUnique": true,
              "@type": "ProductSpecificationCharacteristic",
              "productSpecCharRelationship": [
                {
                  "parentSpecificationId": "43",
                  "parentSpecificationHref": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/43",
                  "characteristicSpecificationId": "2",
                  "relationshipType": "Dependency",
                  "name": "Bandwidth",
                  "validFor": {
                    "startDateTime": "2020-09-23T16:42:23-04:00"
                  },
                  "@type": "CharacteristicSpecificationRelationship"
                }
              ],
              "characteristicValueSpecification": [
                {
                  "isDefault": true,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": 8,
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": 16,
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": 24,
                  "@type": "NumberCharacteristicValueSpecification"
                }
              ],
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              }
            },
            {
              "name": "Color",
              "description": "Color of the Firewall housing",
              "valueType": "string",
              "configurable": true,
              "minCardinality": 1,
              "maxCardinality": 1,
              "extensible": true,
              "isUnique": true,
              "@type": "CharacteristicSpecification",
              "characteristicValueSpecification": [
                {
                  "isDefault": true,
                  "valueType": "string",
                  "value": "Black",
                  "@type": "StringCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "string",
                  "value": "White",
                  "@type": "StringCharacteristicValueSpecification"
                }
              ],
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              }
            }
          ],
          "@type": "ProductSpecification"
        }
      },
      "Product_Specification_Update_JSON_Patch_Query_request": {
        "description": "Here is an example of a request for updating a product specification by changing the default value for a characteristic.",
        "value": [
          {
            "op": "replace",
            "path": "/productSpecCharacteristic/characteristicValueSpecification/isDefault?value=/productSpecCharacteristic/characteristicValueSpecification/Black",
            "value": false
          },
          {
            "op": "replace",
            "path": "/productSpecCharacteristic/characteristicValueSpecification/isDefault?value=/productSpecCharacteristic/characteristicValueSpecification/White",
            "value": true
          }
        ]
      },
      "Product_Specification_Update_JSON_Patch_Query_response": {
        "description": "The updated product specification with changed default value for a characteristic",
        "value": {
          "id": "9881",
          "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/9881",
          "name": "Cisco Firepower NGFW",
          "brand": "Cisco",
          "productNumber": "CSC-340-NGFW",
          "description": "Powerful product that integrates with a firewall, including intrusion prevention, advanced malware protection, cloud-based sandboxing, URL filtering, endpoint protection, web gateway, email security, network traffic analysis, network access control and CASB.",
          "isBundle": true,
          "lastUpdate": "2020-09-23T16:42:23Z",
          "lifecycleStatus": "Active",
          "version": "3.1",
          "validFor": {
            "startDateTime": "2020-11-24T00:00:00Z",
            "endDateTime": "2022-11-24T00:00:00Z"
          },
          "relatedParty": [
            {
              "role": "Owner",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "partyOrPartyRole": {
                "id": "1234",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/partyRole/1234",
                "name": "Gustave Flaubert",
                "@type": "PartyRef",
                "@referredType": "Individual"
              }
            },
            {
              "role": "Technical Expert",
              "@type": "RelatedPartyRefOrPartyRoleRef",
              "partyOrPartyRole": {
                "id": "4321",
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v5/partyRole/4321",
                "name": "Jean Jones",
                "@type": "PartyRefOrPartyRoleRef",
                "@referredType": "PartyRole"
              }
            }
          ],
          "attachment": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Picture",
              "mimeType": "image/jpeg",
              "url": "https://mycsp.com:7070/docloader?docnum=774451234",
              "@referredType": "Attachment"
            },
            {
              "id": "33",
              "href": "https://mycsp.com:8080/tmf-api/documentManagement/v5/attachment/22",
              "name": "Product Manual",
              "mimeType": "application/pdf",
              "url": "https://mycsp.com:7070/docloader?docnum=774454321",
              "@referredType": "Attachment"
            }
          ],
          "bundledProductSpecification": [
            {
              "id": "15",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/15",
              "name": "URL Filter",
              "@type": "BundledProductSpecification",
              "lifecycleStatus": "Active"
            },
            {
              "id": "64",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/64",
              "name": "Malware Protector",
              "@type": "BundledProductSpecification",
              "lifecycleStatus": "Active"
            }
          ],
          "targetProductSchema": {
            "@type": "Firewall",
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Product/Firewall.schema.json"
          },
          "productSpecificationRelationship": [
            {
              "id": "23",
              "href": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/23",
              "relationshipType": "OptionalFor",
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              },
              "name": "DataPlan",
              "role": "A-Item",
              "@referredType": "ProductSpecification",
              "@type": "ProductSpecificationRelationship"
            }
          ],
          "serviceSpecification": [
            {
              "id": "22",
              "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/22",
              "name": "Firewall",
              "version": "1.0",
              "@referredType": "ServiceSpecification",
              "@type": "ServiceSpecificationRef"
            }
          ],
          "resourceSpecification": [
            {
              "id": "63",
              "href": "https://mycsp.com:8080/tmf-api/resourceCatalogManagement/v5/resourceSpecification/63",
              "name": "Firewall Port",
              "version": "1.0",
              "@referredType": "PhysicalResourceSpecification",
              "@type": "ResourceSpecificationRef"
            }
          ],
          "productSpecCharacteristic": [
            {
              "name": "Number of Ports",
              "description": "The total Number of Ports for this product",
              "valueType": "number",
              "configurable": true,
              "minCardinality": 1,
              "maxCardinality": 1,
              "isUnique": true,
              "@type": "ProductSpecificationCharacteristic",
              "productSpecCharRelationship": [
                {
                  "parentSpecificationId": "43",
                  "parentSpecificationHref": "https://mycsp.com:8080/tmf-api/productCatalogManagement/v5/productSpecification/43",
                  "characteristicSpecificationId": "2",
                  "relationshipType": "Dependency",
                  "name": "Bandwidth",
                  "validFor": {
                    "startDateTime": "2020-09-23T16:42:23-04:00"
                  },
                  "@type": "CharacteristicSpecificationRelationship"
                }
              ],
              "characteristicValueSpecification": [
                {
                  "isDefault": true,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": 8,
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": 16,
                  "@type": "NumberCharacteristicValueSpecification"
                },
                {
                  "isDefault": false,
                  "valueType": "number",
                  "validFor": {
                    "startDateTime": "2020-09-23T00:00:00Z",
                    "endDateTime": "2022-11-24T00:00:00Z"
                  },
                  "value": 24,
                  "@type": "NumberCharacteristicValueSpecification"
                }
              ],
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              }
            },
            {
              "name": "Color",
              "description": "Color of the Firewall housing",
              "valueType": "string",
              "configurable": true,
              "minCardinality": 1,
              "maxCardinality": 1,
              "extensible": true,
              "isUnique": true,
              "@type": "CharacteristicSpecification",
              "characteristicValueSpecification": [
                {
                  "isDefault": false,
                  "valueType": "string",
                  "value": "Black",
                  "@type": "StringCharacteristicValueSpecification"
                },
                {
                  "isDefault": true,
                  "valueType": "string",
                  "value": "White",
                  "@type": "StringCharacteristicValueSpecification"
                }
              ],
              "validFor": {
                "startDateTime": "2020-09-23T16:42:23Z"
              }
            }
          ],
          "@type": "ProductSpecification"
        }
      }
    },
    "requestBodies": {
      "ProductOffering_FVO": {
        "description": "The ProductOffering to be created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProductOffering_FVO"
            },
            "examples": {
              "Product_Offering_Create_example": {
                "$ref": "#/components/examples/Product_Offering_Create_example_request"
              }
            }
          }
        },
        "required": true
      },
      "ProductOffering_MVO": {
        "description": "The ProductOffering to be patched",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProductOffering_MVO"
            },
            "examples": {
              "Product_Offering_Update_Implicit_Merge": {
                "$ref": "#/components/examples/Product_Offering_Update_Implicit_Merge_request"
              }
            }
          },
          "application/merge-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/ProductOffering_MVO"
            },
            "examples": {
              "Product_Offering_Update_Patch_Merge": {
                "$ref": "#/components/examples/Product_Offering_Update_Patch_Merge_request"
              }
            }
          },
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/JsonPatchOperations"
            },
            "examples": {
              "Product_Offering_Update_JSON_Patch": {
                "$ref": "#/components/examples/Product_Offering_Update_JSON_Patch_request"
              }
            }
          },
          "application/json-patch-query+json": {
            "schema": {
              "$ref": "#/components/schemas/JsonPatchOperations"
            },
            "examples": {
              "Product_Offering_Update_JSON_Patch_Query": {
                "$ref": "#/components/examples/Product_Offering_Update_JSON_Patch_Query_request"
              }
            }
          }
        },
        "required": true
      },
      "ProductSpecification_FVO": {
        "description": "The ProductSpecification to be created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProductSpecification_FVO"
            },
            "examples": {
              "Product_Specification_Create_example": {
                "$ref": "#/components/examples/Product_Specification_Create_example_request"
              },
              "Product_Specification_Create_example_with_intent": {
                "$ref": "#/components/examples/Product_Specification_Create_example_with_intent_request"
              }
            }
          }
        },
        "required": true
      },
      "ProductSpecification_MVO": {
        "description": "The ProductSpecification to be patched",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProductSpecification_MVO"
            },
            "examples": {
              "Product_Specification_Update_Implicit_Merge_example": {
                "$ref": "#/components/examples/Product_Specification_Update_Implicit_Merge_example_request"
              }
            }
          },
          "application/merge-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/ProductSpecification_MVO"
            },
            "examples": {
              "Product_Specification_Update_Patch_Merge_example": {
                "$ref": "#/components/examples/Product_Specification_Update_Patch_Merge_example_request"
              }
            }
          },
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/JsonPatchOperations"
            },
            "examples": {
              "Product_Specification_Update_JSON_Patch": {
                "$ref": "#/components/examples/Product_Specification_Update_JSON_Patch_request"
              }
            }
          },
          "application/json-patch-query+json": {
            "schema": {
              "$ref": "#/components/schemas/JsonPatchOperations"
            },
            "examples": {
              "Product_Specification_Update_JSON_Patch_Query": {
                "$ref": "#/components/examples/Product_Specification_Update_JSON_Patch_Query_request"
              }
            }
          }
        },
        "required": true
      }
    },
    "headers": {
      "X-Total-Count": {
        "description": "Total number of items matching criteria",
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "integer"
        }
      },
      "X-Result-Count": {
        "description": "Actual number of items returned in the response body",
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "integer"
        }
      }
    },
    "securitySchemes": { }
  }
}