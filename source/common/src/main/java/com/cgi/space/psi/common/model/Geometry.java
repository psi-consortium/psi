package com.cgi.space.psi.common.model;

import java.net.URI;
import java.util.Objects;
import com.cgi.space.psi.common.model.LineString;
import com.cgi.space.psi.common.model.MultiLineString;
import com.cgi.space.psi.common.model.MultiPoint;
import com.cgi.space.psi.common.model.MultiPolygon;
import com.cgi.space.psi.common.model.Point;
import com.cgi.space.psi.common.model.Polygon;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

@com.fasterxml.jackson.annotation.JsonFilter(com.cgi.space.psi.common.config.DynamicJacksonFilterProvider.NAME)

@JsonIgnoreProperties(
  value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = LineString.class, name = "LineString"),
  @JsonSubTypes.Type(value = MultiLineString.class, name = "MultiLineString"),
  @JsonSubTypes.Type(value = MultiPoint.class, name = "MultiPoint"),
  @JsonSubTypes.Type(value = MultiPolygon.class, name = "MultiPolygon"),
  @JsonSubTypes.Type(value = Point.class, name = "Point"),
  @JsonSubTypes.Type(value = Polygon.class, name = "Polygon")
})

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
public interface Geometry {
    public String getType();
}
