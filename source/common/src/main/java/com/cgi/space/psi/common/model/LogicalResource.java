package com.cgi.space.psi.common.model;

import java.net.URI;
import java.util.Objects;
import com.cgi.space.psi.common.model.AttachmentOrDocumentRef;
import com.cgi.space.psi.common.model.Characteristic;
import com.cgi.space.psi.common.model.ExternalIdentifier;
import com.cgi.space.psi.common.model.Feature;
import com.cgi.space.psi.common.model.IntentRef;
import com.cgi.space.psi.common.model.LogicalResource;
import com.cgi.space.psi.common.model.Note;
import com.cgi.space.psi.common.model.PhysicalResource;
import com.cgi.space.psi.common.model.RelatedPartyRefOrPartyRoleRef;
import com.cgi.space.psi.common.model.RelatedPlaceRef;
import com.cgi.space.psi.common.model.RelatedResourceOrderItem;
import com.cgi.space.psi.common.model.Resource;
import com.cgi.space.psi.common.model.ResourceAdministrativeStateType;
import com.cgi.space.psi.common.model.ResourceCollection;
import com.cgi.space.psi.common.model.ResourceOperationalStateType;
import com.cgi.space.psi.common.model.ResourceRefOrValue;
import com.cgi.space.psi.common.model.ResourceRelationship;
import com.cgi.space.psi.common.model.ResourceSpecificationRef;
import com.cgi.space.psi.common.model.ResourceStatusType;
import com.cgi.space.psi.common.model.ResourceUsageStateType;
import com.cgi.space.psi.common.model.TimePeriod;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.springframework.format.annotation.DateTimeFormat;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * LogicalResource
 */
@com.fasterxml.jackson.annotation.JsonFilter(com.cgi.space.psi.common.config.DynamicJacksonFilterProvider.NAME)

@JsonIgnoreProperties(
  value = "@type", // ignore manually set @type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the @type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = LogicalResource.class, name = "LogicalResource"),
  @JsonSubTypes.Type(value = PhysicalResource.class, name = "PhysicalResource"),
  @JsonSubTypes.Type(value = Resource.class, name = "Resource"),
  @JsonSubTypes.Type(value = ResourceCollection.class, name = "ResourceCollection")
})

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
public class LogicalResource extends Resource {

  @JsonProperty("value")
  private String value;

  public LogicalResource value(String value) {
    this.value = value;
    return this;
  }

  /**
   * the value of the logical resource. E.g '0746712345' for  MSISDN's
   * @return value
  */
  
  @Schema(name = "value", description = "the value of the logical resource. E.g '0746712345' for  MSISDN's", required = false)
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public LogicalResource atType(String atType) {
    super.setAtType(atType);
    return this;
  }

  public LogicalResource atBaseType(String atBaseType) {
    super.setAtBaseType(atBaseType);
    return this;
  }

  public LogicalResource atSchemaLocation(String atSchemaLocation) {
    super.setAtSchemaLocation(atSchemaLocation);
    return this;
  }

  public LogicalResource href(URI href) {
    super.setHref(href);
    return this;
  }

  public LogicalResource id(String id) {
    super.setId(id);
    return this;
  }

  public LogicalResource category(String category) {
    super.setCategory(category);
    return this;
  }

  public LogicalResource description(String description) {
    super.setDescription(description);
    return this;
  }

  public LogicalResource name(String name) {
    super.setName(name);
    return this;
  }

  public LogicalResource endOperatingDate(OffsetDateTime endOperatingDate) {
    super.setEndOperatingDate(endOperatingDate);
    return this;
  }

  public LogicalResource administrativeState(ResourceAdministrativeStateType administrativeState) {
    super.setAdministrativeState(administrativeState);
    return this;
  }

  public LogicalResource operationalState(ResourceOperationalStateType operationalState) {
    super.setOperationalState(operationalState);
    return this;
  }

  public LogicalResource resourceStatus(ResourceStatusType resourceStatus) {
    super.setResourceStatus(resourceStatus);
    return this;
  }

  public LogicalResource usageState(ResourceUsageStateType usageState) {
    super.setUsageState(usageState);
    return this;
  }

  public LogicalResource validFor(TimePeriod validFor) {
    super.setValidFor(validFor);
    return this;
  }

  public LogicalResource note(List<Note> note) {
    super.setNote(note);
    return this;
  }

  public LogicalResource addNoteItem(Note noteItem) {
    super.addNoteItem(noteItem);
    return this;
  }

  public LogicalResource resourceOrderItem(List<RelatedResourceOrderItem> resourceOrderItem) {
    super.setResourceOrderItem(resourceOrderItem);
    return this;
  }

  public LogicalResource addResourceOrderItemItem(RelatedResourceOrderItem resourceOrderItemItem) {
    super.addResourceOrderItemItem(resourceOrderItemItem);
    return this;
  }

  public LogicalResource place(List<RelatedPlaceRef> place) {
    super.setPlace(place);
    return this;
  }

  public LogicalResource addPlaceItem(RelatedPlaceRef placeItem) {
    super.addPlaceItem(placeItem);
    return this;
  }

  public LogicalResource relatedParty(List<RelatedPartyRefOrPartyRoleRef> relatedParty) {
    super.setRelatedParty(relatedParty);
    return this;
  }

  public LogicalResource addRelatedPartyItem(RelatedPartyRefOrPartyRoleRef relatedPartyItem) {
    super.addRelatedPartyItem(relatedPartyItem);
    return this;
  }

  public LogicalResource supportingResource(List<ResourceRefOrValue> supportingResource) {
    super.setSupportingResource(supportingResource);
    return this;
  }

  public LogicalResource addSupportingResourceItem(ResourceRefOrValue supportingResourceItem) {
    super.addSupportingResourceItem(supportingResourceItem);
    return this;
  }

  public LogicalResource resourceRelationship(List<ResourceRelationship> resourceRelationship) {
    super.setResourceRelationship(resourceRelationship);
    return this;
  }

  public LogicalResource addResourceRelationshipItem(ResourceRelationship resourceRelationshipItem) {
    super.addResourceRelationshipItem(resourceRelationshipItem);
    return this;
  }

  public LogicalResource resourceCharacteristic(List<Characteristic> resourceCharacteristic) {
    super.setResourceCharacteristic(resourceCharacteristic);
    return this;
  }

  public LogicalResource addResourceCharacteristicItem(Characteristic resourceCharacteristicItem) {
    super.addResourceCharacteristicItem(resourceCharacteristicItem);
    return this;
  }

  public LogicalResource attachment(List<AttachmentOrDocumentRef> attachment) {
    super.setAttachment(attachment);
    return this;
  }

  public LogicalResource addAttachmentItem(AttachmentOrDocumentRef attachmentItem) {
    super.addAttachmentItem(attachmentItem);
    return this;
  }

  public LogicalResource resourceSpecification(ResourceSpecificationRef resourceSpecification) {
    super.setResourceSpecification(resourceSpecification);
    return this;
  }

  public LogicalResource startOperatingDate(OffsetDateTime startOperatingDate) {
    super.setStartOperatingDate(startOperatingDate);
    return this;
  }

  public LogicalResource resourceVersion(String resourceVersion) {
    super.setResourceVersion(resourceVersion);
    return this;
  }

  public LogicalResource activationFeature(List<Feature> activationFeature) {
    super.setActivationFeature(activationFeature);
    return this;
  }

  public LogicalResource addActivationFeatureItem(Feature activationFeatureItem) {
    super.addActivationFeatureItem(activationFeatureItem);
    return this;
  }

  public LogicalResource intent(IntentRef intent) {
    super.setIntent(intent);
    return this;
  }

  public LogicalResource externalIdentifier(List<ExternalIdentifier> externalIdentifier) {
    super.setExternalIdentifier(externalIdentifier);
    return this;
  }

  public LogicalResource addExternalIdentifierItem(ExternalIdentifier externalIdentifierItem) {
    super.addExternalIdentifierItem(externalIdentifierItem);
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogicalResource logicalResource = (LogicalResource) o;
    return Objects.equals(this.value, logicalResource.value) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(value, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogicalResource {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

