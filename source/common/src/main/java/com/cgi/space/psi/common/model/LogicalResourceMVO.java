package com.cgi.space.psi.common.model;

import java.net.URI;
import java.util.Objects;
import com.cgi.space.psi.common.model.AttachmentOrDocumentRef;
import com.cgi.space.psi.common.model.CharacteristicMVO;
import com.cgi.space.psi.common.model.ExternalIdentifierMVO;
import com.cgi.space.psi.common.model.FeatureMVO;
import com.cgi.space.psi.common.model.IntentRefMVO;
import com.cgi.space.psi.common.model.LogicalResourceMVO;
import com.cgi.space.psi.common.model.NoteMVO;
import com.cgi.space.psi.common.model.PhysicalResourceMVO;
import com.cgi.space.psi.common.model.RelatedPartyRefOrPartyRoleRefMVO;
import com.cgi.space.psi.common.model.RelatedPlaceRefMVO;
import com.cgi.space.psi.common.model.RelatedResourceOrderItemMVO;
import com.cgi.space.psi.common.model.ResourceAdministrativeStateType;
import com.cgi.space.psi.common.model.ResourceCollectionMVO;
import com.cgi.space.psi.common.model.ResourceMVO;
import com.cgi.space.psi.common.model.ResourceOperationalStateType;
import com.cgi.space.psi.common.model.ResourceRefOrValueMVO;
import com.cgi.space.psi.common.model.ResourceRelationshipMVO;
import com.cgi.space.psi.common.model.ResourceSpecificationRefMVO;
import com.cgi.space.psi.common.model.ResourceStatusType;
import com.cgi.space.psi.common.model.ResourceUsageStateType;
import com.cgi.space.psi.common.model.TimePeriod;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.springframework.format.annotation.DateTimeFormat;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * LogicalResourceMVO
 */
@com.fasterxml.jackson.annotation.JsonFilter(com.cgi.space.psi.common.config.DynamicJacksonFilterProvider.NAME)

@JsonIgnoreProperties(
  value = "@type", // ignore manually set @type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the @type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = LogicalResourceMVO.class, name = "LogicalResource"),
  @JsonSubTypes.Type(value = PhysicalResourceMVO.class, name = "PhysicalResource"),
  @JsonSubTypes.Type(value = ResourceMVO.class, name = "Resource"),
  @JsonSubTypes.Type(value = ResourceCollectionMVO.class, name = "ResourceCollection")
})

@JsonTypeName("LogicalResource_MVO")
@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
public class LogicalResourceMVO extends ResourceMVO {

  @JsonProperty("value")
  private String value;

  public LogicalResourceMVO value(String value) {
    this.value = value;
    return this;
  }

  /**
   * the value of the logical resource. E.g '0746712345' for  MSISDN's
   * @return value
  */
  
  @Schema(name = "value", description = "the value of the logical resource. E.g '0746712345' for  MSISDN's", required = false)
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public LogicalResourceMVO atType(String atType) {
    super.setAtType(atType);
    return this;
  }

  public LogicalResourceMVO atBaseType(String atBaseType) {
    super.setAtBaseType(atBaseType);
    return this;
  }

  public LogicalResourceMVO atSchemaLocation(String atSchemaLocation) {
    super.setAtSchemaLocation(atSchemaLocation);
    return this;
  }

  public LogicalResourceMVO href(URI href) {
    super.setHref(href);
    return this;
  }

  public LogicalResourceMVO id(String id) {
    super.setId(id);
    return this;
  }

  public LogicalResourceMVO category(String category) {
    super.setCategory(category);
    return this;
  }

  public LogicalResourceMVO description(String description) {
    super.setDescription(description);
    return this;
  }

  public LogicalResourceMVO name(String name) {
    super.setName(name);
    return this;
  }

  public LogicalResourceMVO endOperatingDate(OffsetDateTime endOperatingDate) {
    super.setEndOperatingDate(endOperatingDate);
    return this;
  }

  public LogicalResourceMVO administrativeState(ResourceAdministrativeStateType administrativeState) {
    super.setAdministrativeState(administrativeState);
    return this;
  }

  public LogicalResourceMVO operationalState(ResourceOperationalStateType operationalState) {
    super.setOperationalState(operationalState);
    return this;
  }

  public LogicalResourceMVO resourceStatus(ResourceStatusType resourceStatus) {
    super.setResourceStatus(resourceStatus);
    return this;
  }

  public LogicalResourceMVO usageState(ResourceUsageStateType usageState) {
    super.setUsageState(usageState);
    return this;
  }

  public LogicalResourceMVO validFor(TimePeriod validFor) {
    super.setValidFor(validFor);
    return this;
  }

  public LogicalResourceMVO note(List<NoteMVO> note) {
    super.setNote(note);
    return this;
  }

  public LogicalResourceMVO addNoteItem(NoteMVO noteItem) {
    super.addNoteItem(noteItem);
    return this;
  }

  public LogicalResourceMVO resourceOrderItem(List<RelatedResourceOrderItemMVO> resourceOrderItem) {
    super.setResourceOrderItem(resourceOrderItem);
    return this;
  }

  public LogicalResourceMVO addResourceOrderItemItem(RelatedResourceOrderItemMVO resourceOrderItemItem) {
    super.addResourceOrderItemItem(resourceOrderItemItem);
    return this;
  }

  public LogicalResourceMVO place(List<RelatedPlaceRefMVO> place) {
    super.setPlace(place);
    return this;
  }

  public LogicalResourceMVO addPlaceItem(RelatedPlaceRefMVO placeItem) {
    super.addPlaceItem(placeItem);
    return this;
  }

  public LogicalResourceMVO relatedParty(List<RelatedPartyRefOrPartyRoleRefMVO> relatedParty) {
    super.setRelatedParty(relatedParty);
    return this;
  }

  public LogicalResourceMVO addRelatedPartyItem(RelatedPartyRefOrPartyRoleRefMVO relatedPartyItem) {
    super.addRelatedPartyItem(relatedPartyItem);
    return this;
  }

  public LogicalResourceMVO supportingResource(List<ResourceRefOrValueMVO> supportingResource) {
    super.setSupportingResource(supportingResource);
    return this;
  }

  public LogicalResourceMVO addSupportingResourceItem(ResourceRefOrValueMVO supportingResourceItem) {
    super.addSupportingResourceItem(supportingResourceItem);
    return this;
  }

  public LogicalResourceMVO resourceRelationship(List<ResourceRelationshipMVO> resourceRelationship) {
    super.setResourceRelationship(resourceRelationship);
    return this;
  }

  public LogicalResourceMVO addResourceRelationshipItem(ResourceRelationshipMVO resourceRelationshipItem) {
    super.addResourceRelationshipItem(resourceRelationshipItem);
    return this;
  }

  public LogicalResourceMVO resourceCharacteristic(List<CharacteristicMVO> resourceCharacteristic) {
    super.setResourceCharacteristic(resourceCharacteristic);
    return this;
  }

  public LogicalResourceMVO addResourceCharacteristicItem(CharacteristicMVO resourceCharacteristicItem) {
    super.addResourceCharacteristicItem(resourceCharacteristicItem);
    return this;
  }

  public LogicalResourceMVO attachment(List<AttachmentOrDocumentRef> attachment) {
    super.setAttachment(attachment);
    return this;
  }

  public LogicalResourceMVO addAttachmentItem(AttachmentOrDocumentRef attachmentItem) {
    super.addAttachmentItem(attachmentItem);
    return this;
  }

  public LogicalResourceMVO resourceSpecification(ResourceSpecificationRefMVO resourceSpecification) {
    super.setResourceSpecification(resourceSpecification);
    return this;
  }

  public LogicalResourceMVO startOperatingDate(OffsetDateTime startOperatingDate) {
    super.setStartOperatingDate(startOperatingDate);
    return this;
  }

  public LogicalResourceMVO resourceVersion(String resourceVersion) {
    super.setResourceVersion(resourceVersion);
    return this;
  }

  public LogicalResourceMVO activationFeature(List<FeatureMVO> activationFeature) {
    super.setActivationFeature(activationFeature);
    return this;
  }

  public LogicalResourceMVO addActivationFeatureItem(FeatureMVO activationFeatureItem) {
    super.addActivationFeatureItem(activationFeatureItem);
    return this;
  }

  public LogicalResourceMVO intent(IntentRefMVO intent) {
    super.setIntent(intent);
    return this;
  }

  public LogicalResourceMVO externalIdentifier(List<ExternalIdentifierMVO> externalIdentifier) {
    super.setExternalIdentifier(externalIdentifier);
    return this;
  }

  public LogicalResourceMVO addExternalIdentifierItem(ExternalIdentifierMVO externalIdentifierItem) {
    super.addExternalIdentifierItem(externalIdentifierItem);
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogicalResourceMVO logicalResourceMVO = (LogicalResourceMVO) o;
    return Objects.equals(this.value, logicalResourceMVO.value) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(value, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogicalResourceMVO {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

