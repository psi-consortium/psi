package com.cgi.space.psi.common.model;

import java.net.URI;
import java.util.Objects;
import com.cgi.space.psi.common.model.CharacteristicFVO;
import com.cgi.space.psi.common.model.ExternalIdentifierFVO;
import com.cgi.space.psi.common.model.FeatureFVO;
import com.cgi.space.psi.common.model.IntentRefOrValueFVO;
import com.cgi.space.psi.common.model.NoteFVO;
import com.cgi.space.psi.common.model.RelatedEntityFVO;
import com.cgi.space.psi.common.model.RelatedPartyRefOrPartyRoleRefFVO;
import com.cgi.space.psi.common.model.RelatedPlaceRefOrValueFVO;
import com.cgi.space.psi.common.model.RelatedServiceOrderItemFVO;
import com.cgi.space.psi.common.model.ResourceRefFVO;
import com.cgi.space.psi.common.model.ServiceFVO;
import com.cgi.space.psi.common.model.ServiceRefOrValueFVO;
import com.cgi.space.psi.common.model.ServiceRelationshipFVO;
import com.cgi.space.psi.common.model.ServiceSpecificationRefFVO;
import com.cgi.space.psi.common.model.ServiceStateType;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.springframework.format.annotation.DateTimeFormat;
import java.net.URI;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * ServiceFVO
 */
@com.fasterxml.jackson.annotation.JsonFilter(com.cgi.space.psi.common.config.DynamicJacksonFilterProvider.NAME)

@JsonIgnoreProperties(
  value = "@type", // ignore manually set @type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the @type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = ServiceFVO.class, name = "Service")
})

@JsonTypeName("Service_FVO")
@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
public class ServiceFVO implements ServiceRefOrValueFVO {

  @JsonProperty("@type")
  private String atType;

  @JsonProperty("@baseType")
  private String atBaseType;

  @JsonProperty("@schemaLocation")
  private String atSchemaLocation;

  @JsonProperty("id")
  private String id;

  @JsonProperty("description")
  private String description;

  @JsonProperty("isServiceEnabled")
  private Boolean isServiceEnabled;

  @JsonProperty("hasStarted")
  private Boolean hasStarted;

  @JsonProperty("startMode")
  private String startMode;

  @JsonProperty("isStateful")
  private Boolean isStateful;

  @JsonProperty("startDate")
  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private OffsetDateTime startDate;

  @JsonProperty("endDate")
  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private OffsetDateTime endDate;

  @JsonProperty("serviceOrderItem")
  @Valid
  private List<RelatedServiceOrderItemFVO> serviceOrderItem = null;

  @JsonProperty("note")
  @Valid
  private List<NoteFVO> note = null;

  @JsonProperty("serviceType")
  private String serviceType;

  @JsonProperty("isBundle")
  private Boolean isBundle;

  @JsonProperty("name")
  private String name;

  @JsonProperty("category")
  private String category;

  @JsonProperty("feature")
  @Valid
  private List<FeatureFVO> feature = null;

  @JsonProperty("relatedEntity")
  @Valid
  private List<RelatedEntityFVO> relatedEntity = null;

  @JsonProperty("externalIdentifier")
  @Valid
  private List<ExternalIdentifierFVO> externalIdentifier = null;

  @JsonProperty("serviceCharacteristic")
  @Valid
  private List<CharacteristicFVO> serviceCharacteristic = null;

  @JsonProperty("serviceRelationship")
  @Valid
  private List<ServiceRelationshipFVO> serviceRelationship = null;

  @JsonProperty("supportingService")
  @Valid
  private List<ServiceRefOrValueFVO> supportingService = null;

  @JsonProperty("supportingResource")
  @Valid
  private List<ResourceRefFVO> supportingResource = null;

  @JsonProperty("relatedParty")
  @Valid
  private List<RelatedPartyRefOrPartyRoleRefFVO> relatedParty = null;

  @JsonProperty("place")
  @Valid
  private List<RelatedPlaceRefOrValueFVO> place = null;

  @JsonProperty("state")
  private ServiceStateType state;

  @JsonProperty("serviceSpecification")
  private ServiceSpecificationRefFVO serviceSpecification;

  @JsonProperty("intent")
  private IntentRefOrValueFVO intent;

  public ServiceFVO atType(String atType) {
    this.atType = atType;
    return this;
  }

  /**
   * When sub-classing, this defines the sub-class Extensible name
   * @return atType
  */
  @NotNull 
  @Schema(name = "@type", description = "When sub-classing, this defines the sub-class Extensible name", required = true)
  public String getAtType() {
    return atType;
  }

  public void setAtType(String atType) {
    this.atType = atType;
  }

  public ServiceFVO atBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
    return this;
  }

  /**
   * When sub-classing, this defines the super-class
   * @return atBaseType
  */
  
  @Schema(name = "@baseType", description = "When sub-classing, this defines the super-class", required = false)
  public String getAtBaseType() {
    return atBaseType;
  }

  public void setAtBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
  }

  public ServiceFVO atSchemaLocation(String atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
    return this;
  }

  /**
   * A URI to a JSON-Schema file that defines additional attributes and relationships
   * @return atSchemaLocation
  */
  
  @Schema(name = "@schemaLocation", description = "A URI to a JSON-Schema file that defines additional attributes and relationships", required = false)
  public String getAtSchemaLocation() {
    return atSchemaLocation;
  }

  public void setAtSchemaLocation(String atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
  }

  public ServiceFVO id(String id) {
    this.id = id;
    return this;
  }

  /**
   * unique identifier
   * @return id
  */
  
  @Schema(name = "id", description = "unique identifier", required = false)
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ServiceFVO description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Free-text description of the service
   * @return description
  */
  
  @Schema(name = "description", description = "Free-text description of the service", required = false)
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ServiceFVO isServiceEnabled(Boolean isServiceEnabled) {
    this.isServiceEnabled = isServiceEnabled;
    return this;
  }

  /**
   * If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed 
   * @return isServiceEnabled
  */
  
  @Schema(name = "isServiceEnabled", description = "If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed ", required = false)
  public Boolean getIsServiceEnabled() {
    return isServiceEnabled;
  }

  public void setIsServiceEnabled(Boolean isServiceEnabled) {
    this.isServiceEnabled = isServiceEnabled;
  }

  public ServiceFVO hasStarted(Boolean hasStarted) {
    this.hasStarted = hasStarted;
    return this;
  }

  /**
   * If TRUE, this Service has already been started
   * @return hasStarted
  */
  
  @Schema(name = "hasStarted", description = "If TRUE, this Service has already been started", required = false)
  public Boolean getHasStarted() {
    return hasStarted;
  }

  public void setHasStarted(Boolean hasStarted) {
    this.hasStarted = hasStarted;
  }

  public ServiceFVO startMode(String startMode) {
    this.startMode = startMode;
    return this;
  }

  /**
   * This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above
   * @return startMode
  */
  
  @Schema(name = "startMode", description = "This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above", required = false)
  public String getStartMode() {
    return startMode;
  }

  public void setStartMode(String startMode) {
    this.startMode = startMode;
  }

  public ServiceFVO isStateful(Boolean isStateful) {
    this.isStateful = isStateful;
    return this;
  }

  /**
   * If TRUE, this Service can be changed without affecting any other services
   * @return isStateful
  */
  
  @Schema(name = "isStateful", description = "If TRUE, this Service can be changed without affecting any other services", required = false)
  public Boolean getIsStateful() {
    return isStateful;
  }

  public void setIsStateful(Boolean isStateful) {
    this.isStateful = isStateful;
  }

  public ServiceFVO startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Date when the service starts
   * @return startDate
  */
  @Valid 
  @Schema(name = "startDate", description = "Date when the service starts", required = false)
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public ServiceFVO endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Date when the service ends
   * @return endDate
  */
  @Valid 
  @Schema(name = "endDate", description = "Date when the service ends", required = false)
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }

  public ServiceFVO serviceOrderItem(List<RelatedServiceOrderItemFVO> serviceOrderItem) {
    this.serviceOrderItem = serviceOrderItem;
    return this;
  }

  public ServiceFVO addServiceOrderItemItem(RelatedServiceOrderItemFVO serviceOrderItemItem) {
    if (this.serviceOrderItem == null) {
      this.serviceOrderItem = new ArrayList<>();
    }
    this.serviceOrderItem.add(serviceOrderItemItem);
    return this;
  }

  /**
   * A list of service order items related to this service
   * @return serviceOrderItem
  */
  @Valid 
  @Schema(name = "serviceOrderItem", description = "A list of service order items related to this service", required = false)
  public List<RelatedServiceOrderItemFVO> getServiceOrderItem() {
    return serviceOrderItem;
  }

  public void setServiceOrderItem(List<RelatedServiceOrderItemFVO> serviceOrderItem) {
    this.serviceOrderItem = serviceOrderItem;
  }

  public ServiceFVO note(List<NoteFVO> note) {
    this.note = note;
    return this;
  }

  public ServiceFVO addNoteItem(NoteFVO noteItem) {
    if (this.note == null) {
      this.note = new ArrayList<>();
    }
    this.note.add(noteItem);
    return this;
  }

  /**
   * A list of notes made on this service
   * @return note
  */
  @Valid 
  @Schema(name = "note", description = "A list of notes made on this service", required = false)
  public List<NoteFVO> getNote() {
    return note;
  }

  public void setNote(List<NoteFVO> note) {
    this.note = note;
  }

  public ServiceFVO serviceType(String serviceType) {
    this.serviceType = serviceType;
    return this;
  }

  /**
   * Business type of the service
   * @return serviceType
  */
  
  @Schema(name = "serviceType", description = "Business type of the service", required = false)
  public String getServiceType() {
    return serviceType;
  }

  public void setServiceType(String serviceType) {
    this.serviceType = serviceType;
  }

  public ServiceFVO isBundle(Boolean isBundle) {
    this.isBundle = isBundle;
    return this;
  }

  /**
   * If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).
   * @return isBundle
  */
  
  @Schema(name = "isBundle", description = "If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).", required = false)
  public Boolean getIsBundle() {
    return isBundle;
  }

  public void setIsBundle(Boolean isBundle) {
    this.isBundle = isBundle;
  }

  public ServiceFVO name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the service
   * @return name
  */
  
  @Schema(name = "name", description = "Name of the service", required = false)
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ServiceFVO category(String category) {
    this.category = category;
    return this;
  }

  /**
   * Is it a customer facing or resource facing service
   * @return category
  */
  
  @Schema(name = "category", description = "Is it a customer facing or resource facing service", required = false)
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public ServiceFVO feature(List<FeatureFVO> feature) {
    this.feature = feature;
    return this;
  }

  public ServiceFVO addFeatureItem(FeatureFVO featureItem) {
    if (this.feature == null) {
      this.feature = new ArrayList<>();
    }
    this.feature.add(featureItem);
    return this;
  }

  /**
   * A list of feature associated with this service 
   * @return feature
  */
  @Valid 
  @Schema(name = "feature", description = "A list of feature associated with this service ", required = false)
  public List<FeatureFVO> getFeature() {
    return feature;
  }

  public void setFeature(List<FeatureFVO> feature) {
    this.feature = feature;
  }

  public ServiceFVO relatedEntity(List<RelatedEntityFVO> relatedEntity) {
    this.relatedEntity = relatedEntity;
    return this;
  }

  public ServiceFVO addRelatedEntityItem(RelatedEntityFVO relatedEntityItem) {
    if (this.relatedEntity == null) {
      this.relatedEntity = new ArrayList<>();
    }
    this.relatedEntity.add(relatedEntityItem);
    return this;
  }

  /**
   * A list of related entities in relationship with this service
   * @return relatedEntity
  */
  @Valid 
  @Schema(name = "relatedEntity", description = "A list of related entities in relationship with this service", required = false)
  public List<RelatedEntityFVO> getRelatedEntity() {
    return relatedEntity;
  }

  public void setRelatedEntity(List<RelatedEntityFVO> relatedEntity) {
    this.relatedEntity = relatedEntity;
  }

  public ServiceFVO externalIdentifier(List<ExternalIdentifierFVO> externalIdentifier) {
    this.externalIdentifier = externalIdentifier;
    return this;
  }

  public ServiceFVO addExternalIdentifierItem(ExternalIdentifierFVO externalIdentifierItem) {
    if (this.externalIdentifier == null) {
      this.externalIdentifier = new ArrayList<>();
    }
    this.externalIdentifier.add(externalIdentifierItem);
    return this;
  }

  /**
   * A list of external identifiers assoicated with this service
   * @return externalIdentifier
  */
  @Valid 
  @Schema(name = "externalIdentifier", description = "A list of external identifiers assoicated with this service", required = false)
  public List<ExternalIdentifierFVO> getExternalIdentifier() {
    return externalIdentifier;
  }

  public void setExternalIdentifier(List<ExternalIdentifierFVO> externalIdentifier) {
    this.externalIdentifier = externalIdentifier;
  }

  public ServiceFVO serviceCharacteristic(List<CharacteristicFVO> serviceCharacteristic) {
    this.serviceCharacteristic = serviceCharacteristic;
    return this;
  }

  public ServiceFVO addServiceCharacteristicItem(CharacteristicFVO serviceCharacteristicItem) {
    if (this.serviceCharacteristic == null) {
      this.serviceCharacteristic = new ArrayList<>();
    }
    this.serviceCharacteristic.add(serviceCharacteristicItem);
    return this;
  }

  /**
   * A list of characteristics that characterize this service (ServiceCharacteristic [*]) 
   * @return serviceCharacteristic
  */
  @Valid 
  @Schema(name = "serviceCharacteristic", description = "A list of characteristics that characterize this service (ServiceCharacteristic [*]) ", required = false)
  public List<CharacteristicFVO> getServiceCharacteristic() {
    return serviceCharacteristic;
  }

  public void setServiceCharacteristic(List<CharacteristicFVO> serviceCharacteristic) {
    this.serviceCharacteristic = serviceCharacteristic;
  }

  public ServiceFVO serviceRelationship(List<ServiceRelationshipFVO> serviceRelationship) {
    this.serviceRelationship = serviceRelationship;
    return this;
  }

  public ServiceFVO addServiceRelationshipItem(ServiceRelationshipFVO serviceRelationshipItem) {
    if (this.serviceRelationship == null) {
      this.serviceRelationship = new ArrayList<>();
    }
    this.serviceRelationship.add(serviceRelationshipItem);
    return this;
  }

  /**
   * A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory.
   * @return serviceRelationship
  */
  @Valid 
  @Schema(name = "serviceRelationship", description = "A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory.", required = false)
  public List<ServiceRelationshipFVO> getServiceRelationship() {
    return serviceRelationship;
  }

  public void setServiceRelationship(List<ServiceRelationshipFVO> serviceRelationship) {
    this.serviceRelationship = serviceRelationship;
  }

  public ServiceFVO supportingService(List<ServiceRefOrValueFVO> supportingService) {
    this.supportingService = supportingService;
    return this;
  }

  public ServiceFVO addSupportingServiceItem(ServiceRefOrValueFVO supportingServiceItem) {
    if (this.supportingService == null) {
      this.supportingService = new ArrayList<>();
    }
    this.supportingService.add(supportingServiceItem);
    return this;
  }

  /**
   * A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)
   * @return supportingService
  */
  @Valid 
  @Schema(name = "supportingService", description = "A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)", required = false)
  public List<ServiceRefOrValueFVO> getSupportingService() {
    return supportingService;
  }

  public void setSupportingService(List<ServiceRefOrValueFVO> supportingService) {
    this.supportingService = supportingService;
  }

  public ServiceFVO supportingResource(List<ResourceRefFVO> supportingResource) {
    this.supportingResource = supportingResource;
    return this;
  }

  public ServiceFVO addSupportingResourceItem(ResourceRefFVO supportingResourceItem) {
    if (this.supportingResource == null) {
      this.supportingResource = new ArrayList<>();
    }
    this.supportingResource.add(supportingResourceItem);
    return this;
  }

  /**
   * A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources
   * @return supportingResource
  */
  @Valid 
  @Schema(name = "supportingResource", description = "A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources", required = false)
  public List<ResourceRefFVO> getSupportingResource() {
    return supportingResource;
  }

  public void setSupportingResource(List<ResourceRefFVO> supportingResource) {
    this.supportingResource = supportingResource;
  }

  public ServiceFVO relatedParty(List<RelatedPartyRefOrPartyRoleRefFVO> relatedParty) {
    this.relatedParty = relatedParty;
    return this;
  }

  public ServiceFVO addRelatedPartyItem(RelatedPartyRefOrPartyRoleRefFVO relatedPartyItem) {
    if (this.relatedParty == null) {
      this.relatedParty = new ArrayList<>();
    }
    this.relatedParty.add(relatedPartyItem);
    return this;
  }

  /**
   * A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity
   * @return relatedParty
  */
  @Valid 
  @Schema(name = "relatedParty", description = "A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity", required = false)
  public List<RelatedPartyRefOrPartyRoleRefFVO> getRelatedParty() {
    return relatedParty;
  }

  public void setRelatedParty(List<RelatedPartyRefOrPartyRoleRefFVO> relatedParty) {
    this.relatedParty = relatedParty;
  }

  public ServiceFVO place(List<RelatedPlaceRefOrValueFVO> place) {
    this.place = place;
    return this;
  }

  public ServiceFVO addPlaceItem(RelatedPlaceRefOrValueFVO placeItem) {
    if (this.place == null) {
      this.place = new ArrayList<>();
    }
    this.place.add(placeItem);
    return this;
  }

  /**
   * A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)
   * @return place
  */
  @Valid 
  @Schema(name = "place", description = "A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)", required = false)
  public List<RelatedPlaceRefOrValueFVO> getPlace() {
    return place;
  }

  public void setPlace(List<RelatedPlaceRefOrValueFVO> place) {
    this.place = place;
  }

  public ServiceFVO state(ServiceStateType state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
  */
  @NotNull @Valid 
  @Schema(name = "state", required = true)
  public ServiceStateType getState() {
    return state;
  }

  public void setState(ServiceStateType state) {
    this.state = state;
  }

  public ServiceFVO serviceSpecification(ServiceSpecificationRefFVO serviceSpecification) {
    this.serviceSpecification = serviceSpecification;
    return this;
  }

  /**
   * Get serviceSpecification
   * @return serviceSpecification
  */
  @NotNull @Valid 
  @Schema(name = "serviceSpecification", required = true)
  public ServiceSpecificationRefFVO getServiceSpecification() {
    return serviceSpecification;
  }

  public void setServiceSpecification(ServiceSpecificationRefFVO serviceSpecification) {
    this.serviceSpecification = serviceSpecification;
  }

  public ServiceFVO intent(IntentRefOrValueFVO intent) {
    this.intent = intent;
    return this;
  }

  /**
   * Get intent
   * @return intent
  */
  @Valid 
  @Schema(name = "intent", required = false)
  public IntentRefOrValueFVO getIntent() {
    return intent;
  }

  public void setIntent(IntentRefOrValueFVO intent) {
    this.intent = intent;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceFVO serviceFVO = (ServiceFVO) o;
    return Objects.equals(this.atType, serviceFVO.atType) &&
        Objects.equals(this.atBaseType, serviceFVO.atBaseType) &&
        Objects.equals(this.atSchemaLocation, serviceFVO.atSchemaLocation) &&
        Objects.equals(this.id, serviceFVO.id) &&
        Objects.equals(this.description, serviceFVO.description) &&
        Objects.equals(this.isServiceEnabled, serviceFVO.isServiceEnabled) &&
        Objects.equals(this.hasStarted, serviceFVO.hasStarted) &&
        Objects.equals(this.startMode, serviceFVO.startMode) &&
        Objects.equals(this.isStateful, serviceFVO.isStateful) &&
        Objects.equals(this.startDate, serviceFVO.startDate) &&
        Objects.equals(this.endDate, serviceFVO.endDate) &&
        Objects.equals(this.serviceOrderItem, serviceFVO.serviceOrderItem) &&
        Objects.equals(this.note, serviceFVO.note) &&
        Objects.equals(this.serviceType, serviceFVO.serviceType) &&
        Objects.equals(this.isBundle, serviceFVO.isBundle) &&
        Objects.equals(this.name, serviceFVO.name) &&
        Objects.equals(this.category, serviceFVO.category) &&
        Objects.equals(this.feature, serviceFVO.feature) &&
        Objects.equals(this.relatedEntity, serviceFVO.relatedEntity) &&
        Objects.equals(this.externalIdentifier, serviceFVO.externalIdentifier) &&
        Objects.equals(this.serviceCharacteristic, serviceFVO.serviceCharacteristic) &&
        Objects.equals(this.serviceRelationship, serviceFVO.serviceRelationship) &&
        Objects.equals(this.supportingService, serviceFVO.supportingService) &&
        Objects.equals(this.supportingResource, serviceFVO.supportingResource) &&
        Objects.equals(this.relatedParty, serviceFVO.relatedParty) &&
        Objects.equals(this.place, serviceFVO.place) &&
        Objects.equals(this.state, serviceFVO.state) &&
        Objects.equals(this.serviceSpecification, serviceFVO.serviceSpecification) &&
        Objects.equals(this.intent, serviceFVO.intent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atType, atBaseType, atSchemaLocation, id, description, isServiceEnabled, hasStarted, startMode, isStateful, startDate, endDate, serviceOrderItem, note, serviceType, isBundle, name, category, feature, relatedEntity, externalIdentifier, serviceCharacteristic, serviceRelationship, supportingService, supportingResource, relatedParty, place, state, serviceSpecification, intent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceFVO {\n");
    sb.append("    atType: ").append(toIndentedString(atType)).append("\n");
    sb.append("    atBaseType: ").append(toIndentedString(atBaseType)).append("\n");
    sb.append("    atSchemaLocation: ").append(toIndentedString(atSchemaLocation)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isServiceEnabled: ").append(toIndentedString(isServiceEnabled)).append("\n");
    sb.append("    hasStarted: ").append(toIndentedString(hasStarted)).append("\n");
    sb.append("    startMode: ").append(toIndentedString(startMode)).append("\n");
    sb.append("    isStateful: ").append(toIndentedString(isStateful)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    serviceOrderItem: ").append(toIndentedString(serviceOrderItem)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
    sb.append("    isBundle: ").append(toIndentedString(isBundle)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    feature: ").append(toIndentedString(feature)).append("\n");
    sb.append("    relatedEntity: ").append(toIndentedString(relatedEntity)).append("\n");
    sb.append("    externalIdentifier: ").append(toIndentedString(externalIdentifier)).append("\n");
    sb.append("    serviceCharacteristic: ").append(toIndentedString(serviceCharacteristic)).append("\n");
    sb.append("    serviceRelationship: ").append(toIndentedString(serviceRelationship)).append("\n");
    sb.append("    supportingService: ").append(toIndentedString(supportingService)).append("\n");
    sb.append("    supportingResource: ").append(toIndentedString(supportingResource)).append("\n");
    sb.append("    relatedParty: ").append(toIndentedString(relatedParty)).append("\n");
    sb.append("    place: ").append(toIndentedString(place)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    serviceSpecification: ").append(toIndentedString(serviceSpecification)).append("\n");
    sb.append("    intent: ").append(toIndentedString(intent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

