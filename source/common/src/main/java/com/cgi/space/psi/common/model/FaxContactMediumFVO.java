package com.cgi.space.psi.common.model;

import java.net.URI;
import java.util.Objects;
import com.cgi.space.psi.common.model.ContactMediumFVO;
import com.cgi.space.psi.common.model.EmailContactMediumFVO;
import com.cgi.space.psi.common.model.FaxContactMediumFVO;
import com.cgi.space.psi.common.model.GeographicAddressContactMediumFVO;
import com.cgi.space.psi.common.model.PhoneContactMediumFVO;
import com.cgi.space.psi.common.model.SocialContactMediumFVO;
import com.cgi.space.psi.common.model.TimePeriod;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * FaxContactMediumFVO
 */
@com.fasterxml.jackson.annotation.JsonFilter(com.cgi.space.psi.common.config.DynamicJacksonFilterProvider.NAME)

@JsonIgnoreProperties(
  value = "@type", // ignore manually set @type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the @type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = ContactMediumFVO.class, name = "ContactMedium"),
  @JsonSubTypes.Type(value = EmailContactMediumFVO.class, name = "EmailContactMedium"),
  @JsonSubTypes.Type(value = FaxContactMediumFVO.class, name = "FaxContactMedium"),
  @JsonSubTypes.Type(value = GeographicAddressContactMediumFVO.class, name = "GeographicAddressContactMedium"),
  @JsonSubTypes.Type(value = PhoneContactMediumFVO.class, name = "PhoneContactMedium"),
  @JsonSubTypes.Type(value = SocialContactMediumFVO.class, name = "SocialContactMedium")
})

@JsonTypeName("FaxContactMedium_FVO")
@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
public class FaxContactMediumFVO extends ContactMediumFVO {

  @JsonProperty("faxNumber")
  private String faxNumber;

  public FaxContactMediumFVO faxNumber(String faxNumber) {
    this.faxNumber = faxNumber;
    return this;
  }

  /**
   * The fax number of the contact
   * @return faxNumber
  */
  
  @Schema(name = "faxNumber", description = "The fax number of the contact", required = false)
  public String getFaxNumber() {
    return faxNumber;
  }

  public void setFaxNumber(String faxNumber) {
    this.faxNumber = faxNumber;
  }

  public FaxContactMediumFVO atType(String atType) {
    super.setAtType(atType);
    return this;
  }

  public FaxContactMediumFVO atBaseType(String atBaseType) {
    super.setAtBaseType(atBaseType);
    return this;
  }

  public FaxContactMediumFVO atSchemaLocation(String atSchemaLocation) {
    super.setAtSchemaLocation(atSchemaLocation);
    return this;
  }

  public FaxContactMediumFVO id(String id) {
    super.setId(id);
    return this;
  }

  public FaxContactMediumFVO preferred(Boolean preferred) {
    super.setPreferred(preferred);
    return this;
  }

  public FaxContactMediumFVO contactType(String contactType) {
    super.setContactType(contactType);
    return this;
  }

  public FaxContactMediumFVO validFor(TimePeriod validFor) {
    super.setValidFor(validFor);
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FaxContactMediumFVO faxContactMediumFVO = (FaxContactMediumFVO) o;
    return Objects.equals(this.faxNumber, faxContactMediumFVO.faxNumber) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(faxNumber, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FaxContactMediumFVO {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    faxNumber: ").append(toIndentedString(faxNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

