package com.cgi.space.psi.common.model;

import java.net.URI;
import java.util.Objects;
import com.cgi.space.psi.common.model.FileTransferData;
import com.cgi.space.psi.common.model.Interval;
import com.cgi.space.psi.common.model.OutputFormat;
import com.cgi.space.psi.common.model.PerformanceJobRef;
import com.cgi.space.psi.common.model.PerformanceJobRefOrValue;
import com.cgi.space.psi.common.model.PerformanceJobValue;
import com.cgi.space.psi.common.model.ResultFormat;
import com.cgi.space.psi.common.model.ServicePayloadSpecificAttributes;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * Direct assignment of values defined by PerformanceJob type to  PerformanceReport object. Necessary when PerformanceReport is not created by PerformanceJob and without relation to PerformanceJob.
 */
@com.fasterxml.jackson.annotation.JsonFilter(com.cgi.space.psi.common.config.DynamicJacksonFilterProvider.NAME)

@Schema(name = "PerformanceJobValue", description = "Direct assignment of values defined by PerformanceJob type to  PerformanceReport object. Necessary when PerformanceReport is not created by PerformanceJob and without relation to PerformanceJob.")
@JsonIgnoreProperties(
  value = "@type", // ignore manually set @type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the @type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = PerformanceJobRef.class, name = "PerformanceJobRef"),
  @JsonSubTypes.Type(value = PerformanceJobValue.class, name = "PerformanceJobValue")
})

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
public class PerformanceJobValue extends PerformanceJobRefOrValue {

  @JsonProperty("consumingApplicationId")
  private String consumingApplicationId;

  @JsonProperty("fileTransferData")
  private FileTransferData fileTransferData;

  @JsonProperty("granularity")
  private Interval granularity;

  @JsonProperty("outputFormat")
  private OutputFormat outputFormat;

  @JsonProperty("producingApplicationId")
  private String producingApplicationId;

  @JsonProperty("resultFormat")
  private ResultFormat resultFormat;

  @JsonProperty("servicePayloadSpecificAttributes")
  private ServicePayloadSpecificAttributes servicePayloadSpecificAttributes;

  public PerformanceJobValue consumingApplicationId(String consumingApplicationId) {
    this.consumingApplicationId = consumingApplicationId;
    return this;
  }

  /**
   * Identifier of consuming application
   * @return consumingApplicationId
  */
  
  @Schema(name = "consumingApplicationId", description = "Identifier of consuming application", required = false)
  public String getConsumingApplicationId() {
    return consumingApplicationId;
  }

  public void setConsumingApplicationId(String consumingApplicationId) {
    this.consumingApplicationId = consumingApplicationId;
  }

  public PerformanceJobValue fileTransferData(FileTransferData fileTransferData) {
    this.fileTransferData = fileTransferData;
    return this;
  }

  /**
   * Get fileTransferData
   * @return fileTransferData
  */
  @Valid 
  @Schema(name = "fileTransferData", required = false)
  public FileTransferData getFileTransferData() {
    return fileTransferData;
  }

  public void setFileTransferData(FileTransferData fileTransferData) {
    this.fileTransferData = fileTransferData;
  }

  public PerformanceJobValue granularity(Interval granularity) {
    this.granularity = granularity;
    return this;
  }

  /**
   * Get granularity
   * @return granularity
  */
  @Valid 
  @Schema(name = "granularity", required = false)
  public Interval getGranularity() {
    return granularity;
  }

  public void setGranularity(Interval granularity) {
    this.granularity = granularity;
  }

  public PerformanceJobValue outputFormat(OutputFormat outputFormat) {
    this.outputFormat = outputFormat;
    return this;
  }

  /**
   * Get outputFormat
   * @return outputFormat
  */
  @NotNull @Valid 
  @Schema(name = "outputFormat", required = true)
  public OutputFormat getOutputFormat() {
    return outputFormat;
  }

  public void setOutputFormat(OutputFormat outputFormat) {
    this.outputFormat = outputFormat;
  }

  public PerformanceJobValue producingApplicationId(String producingApplicationId) {
    this.producingApplicationId = producingApplicationId;
    return this;
  }

  /**
   * Identifier of producing application
   * @return producingApplicationId
  */
  
  @Schema(name = "producingApplicationId", description = "Identifier of producing application", required = false)
  public String getProducingApplicationId() {
    return producingApplicationId;
  }

  public void setProducingApplicationId(String producingApplicationId) {
    this.producingApplicationId = producingApplicationId;
  }

  public PerformanceJobValue resultFormat(ResultFormat resultFormat) {
    this.resultFormat = resultFormat;
    return this;
  }

  /**
   * Get resultFormat
   * @return resultFormat
  */
  @NotNull @Valid 
  @Schema(name = "resultFormat", required = true)
  public ResultFormat getResultFormat() {
    return resultFormat;
  }

  public void setResultFormat(ResultFormat resultFormat) {
    this.resultFormat = resultFormat;
  }

  public PerformanceJobValue servicePayloadSpecificAttributes(ServicePayloadSpecificAttributes servicePayloadSpecificAttributes) {
    this.servicePayloadSpecificAttributes = servicePayloadSpecificAttributes;
    return this;
  }

  /**
   * Get servicePayloadSpecificAttributes
   * @return servicePayloadSpecificAttributes
  */
  @NotNull @Valid 
  @Schema(name = "servicePayloadSpecificAttributes", required = true)
  public ServicePayloadSpecificAttributes getServicePayloadSpecificAttributes() {
    return servicePayloadSpecificAttributes;
  }

  public void setServicePayloadSpecificAttributes(ServicePayloadSpecificAttributes servicePayloadSpecificAttributes) {
    this.servicePayloadSpecificAttributes = servicePayloadSpecificAttributes;
  }

  public PerformanceJobValue atType(String atType) {
    super.setAtType(atType);
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PerformanceJobValue performanceJobValue = (PerformanceJobValue) o;
    return Objects.equals(this.consumingApplicationId, performanceJobValue.consumingApplicationId) &&
        Objects.equals(this.fileTransferData, performanceJobValue.fileTransferData) &&
        Objects.equals(this.granularity, performanceJobValue.granularity) &&
        Objects.equals(this.outputFormat, performanceJobValue.outputFormat) &&
        Objects.equals(this.producingApplicationId, performanceJobValue.producingApplicationId) &&
        Objects.equals(this.resultFormat, performanceJobValue.resultFormat) &&
        Objects.equals(this.servicePayloadSpecificAttributes, performanceJobValue.servicePayloadSpecificAttributes) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consumingApplicationId, fileTransferData, granularity, outputFormat, producingApplicationId, resultFormat, servicePayloadSpecificAttributes, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PerformanceJobValue {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    consumingApplicationId: ").append(toIndentedString(consumingApplicationId)).append("\n");
    sb.append("    fileTransferData: ").append(toIndentedString(fileTransferData)).append("\n");
    sb.append("    granularity: ").append(toIndentedString(granularity)).append("\n");
    sb.append("    outputFormat: ").append(toIndentedString(outputFormat)).append("\n");
    sb.append("    producingApplicationId: ").append(toIndentedString(producingApplicationId)).append("\n");
    sb.append("    resultFormat: ").append(toIndentedString(resultFormat)).append("\n");
    sb.append("    servicePayloadSpecificAttributes: ").append(toIndentedString(servicePayloadSpecificAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

