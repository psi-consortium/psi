package com.cgi.space.psi.common.model;

import java.net.URI;
import java.util.Objects;
import com.cgi.space.psi.common.model.AttachmentOrDocumentRef;
import com.cgi.space.psi.common.model.CharacteristicSpecificationFVO;
import com.cgi.space.psi.common.model.ConstraintRefFVO;
import com.cgi.space.psi.common.model.EntitySpecificationFVO;
import com.cgi.space.psi.common.model.EntitySpecificationRelationshipFVO;
import com.cgi.space.psi.common.model.RelatedPartyRefOrPartyRoleRefFVO;
import com.cgi.space.psi.common.model.ServiceSpecificationFVO;
import com.cgi.space.psi.common.model.TargetEntitySchemaFVO;
import com.cgi.space.psi.common.model.TimePeriod;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.springframework.format.annotation.DateTimeFormat;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * EntitySpecificationFVO
 */
@com.fasterxml.jackson.annotation.JsonFilter(com.cgi.space.psi.common.config.DynamicJacksonFilterProvider.NAME)

@JsonIgnoreProperties(
  value = "@type", // ignore manually set @type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the @type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = EntitySpecificationFVO.class, name = "EntitySpecification"),
  @JsonSubTypes.Type(value = ServiceSpecificationFVO.class, name = "ServiceSpecification"),
  @JsonSubTypes.Type(value = ServiceSpecificationFVO.class, name = "ServiceSpecification_FVO")
})

@JsonTypeName("EntitySpecification_FVO")
@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
public class EntitySpecificationFVO {

  @JsonProperty("@type")
  private String atType;

  @JsonProperty("@baseType")
  private String atBaseType;

  @JsonProperty("@schemaLocation")
  private String atSchemaLocation;

  @JsonProperty("id")
  private String id;

  @JsonProperty("name")
  private String name;

  @JsonProperty("description")
  private String description;

  @JsonProperty("lastUpdate")
  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private OffsetDateTime lastUpdate;

  @JsonProperty("lifecycleStatus")
  private String lifecycleStatus;

  @JsonProperty("isBundle")
  private Boolean isBundle;

  @JsonProperty("validFor")
  private TimePeriod validFor;

  @JsonProperty("version")
  private String version;

  @JsonProperty("attachment")
  @Valid
  private List<AttachmentOrDocumentRef> attachment = null;

  @JsonProperty("targetEntitySchema")
  private TargetEntitySchemaFVO targetEntitySchema;

  @JsonProperty("specCharacteristic")
  @Valid
  private List<CharacteristicSpecificationFVO> specCharacteristic = null;

  @JsonProperty("relatedParty")
  @Valid
  private List<RelatedPartyRefOrPartyRoleRefFVO> relatedParty = null;

  @JsonProperty("constraint")
  @Valid
  private List<ConstraintRefFVO> constraint = null;

  @JsonProperty("entitySpecRelationship")
  @Valid
  private List<EntitySpecificationRelationshipFVO> entitySpecRelationship = null;

  public EntitySpecificationFVO atType(String atType) {
    this.atType = atType;
    return this;
  }

  /**
   * When sub-classing, this defines the sub-class Extensible name
   * @return atType
  */
  @NotNull 
  @Schema(name = "@type", description = "When sub-classing, this defines the sub-class Extensible name", required = true)
  public String getAtType() {
    return atType;
  }

  public void setAtType(String atType) {
    this.atType = atType;
  }

  public EntitySpecificationFVO atBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
    return this;
  }

  /**
   * When sub-classing, this defines the super-class
   * @return atBaseType
  */
  
  @Schema(name = "@baseType", description = "When sub-classing, this defines the super-class", required = false)
  public String getAtBaseType() {
    return atBaseType;
  }

  public void setAtBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
  }

  public EntitySpecificationFVO atSchemaLocation(String atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
    return this;
  }

  /**
   * A URI to a JSON-Schema file that defines additional attributes and relationships
   * @return atSchemaLocation
  */
  
  @Schema(name = "@schemaLocation", description = "A URI to a JSON-Schema file that defines additional attributes and relationships", required = false)
  public String getAtSchemaLocation() {
    return atSchemaLocation;
  }

  public void setAtSchemaLocation(String atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
  }

  public EntitySpecificationFVO id(String id) {
    this.id = id;
    return this;
  }

  /**
   * unique identifier
   * @return id
  */
  
  @Schema(name = "id", description = "unique identifier", required = false)
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public EntitySpecificationFVO name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name given to the specification
   * @return name
  */
  @NotNull 
  @Schema(name = "name", description = "Name given to the specification", required = true)
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public EntitySpecificationFVO description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of the specification
   * @return description
  */
  
  @Schema(name = "description", description = "Description of the specification", required = false)
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public EntitySpecificationFVO lastUpdate(OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
    return this;
  }

  /**
   * Date and time of the last update of the specification
   * @return lastUpdate
  */
  @Valid 
  @Schema(name = "lastUpdate", description = "Date and time of the last update of the specification", required = false)
  public OffsetDateTime getLastUpdate() {
    return lastUpdate;
  }

  public void setLastUpdate(OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
  }

  public EntitySpecificationFVO lifecycleStatus(String lifecycleStatus) {
    this.lifecycleStatus = lifecycleStatus;
    return this;
  }

  /**
   * Used to indicate the current lifecycle status of this catalog item
   * @return lifecycleStatus
  */
  
  @Schema(name = "lifecycleStatus", description = "Used to indicate the current lifecycle status of this catalog item", required = false)
  public String getLifecycleStatus() {
    return lifecycleStatus;
  }

  public void setLifecycleStatus(String lifecycleStatus) {
    this.lifecycleStatus = lifecycleStatus;
  }

  public EntitySpecificationFVO isBundle(Boolean isBundle) {
    this.isBundle = isBundle;
    return this;
  }

  /**
   * isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true).
   * @return isBundle
  */
  
  @Schema(name = "isBundle", description = "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true).", required = false)
  public Boolean getIsBundle() {
    return isBundle;
  }

  public void setIsBundle(Boolean isBundle) {
    this.isBundle = isBundle;
  }

  public EntitySpecificationFVO validFor(TimePeriod validFor) {
    this.validFor = validFor;
    return this;
  }

  /**
   * Get validFor
   * @return validFor
  */
  @Valid 
  @Schema(name = "validFor", required = false)
  public TimePeriod getValidFor() {
    return validFor;
  }

  public void setValidFor(TimePeriod validFor) {
    this.validFor = validFor;
  }

  public EntitySpecificationFVO version(String version) {
    this.version = version;
    return this;
  }

  /**
   * specification version
   * @return version
  */
  
  @Schema(name = "version", description = "specification version", required = false)
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public EntitySpecificationFVO attachment(List<AttachmentOrDocumentRef> attachment) {
    this.attachment = attachment;
    return this;
  }

  public EntitySpecificationFVO addAttachmentItem(AttachmentOrDocumentRef attachmentItem) {
    if (this.attachment == null) {
      this.attachment = new ArrayList<>();
    }
    this.attachment.add(attachmentItem);
    return this;
  }

  /**
   * Get attachment
   * @return attachment
  */
  @Valid 
  @Schema(name = "attachment", required = false)
  public List<AttachmentOrDocumentRef> getAttachment() {
    return attachment;
  }

  public void setAttachment(List<AttachmentOrDocumentRef> attachment) {
    this.attachment = attachment;
  }

  public EntitySpecificationFVO targetEntitySchema(TargetEntitySchemaFVO targetEntitySchema) {
    this.targetEntitySchema = targetEntitySchema;
    return this;
  }

  /**
   * Get targetEntitySchema
   * @return targetEntitySchema
  */
  @Valid 
  @Schema(name = "targetEntitySchema", required = false)
  public TargetEntitySchemaFVO getTargetEntitySchema() {
    return targetEntitySchema;
  }

  public void setTargetEntitySchema(TargetEntitySchemaFVO targetEntitySchema) {
    this.targetEntitySchema = targetEntitySchema;
  }

  public EntitySpecificationFVO specCharacteristic(List<CharacteristicSpecificationFVO> specCharacteristic) {
    this.specCharacteristic = specCharacteristic;
    return this;
  }

  public EntitySpecificationFVO addSpecCharacteristicItem(CharacteristicSpecificationFVO specCharacteristicItem) {
    if (this.specCharacteristic == null) {
      this.specCharacteristic = new ArrayList<>();
    }
    this.specCharacteristic.add(specCharacteristicItem);
    return this;
  }

  /**
   * List of characteristics that the entity can take
   * @return specCharacteristic
  */
  @Valid 
  @Schema(name = "specCharacteristic", description = "List of characteristics that the entity can take", required = false)
  public List<CharacteristicSpecificationFVO> getSpecCharacteristic() {
    return specCharacteristic;
  }

  public void setSpecCharacteristic(List<CharacteristicSpecificationFVO> specCharacteristic) {
    this.specCharacteristic = specCharacteristic;
  }

  public EntitySpecificationFVO relatedParty(List<RelatedPartyRefOrPartyRoleRefFVO> relatedParty) {
    this.relatedParty = relatedParty;
    return this;
  }

  public EntitySpecificationFVO addRelatedPartyItem(RelatedPartyRefOrPartyRoleRefFVO relatedPartyItem) {
    if (this.relatedParty == null) {
      this.relatedParty = new ArrayList<>();
    }
    this.relatedParty.add(relatedPartyItem);
    return this;
  }

  /**
   * Parties who manage or otherwise have an interest in this specification
   * @return relatedParty
  */
  @Valid 
  @Schema(name = "relatedParty", description = "Parties who manage or otherwise have an interest in this specification", required = false)
  public List<RelatedPartyRefOrPartyRoleRefFVO> getRelatedParty() {
    return relatedParty;
  }

  public void setRelatedParty(List<RelatedPartyRefOrPartyRoleRefFVO> relatedParty) {
    this.relatedParty = relatedParty;
  }

  public EntitySpecificationFVO constraint(List<ConstraintRefFVO> constraint) {
    this.constraint = constraint;
    return this;
  }

  public EntitySpecificationFVO addConstraintItem(ConstraintRefFVO constraintItem) {
    if (this.constraint == null) {
      this.constraint = new ArrayList<>();
    }
    this.constraint.add(constraintItem);
    return this;
  }

  /**
   * This is a list of constraint references applied to this specification
   * @return constraint
  */
  @Valid 
  @Schema(name = "constraint", description = "This is a list of constraint references applied to this specification", required = false)
  public List<ConstraintRefFVO> getConstraint() {
    return constraint;
  }

  public void setConstraint(List<ConstraintRefFVO> constraint) {
    this.constraint = constraint;
  }

  public EntitySpecificationFVO entitySpecRelationship(List<EntitySpecificationRelationshipFVO> entitySpecRelationship) {
    this.entitySpecRelationship = entitySpecRelationship;
    return this;
  }

  public EntitySpecificationFVO addEntitySpecRelationshipItem(EntitySpecificationRelationshipFVO entitySpecRelationshipItem) {
    if (this.entitySpecRelationship == null) {
      this.entitySpecRelationship = new ArrayList<>();
    }
    this.entitySpecRelationship.add(entitySpecRelationshipItem);
    return this;
  }

  /**
   * Relationship to another specification
   * @return entitySpecRelationship
  */
  @Valid 
  @Schema(name = "entitySpecRelationship", description = "Relationship to another specification", required = false)
  public List<EntitySpecificationRelationshipFVO> getEntitySpecRelationship() {
    return entitySpecRelationship;
  }

  public void setEntitySpecRelationship(List<EntitySpecificationRelationshipFVO> entitySpecRelationship) {
    this.entitySpecRelationship = entitySpecRelationship;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntitySpecificationFVO entitySpecificationFVO = (EntitySpecificationFVO) o;
    return Objects.equals(this.atType, entitySpecificationFVO.atType) &&
        Objects.equals(this.atBaseType, entitySpecificationFVO.atBaseType) &&
        Objects.equals(this.atSchemaLocation, entitySpecificationFVO.atSchemaLocation) &&
        Objects.equals(this.id, entitySpecificationFVO.id) &&
        Objects.equals(this.name, entitySpecificationFVO.name) &&
        Objects.equals(this.description, entitySpecificationFVO.description) &&
        Objects.equals(this.lastUpdate, entitySpecificationFVO.lastUpdate) &&
        Objects.equals(this.lifecycleStatus, entitySpecificationFVO.lifecycleStatus) &&
        Objects.equals(this.isBundle, entitySpecificationFVO.isBundle) &&
        Objects.equals(this.validFor, entitySpecificationFVO.validFor) &&
        Objects.equals(this.version, entitySpecificationFVO.version) &&
        Objects.equals(this.attachment, entitySpecificationFVO.attachment) &&
        Objects.equals(this.targetEntitySchema, entitySpecificationFVO.targetEntitySchema) &&
        Objects.equals(this.specCharacteristic, entitySpecificationFVO.specCharacteristic) &&
        Objects.equals(this.relatedParty, entitySpecificationFVO.relatedParty) &&
        Objects.equals(this.constraint, entitySpecificationFVO.constraint) &&
        Objects.equals(this.entitySpecRelationship, entitySpecificationFVO.entitySpecRelationship);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atType, atBaseType, atSchemaLocation, id, name, description, lastUpdate, lifecycleStatus, isBundle, validFor, version, attachment, targetEntitySchema, specCharacteristic, relatedParty, constraint, entitySpecRelationship);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntitySpecificationFVO {\n");
    sb.append("    atType: ").append(toIndentedString(atType)).append("\n");
    sb.append("    atBaseType: ").append(toIndentedString(atBaseType)).append("\n");
    sb.append("    atSchemaLocation: ").append(toIndentedString(atSchemaLocation)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    lastUpdate: ").append(toIndentedString(lastUpdate)).append("\n");
    sb.append("    lifecycleStatus: ").append(toIndentedString(lifecycleStatus)).append("\n");
    sb.append("    isBundle: ").append(toIndentedString(isBundle)).append("\n");
    sb.append("    validFor: ").append(toIndentedString(validFor)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    attachment: ").append(toIndentedString(attachment)).append("\n");
    sb.append("    targetEntitySchema: ").append(toIndentedString(targetEntitySchema)).append("\n");
    sb.append("    specCharacteristic: ").append(toIndentedString(specCharacteristic)).append("\n");
    sb.append("    relatedParty: ").append(toIndentedString(relatedParty)).append("\n");
    sb.append("    constraint: ").append(toIndentedString(constraint)).append("\n");
    sb.append("    entitySpecRelationship: ").append(toIndentedString(entitySpecRelationship)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

