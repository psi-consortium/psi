package com.cgi.space.psi.common.model;

import java.net.URI;
import java.util.Objects;
import com.cgi.space.psi.common.model.AccountRefFVO;
import com.cgi.space.psi.common.model.AgreementRefFVO;
import com.cgi.space.psi.common.model.BusinessPartnerFVO;
import com.cgi.space.psi.common.model.CharacteristicFVO;
import com.cgi.space.psi.common.model.ConsumerFVO;
import com.cgi.space.psi.common.model.ContactMediumFVO;
import com.cgi.space.psi.common.model.CreditProfileFVO;
import com.cgi.space.psi.common.model.PartyRefFVO;
import com.cgi.space.psi.common.model.PartyRoleFVO;
import com.cgi.space.psi.common.model.PartyRoleSpecificationRefFVO;
import com.cgi.space.psi.common.model.PaymentMethodRefFVO;
import com.cgi.space.psi.common.model.ProducerFVO;
import com.cgi.space.psi.common.model.RelatedPartyOrPartyRoleFVO;
import com.cgi.space.psi.common.model.SupplierFVO;
import com.cgi.space.psi.common.model.TimePeriod;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.ArrayList;
import java.util.List;
import java.net.URI;
import java.time.OffsetDateTime;
import org.springframework.format.annotation.DateTimeFormat;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * PartyRoleFVO
 */
@com.fasterxml.jackson.annotation.JsonFilter(com.cgi.space.psi.common.config.DynamicJacksonFilterProvider.NAME)

@JsonIgnoreProperties(
  value = "@type", // ignore manually set @type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the @type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = BusinessPartnerFVO.class, name = "BusinessPartner"),
  @JsonSubTypes.Type(value = BusinessPartnerFVO.class, name = "BusinessPartner_FVO"),
  @JsonSubTypes.Type(value = ConsumerFVO.class, name = "Consumer"),
  @JsonSubTypes.Type(value = ConsumerFVO.class, name = "Consumer_FVO"),
  @JsonSubTypes.Type(value = PartyRoleFVO.class, name = "PartyRole"),
  @JsonSubTypes.Type(value = ProducerFVO.class, name = "Producer"),
  @JsonSubTypes.Type(value = ProducerFVO.class, name = "Producer_FVO"),
  @JsonSubTypes.Type(value = SupplierFVO.class, name = "Supplier"),
  @JsonSubTypes.Type(value = SupplierFVO.class, name = "Supplier_FVO")
})

@JsonTypeName("PartyRole_FVO")
@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
public class PartyRoleFVO implements PartyOrPartyRoleFVO {

  @JsonProperty("@type")
  private String atType;

  @JsonProperty("@baseType")
  private String atBaseType;

  @JsonProperty("@schemaLocation")
  private String atSchemaLocation;

  @JsonProperty("id")
  private String id;

  @JsonProperty("name")
  private String name;

  @JsonProperty("description")
  private String description;

  @JsonProperty("role")
  private String role;

  @JsonProperty("engagedParty")
  private PartyRefFVO engagedParty;

  @JsonProperty("partyRoleSpecification")
  private PartyRoleSpecificationRefFVO partyRoleSpecification;

  @JsonProperty("characteristic")
  @Valid
  private List<CharacteristicFVO> characteristic = null;

  @JsonProperty("account")
  @Valid
  private List<AccountRefFVO> account = null;

  @JsonProperty("agreement")
  @Valid
  private List<AgreementRefFVO> agreement = null;

  @JsonProperty("contactMedium")
  @Valid
  private List<ContactMediumFVO> contactMedium = null;

  @JsonProperty("paymentMethod")
  @Valid
  private List<PaymentMethodRefFVO> paymentMethod = null;

  @JsonProperty("creditProfile")
  @Valid
  private List<CreditProfileFVO> creditProfile = null;

  @JsonProperty("relatedParty")
  @Valid
  private List<RelatedPartyOrPartyRoleFVO> relatedParty = null;

  @JsonProperty("status")
  private String status;

  @JsonProperty("statusReason")
  private String statusReason;

  @JsonProperty("validFor")
  private TimePeriod validFor;

  public PartyRoleFVO atType(String atType) {
    this.atType = atType;
    return this;
  }

  /**
   * When sub-classing, this defines the sub-class Extensible name
   * @return atType
  */
  @NotNull 
  @Schema(name = "@type", description = "When sub-classing, this defines the sub-class Extensible name", required = true)
  public String getAtType() {
    return atType;
  }

  public void setAtType(String atType) {
    this.atType = atType;
  }

  public PartyRoleFVO atBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
    return this;
  }

  /**
   * When sub-classing, this defines the super-class
   * @return atBaseType
  */
  
  @Schema(name = "@baseType", description = "When sub-classing, this defines the super-class", required = false)
  public String getAtBaseType() {
    return atBaseType;
  }

  public void setAtBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
  }

  public PartyRoleFVO atSchemaLocation(String atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
    return this;
  }

  /**
   * A URI to a JSON-Schema file that defines additional attributes and relationships
   * @return atSchemaLocation
  */
  
  @Schema(name = "@schemaLocation", description = "A URI to a JSON-Schema file that defines additional attributes and relationships", required = false)
  public String getAtSchemaLocation() {
    return atSchemaLocation;
  }

  public void setAtSchemaLocation(String atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
  }

  public PartyRoleFVO id(String id) {
    this.id = id;
    return this;
  }

  /**
   * unique identifier
   * @return id
  */
  
  @Schema(name = "id", description = "unique identifier", required = false)
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PartyRoleFVO name(String name) {
    this.name = name;
    return this;
  }

  /**
   * A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity.
   * @return name
  */
  @NotNull 
  @Schema(name = "name", description = "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity.", required = true)
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PartyRoleFVO description(String description) {
    this.description = description;
    return this;
  }

  /**
   * A description of the PartyRole.
   * @return description
  */
  
  @Schema(name = "description", description = "A description of the PartyRole.", required = false)
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PartyRoleFVO role(String role) {
    this.role = role;
    return this;
  }

  /**
   * Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification.
   * @return role
  */
  
  @Schema(name = "role", description = "Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification.", required = false)
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }

  public PartyRoleFVO engagedParty(PartyRefFVO engagedParty) {
    this.engagedParty = engagedParty;
    return this;
  }

  /**
   * Get engagedParty
   * @return engagedParty
  */
  @NotNull @Valid 
  @Schema(name = "engagedParty", required = true)
  public PartyRefFVO getEngagedParty() {
    return engagedParty;
  }

  public void setEngagedParty(PartyRefFVO engagedParty) {
    this.engagedParty = engagedParty;
  }

  public PartyRoleFVO partyRoleSpecification(PartyRoleSpecificationRefFVO partyRoleSpecification) {
    this.partyRoleSpecification = partyRoleSpecification;
    return this;
  }

  /**
   * Get partyRoleSpecification
   * @return partyRoleSpecification
  */
  @Valid 
  @Schema(name = "partyRoleSpecification", required = false)
  public PartyRoleSpecificationRefFVO getPartyRoleSpecification() {
    return partyRoleSpecification;
  }

  public void setPartyRoleSpecification(PartyRoleSpecificationRefFVO partyRoleSpecification) {
    this.partyRoleSpecification = partyRoleSpecification;
  }

  public PartyRoleFVO characteristic(List<CharacteristicFVO> characteristic) {
    this.characteristic = characteristic;
    return this;
  }

  public PartyRoleFVO addCharacteristicItem(CharacteristicFVO characteristicItem) {
    if (this.characteristic == null) {
      this.characteristic = new ArrayList<>();
    }
    this.characteristic.add(characteristicItem);
    return this;
  }

  /**
   * Describes the characteristic of a party role.
   * @return characteristic
  */
  @Valid 
  @Schema(name = "characteristic", description = "Describes the characteristic of a party role.", required = false)
  public List<CharacteristicFVO> getCharacteristic() {
    return characteristic;
  }

  public void setCharacteristic(List<CharacteristicFVO> characteristic) {
    this.characteristic = characteristic;
  }

  public PartyRoleFVO account(List<AccountRefFVO> account) {
    this.account = account;
    return this;
  }

  public PartyRoleFVO addAccountItem(AccountRefFVO accountItem) {
    if (this.account == null) {
      this.account = new ArrayList<>();
    }
    this.account.add(accountItem);
    return this;
  }

  /**
   * Get account
   * @return account
  */
  @Valid 
  @Schema(name = "account", required = false)
  public List<AccountRefFVO> getAccount() {
    return account;
  }

  public void setAccount(List<AccountRefFVO> account) {
    this.account = account;
  }

  public PartyRoleFVO agreement(List<AgreementRefFVO> agreement) {
    this.agreement = agreement;
    return this;
  }

  public PartyRoleFVO addAgreementItem(AgreementRefFVO agreementItem) {
    if (this.agreement == null) {
      this.agreement = new ArrayList<>();
    }
    this.agreement.add(agreementItem);
    return this;
  }

  /**
   * Get agreement
   * @return agreement
  */
  @Valid 
  @Schema(name = "agreement", required = false)
  public List<AgreementRefFVO> getAgreement() {
    return agreement;
  }

  public void setAgreement(List<AgreementRefFVO> agreement) {
    this.agreement = agreement;
  }

  public PartyRoleFVO contactMedium(List<ContactMediumFVO> contactMedium) {
    this.contactMedium = contactMedium;
    return this;
  }

  public PartyRoleFVO addContactMediumItem(ContactMediumFVO contactMediumItem) {
    if (this.contactMedium == null) {
      this.contactMedium = new ArrayList<>();
    }
    this.contactMedium.add(contactMediumItem);
    return this;
  }

  /**
   * Get contactMedium
   * @return contactMedium
  */
  @Valid 
  @Schema(name = "contactMedium", required = false)
  public List<ContactMediumFVO> getContactMedium() {
    return contactMedium;
  }

  public void setContactMedium(List<ContactMediumFVO> contactMedium) {
    this.contactMedium = contactMedium;
  }

  public PartyRoleFVO paymentMethod(List<PaymentMethodRefFVO> paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

  public PartyRoleFVO addPaymentMethodItem(PaymentMethodRefFVO paymentMethodItem) {
    if (this.paymentMethod == null) {
      this.paymentMethod = new ArrayList<>();
    }
    this.paymentMethod.add(paymentMethodItem);
    return this;
  }

  /**
   * Get paymentMethod
   * @return paymentMethod
  */
  @Valid 
  @Schema(name = "paymentMethod", required = false)
  public List<PaymentMethodRefFVO> getPaymentMethod() {
    return paymentMethod;
  }

  public void setPaymentMethod(List<PaymentMethodRefFVO> paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  public PartyRoleFVO creditProfile(List<CreditProfileFVO> creditProfile) {
    this.creditProfile = creditProfile;
    return this;
  }

  public PartyRoleFVO addCreditProfileItem(CreditProfileFVO creditProfileItem) {
    if (this.creditProfile == null) {
      this.creditProfile = new ArrayList<>();
    }
    this.creditProfile.add(creditProfileItem);
    return this;
  }

  /**
   * Get creditProfile
   * @return creditProfile
  */
  @Valid 
  @Schema(name = "creditProfile", required = false)
  public List<CreditProfileFVO> getCreditProfile() {
    return creditProfile;
  }

  public void setCreditProfile(List<CreditProfileFVO> creditProfile) {
    this.creditProfile = creditProfile;
  }

  public PartyRoleFVO relatedParty(List<RelatedPartyOrPartyRoleFVO> relatedParty) {
    this.relatedParty = relatedParty;
    return this;
  }

  public PartyRoleFVO addRelatedPartyItem(RelatedPartyOrPartyRoleFVO relatedPartyItem) {
    if (this.relatedParty == null) {
      this.relatedParty = new ArrayList<>();
    }
    this.relatedParty.add(relatedPartyItem);
    return this;
  }

  /**
   * Get relatedParty
   * @return relatedParty
  */
  @Valid 
  @Schema(name = "relatedParty", required = false)
  public List<RelatedPartyOrPartyRoleFVO> getRelatedParty() {
    return relatedParty;
  }

  public void setRelatedParty(List<RelatedPartyOrPartyRoleFVO> relatedParty) {
    this.relatedParty = relatedParty;
  }

  public PartyRoleFVO status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Used to track the lifecycle status of the party role.
   * @return status
  */
  
  @Schema(name = "status", description = "Used to track the lifecycle status of the party role.", required = false)
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public PartyRoleFVO statusReason(String statusReason) {
    this.statusReason = statusReason;
    return this;
  }

  /**
   * A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection.
   * @return statusReason
  */
  
  @Schema(name = "statusReason", description = "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection.", required = false)
  public String getStatusReason() {
    return statusReason;
  }

  public void setStatusReason(String statusReason) {
    this.statusReason = statusReason;
  }

  public PartyRoleFVO validFor(TimePeriod validFor) {
    this.validFor = validFor;
    return this;
  }

  /**
   * Get validFor
   * @return validFor
  */
  @Valid 
  @Schema(name = "validFor", required = false)
  public TimePeriod getValidFor() {
    return validFor;
  }

  public void setValidFor(TimePeriod validFor) {
    this.validFor = validFor;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PartyRoleFVO partyRoleFVO = (PartyRoleFVO) o;
    return Objects.equals(this.atType, partyRoleFVO.atType) &&
        Objects.equals(this.atBaseType, partyRoleFVO.atBaseType) &&
        Objects.equals(this.atSchemaLocation, partyRoleFVO.atSchemaLocation) &&
        Objects.equals(this.id, partyRoleFVO.id) &&
        Objects.equals(this.name, partyRoleFVO.name) &&
        Objects.equals(this.description, partyRoleFVO.description) &&
        Objects.equals(this.role, partyRoleFVO.role) &&
        Objects.equals(this.engagedParty, partyRoleFVO.engagedParty) &&
        Objects.equals(this.partyRoleSpecification, partyRoleFVO.partyRoleSpecification) &&
        Objects.equals(this.characteristic, partyRoleFVO.characteristic) &&
        Objects.equals(this.account, partyRoleFVO.account) &&
        Objects.equals(this.agreement, partyRoleFVO.agreement) &&
        Objects.equals(this.contactMedium, partyRoleFVO.contactMedium) &&
        Objects.equals(this.paymentMethod, partyRoleFVO.paymentMethod) &&
        Objects.equals(this.creditProfile, partyRoleFVO.creditProfile) &&
        Objects.equals(this.relatedParty, partyRoleFVO.relatedParty) &&
        Objects.equals(this.status, partyRoleFVO.status) &&
        Objects.equals(this.statusReason, partyRoleFVO.statusReason) &&
        Objects.equals(this.validFor, partyRoleFVO.validFor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atType, atBaseType, atSchemaLocation, id, name, description, role, engagedParty, partyRoleSpecification, characteristic, account, agreement, contactMedium, paymentMethod, creditProfile, relatedParty, status, statusReason, validFor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PartyRoleFVO {\n");
    sb.append("    atType: ").append(toIndentedString(atType)).append("\n");
    sb.append("    atBaseType: ").append(toIndentedString(atBaseType)).append("\n");
    sb.append("    atSchemaLocation: ").append(toIndentedString(atSchemaLocation)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    engagedParty: ").append(toIndentedString(engagedParty)).append("\n");
    sb.append("    partyRoleSpecification: ").append(toIndentedString(partyRoleSpecification)).append("\n");
    sb.append("    characteristic: ").append(toIndentedString(characteristic)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    agreement: ").append(toIndentedString(agreement)).append("\n");
    sb.append("    contactMedium: ").append(toIndentedString(contactMedium)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    creditProfile: ").append(toIndentedString(creditProfile)).append("\n");
    sb.append("    relatedParty: ").append(toIndentedString(relatedParty)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusReason: ").append(toIndentedString(statusReason)).append("\n");
    sb.append("    validFor: ").append(toIndentedString(validFor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

