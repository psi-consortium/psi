package com.cgi.space.psi.common.model;

import java.net.URI;
import java.util.Objects;
import com.cgi.space.psi.common.model.PerformanceProfileRef;
import com.cgi.space.psi.common.model.PerformanceProfileValue;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * Defines the reference to Performance Monitoring Profile or defines values from PerformanceProfile type.
 */
@com.fasterxml.jackson.annotation.JsonFilter(com.cgi.space.psi.common.config.DynamicJacksonFilterProvider.NAME)

@Schema(name = "PerformanceProfileRefOrValue", description = "Defines the reference to Performance Monitoring Profile or defines values from PerformanceProfile type.")
@JsonIgnoreProperties(
  value = "@type", // ignore manually set @type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the @type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = PerformanceProfileRef.class, name = "PerformanceProfileRef"),
  @JsonSubTypes.Type(value = PerformanceProfileValue.class, name = "PerformanceProfileValue")
})

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
public class PerformanceProfileRefOrValue {

  @JsonProperty("@type")
  private String atType;

  public PerformanceProfileRefOrValue atType(String atType) {
    this.atType = atType;
    return this;
  }

  /**
   * This field is used as a discriminator to differentiate if an object relates directly to the Performance Profile entity or defines values from the PerformanceProfile type.
   * @return atType
  */
  @NotNull 
  @Schema(name = "@type", description = "This field is used as a discriminator to differentiate if an object relates directly to the Performance Profile entity or defines values from the PerformanceProfile type.", required = true)
  public String getAtType() {
    return atType;
  }

  public void setAtType(String atType) {
    this.atType = atType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PerformanceProfileRefOrValue performanceProfileRefOrValue = (PerformanceProfileRefOrValue) o;
    return Objects.equals(this.atType, performanceProfileRefOrValue.atType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PerformanceProfileRefOrValue {\n");
    sb.append("    atType: ").append(toIndentedString(atType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

