package com.cgi.space.psi.common.model;

import java.net.URI;
import java.util.Objects;
import com.cgi.space.psi.common.model.CharacteristicSpecificationFVO;
import com.cgi.space.psi.common.model.FeatureSpecificationFVO;
import com.cgi.space.psi.common.model.FeatureSpecificationRelationshipFVO;
import com.cgi.space.psi.common.model.PolicyRefFVO;
import com.cgi.space.psi.common.model.TimePeriod;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.ArrayList;
import java.util.List;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * FeatureSpecificationFVO
 */
@com.fasterxml.jackson.annotation.JsonFilter(com.cgi.space.psi.common.config.DynamicJacksonFilterProvider.NAME)

@JsonIgnoreProperties(
  value = "@type", // ignore manually set @type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the @type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = FeatureSpecificationFVO.class, name = "FeatureSpecification")
})

@JsonTypeName("FeatureSpecification_FVO")
@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
public class FeatureSpecificationFVO {

  @JsonProperty("@type")
  private String atType;

  @JsonProperty("@baseType")
  private String atBaseType;

  @JsonProperty("@schemaLocation")
  private String atSchemaLocation;

  @JsonProperty("version")
  private String version;

  @JsonProperty("id")
  private String id;

  @JsonProperty("isBundle")
  private Boolean isBundle;

  @JsonProperty("validFor")
  private TimePeriod validFor;

  @JsonProperty("featureSpecRelationship")
  @Valid
  private List<FeatureSpecificationRelationshipFVO> featureSpecRelationship = null;

  @JsonProperty("policyConstraint")
  @Valid
  private List<PolicyRefFVO> policyConstraint = null;

  @JsonProperty("isEnabled")
  private Boolean isEnabled;

  @JsonProperty("featureSpecCharacteristic")
  @Valid
  private List<CharacteristicSpecificationFVO> featureSpecCharacteristic = null;

  @JsonProperty("name")
  private String name;

  public FeatureSpecificationFVO atType(String atType) {
    this.atType = atType;
    return this;
  }

  /**
   * When sub-classing, this defines the sub-class Extensible name
   * @return atType
  */
  @NotNull 
  @Schema(name = "@type", description = "When sub-classing, this defines the sub-class Extensible name", required = true)
  public String getAtType() {
    return atType;
  }

  public void setAtType(String atType) {
    this.atType = atType;
  }

  public FeatureSpecificationFVO atBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
    return this;
  }

  /**
   * When sub-classing, this defines the super-class
   * @return atBaseType
  */
  
  @Schema(name = "@baseType", description = "When sub-classing, this defines the super-class", required = false)
  public String getAtBaseType() {
    return atBaseType;
  }

  public void setAtBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
  }

  public FeatureSpecificationFVO atSchemaLocation(String atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
    return this;
  }

  /**
   * A URI to a JSON-Schema file that defines additional attributes and relationships
   * @return atSchemaLocation
  */
  
  @Schema(name = "@schemaLocation", description = "A URI to a JSON-Schema file that defines additional attributes and relationships", required = false)
  public String getAtSchemaLocation() {
    return atSchemaLocation;
  }

  public void setAtSchemaLocation(String atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
  }

  public FeatureSpecificationFVO version(String version) {
    this.version = version;
    return this;
  }

  /**
   * Version of the feature specification
   * @return version
  */
  
  @Schema(name = "version", description = "Version of the feature specification", required = false)
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public FeatureSpecificationFVO id(String id) {
    this.id = id;
    return this;
  }

  /**
   * feature identifier
   * @return id
  */
  
  @Schema(name = "id", description = "feature identifier", required = false)
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public FeatureSpecificationFVO isBundle(Boolean isBundle) {
    this.isBundle = isBundle;
    return this;
  }

  /**
   * A flag indicating if this is a feature group (true) or not (false)
   * @return isBundle
  */
  
  @Schema(name = "isBundle", description = "A flag indicating if this is a feature group (true) or not (false)", required = false)
  public Boolean getIsBundle() {
    return isBundle;
  }

  public void setIsBundle(Boolean isBundle) {
    this.isBundle = isBundle;
  }

  public FeatureSpecificationFVO validFor(TimePeriod validFor) {
    this.validFor = validFor;
    return this;
  }

  /**
   * Get validFor
   * @return validFor
  */
  @Valid 
  @Schema(name = "validFor", required = false)
  public TimePeriod getValidFor() {
    return validFor;
  }

  public void setValidFor(TimePeriod validFor) {
    this.validFor = validFor;
  }

  public FeatureSpecificationFVO featureSpecRelationship(List<FeatureSpecificationRelationshipFVO> featureSpecRelationship) {
    this.featureSpecRelationship = featureSpecRelationship;
    return this;
  }

  public FeatureSpecificationFVO addFeatureSpecRelationshipItem(FeatureSpecificationRelationshipFVO featureSpecRelationshipItem) {
    if (this.featureSpecRelationship == null) {
      this.featureSpecRelationship = new ArrayList<>();
    }
    this.featureSpecRelationship.add(featureSpecRelationshipItem);
    return this;
  }

  /**
   * A dependency, exclusivity or aggratation relationship between/among feature specifications.
   * @return featureSpecRelationship
  */
  @Valid 
  @Schema(name = "featureSpecRelationship", description = "A dependency, exclusivity or aggratation relationship between/among feature specifications.", required = false)
  public List<FeatureSpecificationRelationshipFVO> getFeatureSpecRelationship() {
    return featureSpecRelationship;
  }

  public void setFeatureSpecRelationship(List<FeatureSpecificationRelationshipFVO> featureSpecRelationship) {
    this.featureSpecRelationship = featureSpecRelationship;
  }

  public FeatureSpecificationFVO policyConstraint(List<PolicyRefFVO> policyConstraint) {
    this.policyConstraint = policyConstraint;
    return this;
  }

  public FeatureSpecificationFVO addPolicyConstraintItem(PolicyRefFVO policyConstraintItem) {
    if (this.policyConstraint == null) {
      this.policyConstraint = new ArrayList<>();
    }
    this.policyConstraint.add(policyConstraintItem);
    return this;
  }

  /**
   * Reference to mangage a list of feature specification policy constraints
   * @return policyConstraint
  */
  @Valid 
  @Schema(name = "policyConstraint", description = "Reference to mangage a list of feature specification policy constraints", required = false)
  public List<PolicyRefFVO> getPolicyConstraint() {
    return policyConstraint;
  }

  public void setPolicyConstraint(List<PolicyRefFVO> policyConstraint) {
    this.policyConstraint = policyConstraint;
  }

  public FeatureSpecificationFVO isEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
    return this;
  }

  /**
   * A flag indicating if the feature is enabled (true) or not (false)
   * @return isEnabled
  */
  
  @Schema(name = "isEnabled", description = "A flag indicating if the feature is enabled (true) or not (false)", required = false)
  public Boolean getIsEnabled() {
    return isEnabled;
  }

  public void setIsEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }

  public FeatureSpecificationFVO featureSpecCharacteristic(List<CharacteristicSpecificationFVO> featureSpecCharacteristic) {
    this.featureSpecCharacteristic = featureSpecCharacteristic;
    return this;
  }

  public FeatureSpecificationFVO addFeatureSpecCharacteristicItem(CharacteristicSpecificationFVO featureSpecCharacteristicItem) {
    if (this.featureSpecCharacteristic == null) {
      this.featureSpecCharacteristic = new ArrayList<>();
    }
    this.featureSpecCharacteristic.add(featureSpecCharacteristicItem);
    return this;
  }

  /**
   * This is a list of characteristics for a particular feature
   * @return featureSpecCharacteristic
  */
  @Valid 
  @Schema(name = "featureSpecCharacteristic", description = "This is a list of characteristics for a particular feature", required = false)
  public List<CharacteristicSpecificationFVO> getFeatureSpecCharacteristic() {
    return featureSpecCharacteristic;
  }

  public void setFeatureSpecCharacteristic(List<CharacteristicSpecificationFVO> featureSpecCharacteristic) {
    this.featureSpecCharacteristic = featureSpecCharacteristic;
  }

  public FeatureSpecificationFVO name(String name) {
    this.name = name;
    return this;
  }

  /**
   * This is the name for the feature.
   * @return name
  */
  @NotNull 
  @Schema(name = "name", description = "This is the name for the feature.", required = true)
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeatureSpecificationFVO featureSpecificationFVO = (FeatureSpecificationFVO) o;
    return Objects.equals(this.atType, featureSpecificationFVO.atType) &&
        Objects.equals(this.atBaseType, featureSpecificationFVO.atBaseType) &&
        Objects.equals(this.atSchemaLocation, featureSpecificationFVO.atSchemaLocation) &&
        Objects.equals(this.version, featureSpecificationFVO.version) &&
        Objects.equals(this.id, featureSpecificationFVO.id) &&
        Objects.equals(this.isBundle, featureSpecificationFVO.isBundle) &&
        Objects.equals(this.validFor, featureSpecificationFVO.validFor) &&
        Objects.equals(this.featureSpecRelationship, featureSpecificationFVO.featureSpecRelationship) &&
        Objects.equals(this.policyConstraint, featureSpecificationFVO.policyConstraint) &&
        Objects.equals(this.isEnabled, featureSpecificationFVO.isEnabled) &&
        Objects.equals(this.featureSpecCharacteristic, featureSpecificationFVO.featureSpecCharacteristic) &&
        Objects.equals(this.name, featureSpecificationFVO.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atType, atBaseType, atSchemaLocation, version, id, isBundle, validFor, featureSpecRelationship, policyConstraint, isEnabled, featureSpecCharacteristic, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeatureSpecificationFVO {\n");
    sb.append("    atType: ").append(toIndentedString(atType)).append("\n");
    sb.append("    atBaseType: ").append(toIndentedString(atBaseType)).append("\n");
    sb.append("    atSchemaLocation: ").append(toIndentedString(atSchemaLocation)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isBundle: ").append(toIndentedString(isBundle)).append("\n");
    sb.append("    validFor: ").append(toIndentedString(validFor)).append("\n");
    sb.append("    featureSpecRelationship: ").append(toIndentedString(featureSpecRelationship)).append("\n");
    sb.append("    policyConstraint: ").append(toIndentedString(policyConstraint)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("    featureSpecCharacteristic: ").append(toIndentedString(featureSpecCharacteristic)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

