package com.cgi.space.psi.common.model;

import java.net.URI;
import java.util.Objects;
import com.cgi.space.psi.common.model.AgreementItemRefMVO;
import com.cgi.space.psi.common.model.BillingAccountRefMVO;
import com.cgi.space.psi.common.model.CharacteristicMVO;
import com.cgi.space.psi.common.model.IntentRefOrValueMVO;
import com.cgi.space.psi.common.model.ProductMVO;
import com.cgi.space.psi.common.model.ProductOfferingRefMVO;
import com.cgi.space.psi.common.model.ProductPriceMVO;
import com.cgi.space.psi.common.model.ProductRefOrValueMVO;
import com.cgi.space.psi.common.model.ProductRelationshipMVO;
import com.cgi.space.psi.common.model.ProductSpecificationRefMVO;
import com.cgi.space.psi.common.model.ProductStatusType;
import com.cgi.space.psi.common.model.ProductTermMVO;
import com.cgi.space.psi.common.model.RelatedOrderItemMVO;
import com.cgi.space.psi.common.model.RelatedPartyOrPartyRoleMVO;
import com.cgi.space.psi.common.model.RelatedPlaceRefOrValueMVO;
import com.cgi.space.psi.common.model.ResourceRefMVO;
import com.cgi.space.psi.common.model.ServiceRefMVO;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.springframework.format.annotation.DateTimeFormat;
import java.net.URI;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * ProductMVO
 */
@com.fasterxml.jackson.annotation.JsonFilter(com.cgi.space.psi.common.config.DynamicJacksonFilterProvider.NAME)

@JsonIgnoreProperties(
  value = "@type", // ignore manually set @type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the @type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = ProductMVO.class, name = "Product")
})

@JsonTypeName("Product_MVO")
@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
public class ProductMVO implements ProductRefOrValueMVO {

  @JsonProperty("@type")
  private String atType;

  @JsonProperty("@baseType")
  private String atBaseType;

  @JsonProperty("@schemaLocation")
  private String atSchemaLocation;

  @JsonProperty("agreementItem")
  @Valid
  private List<AgreementItemRefMVO> agreementItem = null;

  @JsonProperty("billingAccount")
  private BillingAccountRefMVO billingAccount;

  @JsonProperty("description")
  private String description;

  @JsonProperty("isBundle")
  private Boolean isBundle;

  @JsonProperty("isCustomerVisible")
  private Boolean isCustomerVisible;

  @JsonProperty("name")
  private String name;

  @JsonProperty("orderDate")
  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private OffsetDateTime orderDate;

  @JsonProperty("productCharacteristic")
  @Valid
  private List<CharacteristicMVO> productCharacteristic = null;

  @JsonProperty("productOffering")
  private ProductOfferingRefMVO productOffering;

  @JsonProperty("productOrderItem")
  @Valid
  private List<RelatedOrderItemMVO> productOrderItem = null;

  @JsonProperty("product")
  @Valid
  private List<ProductRefOrValueMVO> product = null;

  @JsonProperty("productPrice")
  @Valid
  private List<ProductPriceMVO> productPrice = null;

  @JsonProperty("productRelationship")
  @Valid
  private List<ProductRelationshipMVO> productRelationship = null;

  @JsonProperty("productSerialNumber")
  private String productSerialNumber;

  @JsonProperty("productSpecification")
  private ProductSpecificationRefMVO productSpecification;

  @JsonProperty("productTerm")
  @Valid
  private List<ProductTermMVO> productTerm = null;

  @JsonProperty("realizingResource")
  @Valid
  private List<ResourceRefMVO> realizingResource = null;

  @JsonProperty("realizingService")
  @Valid
  private List<ServiceRefMVO> realizingService = null;

  @JsonProperty("relatedParty")
  @Valid
  private List<RelatedPartyOrPartyRoleMVO> relatedParty = null;

  @JsonProperty("place")
  @Valid
  private List<RelatedPlaceRefOrValueMVO> place = null;

  @JsonProperty("startDate")
  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private OffsetDateTime startDate;

  @JsonProperty("status")
  private ProductStatusType status;

  @JsonProperty("terminationDate")
  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private OffsetDateTime terminationDate;

  @JsonProperty("intent")
  private IntentRefOrValueMVO intent;

  public ProductMVO atType(String atType) {
    this.atType = atType;
    return this;
  }

  /**
   * When sub-classing, this defines the sub-class Extensible name
   * @return atType
  */
  @NotNull 
  @Schema(name = "@type", description = "When sub-classing, this defines the sub-class Extensible name", required = true)
  public String getAtType() {
    return atType;
  }

  public void setAtType(String atType) {
    this.atType = atType;
  }

  public ProductMVO atBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
    return this;
  }

  /**
   * When sub-classing, this defines the super-class
   * @return atBaseType
  */
  
  @Schema(name = "@baseType", description = "When sub-classing, this defines the super-class", required = false)
  public String getAtBaseType() {
    return atBaseType;
  }

  public void setAtBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
  }

  public ProductMVO atSchemaLocation(String atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
    return this;
  }

  /**
   * A URI to a JSON-Schema file that defines additional attributes and relationships
   * @return atSchemaLocation
  */
  
  @Schema(name = "@schemaLocation", description = "A URI to a JSON-Schema file that defines additional attributes and relationships", required = false)
  public String getAtSchemaLocation() {
    return atSchemaLocation;
  }

  public void setAtSchemaLocation(String atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
  }

  public ProductMVO agreementItem(List<AgreementItemRefMVO> agreementItem) {
    this.agreementItem = agreementItem;
    return this;
  }

  public ProductMVO addAgreementItemItem(AgreementItemRefMVO agreementItemItem) {
    if (this.agreementItem == null) {
      this.agreementItem = new ArrayList<>();
    }
    this.agreementItem.add(agreementItemItem);
    return this;
  }

  /**
   * Get agreementItem
   * @return agreementItem
  */
  @Valid 
  @Schema(name = "agreementItem", required = false)
  public List<AgreementItemRefMVO> getAgreementItem() {
    return agreementItem;
  }

  public void setAgreementItem(List<AgreementItemRefMVO> agreementItem) {
    this.agreementItem = agreementItem;
  }

  public ProductMVO billingAccount(BillingAccountRefMVO billingAccount) {
    this.billingAccount = billingAccount;
    return this;
  }

  /**
   * Get billingAccount
   * @return billingAccount
  */
  @Valid 
  @Schema(name = "billingAccount", required = false)
  public BillingAccountRefMVO getBillingAccount() {
    return billingAccount;
  }

  public void setBillingAccount(BillingAccountRefMVO billingAccount) {
    this.billingAccount = billingAccount;
  }

  public ProductMVO description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Is the description of the product. It could be copied from the description of the Product Offering.
   * @return description
  */
  
  @Schema(name = "description", description = "Is the description of the product. It could be copied from the description of the Product Offering.", required = false)
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ProductMVO isBundle(Boolean isBundle) {
    this.isBundle = isBundle;
    return this;
  }

  /**
   * If true, the product is a ProductBundle which is an instantiation of a BundledProductOffering. If false, the product is a ProductComponent which is an instantiation of a SimpleProductOffering.
   * @return isBundle
  */
  
  @Schema(name = "isBundle", description = "If true, the product is a ProductBundle which is an instantiation of a BundledProductOffering. If false, the product is a ProductComponent which is an instantiation of a SimpleProductOffering.", required = false)
  public Boolean getIsBundle() {
    return isBundle;
  }

  public void setIsBundle(Boolean isBundle) {
    this.isBundle = isBundle;
  }

  public ProductMVO isCustomerVisible(Boolean isCustomerVisible) {
    this.isCustomerVisible = isCustomerVisible;
    return this;
  }

  /**
   * If true, the product is visible by the customer.
   * @return isCustomerVisible
  */
  
  @Schema(name = "isCustomerVisible", description = "If true, the product is visible by the customer.", required = false)
  public Boolean getIsCustomerVisible() {
    return isCustomerVisible;
  }

  public void setIsCustomerVisible(Boolean isCustomerVisible) {
    this.isCustomerVisible = isCustomerVisible;
  }

  public ProductMVO name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the product. It could be the same as the name of the product offering
   * @return name
  */
  
  @Schema(name = "name", description = "Name of the product. It could be the same as the name of the product offering", required = false)
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ProductMVO orderDate(OffsetDateTime orderDate) {
    this.orderDate = orderDate;
    return this;
  }

  /**
   * Is the date when the product was ordered
   * @return orderDate
  */
  @Valid 
  @Schema(name = "orderDate", description = "Is the date when the product was ordered", required = false)
  public OffsetDateTime getOrderDate() {
    return orderDate;
  }

  public void setOrderDate(OffsetDateTime orderDate) {
    this.orderDate = orderDate;
  }

  public ProductMVO productCharacteristic(List<CharacteristicMVO> productCharacteristic) {
    this.productCharacteristic = productCharacteristic;
    return this;
  }

  public ProductMVO addProductCharacteristicItem(CharacteristicMVO productCharacteristicItem) {
    if (this.productCharacteristic == null) {
      this.productCharacteristic = new ArrayList<>();
    }
    this.productCharacteristic.add(productCharacteristicItem);
    return this;
  }

  /**
   * Get productCharacteristic
   * @return productCharacteristic
  */
  @Valid 
  @Schema(name = "productCharacteristic", required = false)
  public List<CharacteristicMVO> getProductCharacteristic() {
    return productCharacteristic;
  }

  public void setProductCharacteristic(List<CharacteristicMVO> productCharacteristic) {
    this.productCharacteristic = productCharacteristic;
  }

  public ProductMVO productOffering(ProductOfferingRefMVO productOffering) {
    this.productOffering = productOffering;
    return this;
  }

  /**
   * Get productOffering
   * @return productOffering
  */
  @Valid 
  @Schema(name = "productOffering", required = false)
  public ProductOfferingRefMVO getProductOffering() {
    return productOffering;
  }

  public void setProductOffering(ProductOfferingRefMVO productOffering) {
    this.productOffering = productOffering;
  }

  public ProductMVO productOrderItem(List<RelatedOrderItemMVO> productOrderItem) {
    this.productOrderItem = productOrderItem;
    return this;
  }

  public ProductMVO addProductOrderItemItem(RelatedOrderItemMVO productOrderItemItem) {
    if (this.productOrderItem == null) {
      this.productOrderItem = new ArrayList<>();
    }
    this.productOrderItem.add(productOrderItemItem);
    return this;
  }

  /**
   * Get productOrderItem
   * @return productOrderItem
  */
  @Valid 
  @Schema(name = "productOrderItem", required = false)
  public List<RelatedOrderItemMVO> getProductOrderItem() {
    return productOrderItem;
  }

  public void setProductOrderItem(List<RelatedOrderItemMVO> productOrderItem) {
    this.productOrderItem = productOrderItem;
  }

  public ProductMVO product(List<ProductRefOrValueMVO> product) {
    this.product = product;
    return this;
  }

  public ProductMVO addProductItem(ProductRefOrValueMVO productItem) {
    if (this.product == null) {
      this.product = new ArrayList<>();
    }
    this.product.add(productItem);
    return this;
  }

  /**
   * Get product
   * @return product
  */
  @Valid 
  @Schema(name = "product", required = false)
  public List<ProductRefOrValueMVO> getProduct() {
    return product;
  }

  public void setProduct(List<ProductRefOrValueMVO> product) {
    this.product = product;
  }

  public ProductMVO productPrice(List<ProductPriceMVO> productPrice) {
    this.productPrice = productPrice;
    return this;
  }

  public ProductMVO addProductPriceItem(ProductPriceMVO productPriceItem) {
    if (this.productPrice == null) {
      this.productPrice = new ArrayList<>();
    }
    this.productPrice.add(productPriceItem);
    return this;
  }

  /**
   * Get productPrice
   * @return productPrice
  */
  @Valid 
  @Schema(name = "productPrice", required = false)
  public List<ProductPriceMVO> getProductPrice() {
    return productPrice;
  }

  public void setProductPrice(List<ProductPriceMVO> productPrice) {
    this.productPrice = productPrice;
  }

  public ProductMVO productRelationship(List<ProductRelationshipMVO> productRelationship) {
    this.productRelationship = productRelationship;
    return this;
  }

  public ProductMVO addProductRelationshipItem(ProductRelationshipMVO productRelationshipItem) {
    if (this.productRelationship == null) {
      this.productRelationship = new ArrayList<>();
    }
    this.productRelationship.add(productRelationshipItem);
    return this;
  }

  /**
   * Get productRelationship
   * @return productRelationship
  */
  @Valid 
  @Schema(name = "productRelationship", required = false)
  public List<ProductRelationshipMVO> getProductRelationship() {
    return productRelationship;
  }

  public void setProductRelationship(List<ProductRelationshipMVO> productRelationship) {
    this.productRelationship = productRelationship;
  }

  public ProductMVO productSerialNumber(String productSerialNumber) {
    this.productSerialNumber = productSerialNumber;
    return this;
  }

  /**
   * Is the serial number for the product. This is typically applicable to tangible products e.g. Broadband Router.
   * @return productSerialNumber
  */
  
  @Schema(name = "productSerialNumber", description = "Is the serial number for the product. This is typically applicable to tangible products e.g. Broadband Router.", required = false)
  public String getProductSerialNumber() {
    return productSerialNumber;
  }

  public void setProductSerialNumber(String productSerialNumber) {
    this.productSerialNumber = productSerialNumber;
  }

  public ProductMVO productSpecification(ProductSpecificationRefMVO productSpecification) {
    this.productSpecification = productSpecification;
    return this;
  }

  /**
   * Get productSpecification
   * @return productSpecification
  */
  @Valid 
  @Schema(name = "productSpecification", required = false)
  public ProductSpecificationRefMVO getProductSpecification() {
    return productSpecification;
  }

  public void setProductSpecification(ProductSpecificationRefMVO productSpecification) {
    this.productSpecification = productSpecification;
  }

  public ProductMVO productTerm(List<ProductTermMVO> productTerm) {
    this.productTerm = productTerm;
    return this;
  }

  public ProductMVO addProductTermItem(ProductTermMVO productTermItem) {
    if (this.productTerm == null) {
      this.productTerm = new ArrayList<>();
    }
    this.productTerm.add(productTermItem);
    return this;
  }

  /**
   * Get productTerm
   * @return productTerm
  */
  @Valid 
  @Schema(name = "productTerm", required = false)
  public List<ProductTermMVO> getProductTerm() {
    return productTerm;
  }

  public void setProductTerm(List<ProductTermMVO> productTerm) {
    this.productTerm = productTerm;
  }

  public ProductMVO realizingResource(List<ResourceRefMVO> realizingResource) {
    this.realizingResource = realizingResource;
    return this;
  }

  public ProductMVO addRealizingResourceItem(ResourceRefMVO realizingResourceItem) {
    if (this.realizingResource == null) {
      this.realizingResource = new ArrayList<>();
    }
    this.realizingResource.add(realizingResourceItem);
    return this;
  }

  /**
   * Get realizingResource
   * @return realizingResource
  */
  @Valid 
  @Schema(name = "realizingResource", required = false)
  public List<ResourceRefMVO> getRealizingResource() {
    return realizingResource;
  }

  public void setRealizingResource(List<ResourceRefMVO> realizingResource) {
    this.realizingResource = realizingResource;
  }

  public ProductMVO realizingService(List<ServiceRefMVO> realizingService) {
    this.realizingService = realizingService;
    return this;
  }

  public ProductMVO addRealizingServiceItem(ServiceRefMVO realizingServiceItem) {
    if (this.realizingService == null) {
      this.realizingService = new ArrayList<>();
    }
    this.realizingService.add(realizingServiceItem);
    return this;
  }

  /**
   * Get realizingService
   * @return realizingService
  */
  @Valid 
  @Schema(name = "realizingService", required = false)
  public List<ServiceRefMVO> getRealizingService() {
    return realizingService;
  }

  public void setRealizingService(List<ServiceRefMVO> realizingService) {
    this.realizingService = realizingService;
  }

  public ProductMVO relatedParty(List<RelatedPartyOrPartyRoleMVO> relatedParty) {
    this.relatedParty = relatedParty;
    return this;
  }

  public ProductMVO addRelatedPartyItem(RelatedPartyOrPartyRoleMVO relatedPartyItem) {
    if (this.relatedParty == null) {
      this.relatedParty = new ArrayList<>();
    }
    this.relatedParty.add(relatedPartyItem);
    return this;
  }

  /**
   * Get relatedParty
   * @return relatedParty
  */
  @Valid 
  @Schema(name = "relatedParty", required = false)
  public List<RelatedPartyOrPartyRoleMVO> getRelatedParty() {
    return relatedParty;
  }

  public void setRelatedParty(List<RelatedPartyOrPartyRoleMVO> relatedParty) {
    this.relatedParty = relatedParty;
  }

  public ProductMVO place(List<RelatedPlaceRefOrValueMVO> place) {
    this.place = place;
    return this;
  }

  public ProductMVO addPlaceItem(RelatedPlaceRefOrValueMVO placeItem) {
    if (this.place == null) {
      this.place = new ArrayList<>();
    }
    this.place.add(placeItem);
    return this;
  }

  /**
   * Get place
   * @return place
  */
  @Valid 
  @Schema(name = "place", required = false)
  public List<RelatedPlaceRefOrValueMVO> getPlace() {
    return place;
  }

  public void setPlace(List<RelatedPlaceRefOrValueMVO> place) {
    this.place = place;
  }

  public ProductMVO startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Is the date from which the product starts
   * @return startDate
  */
  @Valid 
  @Schema(name = "startDate", description = "Is the date from which the product starts", required = false)
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public ProductMVO status(ProductStatusType status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
  */
  @Valid 
  @Schema(name = "status", required = false)
  public ProductStatusType getStatus() {
    return status;
  }

  public void setStatus(ProductStatusType status) {
    this.status = status;
  }

  public ProductMVO terminationDate(OffsetDateTime terminationDate) {
    this.terminationDate = terminationDate;
    return this;
  }

  /**
   * Is the date when the product was terminated
   * @return terminationDate
  */
  @Valid 
  @Schema(name = "terminationDate", description = "Is the date when the product was terminated", required = false)
  public OffsetDateTime getTerminationDate() {
    return terminationDate;
  }

  public void setTerminationDate(OffsetDateTime terminationDate) {
    this.terminationDate = terminationDate;
  }

  public ProductMVO intent(IntentRefOrValueMVO intent) {
    this.intent = intent;
    return this;
  }

  /**
   * Get intent
   * @return intent
  */
  @Valid 
  @Schema(name = "intent", required = false)
  public IntentRefOrValueMVO getIntent() {
    return intent;
  }

  public void setIntent(IntentRefOrValueMVO intent) {
    this.intent = intent;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductMVO productMVO = (ProductMVO) o;
    return Objects.equals(this.atType, productMVO.atType) &&
        Objects.equals(this.atBaseType, productMVO.atBaseType) &&
        Objects.equals(this.atSchemaLocation, productMVO.atSchemaLocation) &&
        Objects.equals(this.agreementItem, productMVO.agreementItem) &&
        Objects.equals(this.billingAccount, productMVO.billingAccount) &&
        Objects.equals(this.description, productMVO.description) &&
        Objects.equals(this.isBundle, productMVO.isBundle) &&
        Objects.equals(this.isCustomerVisible, productMVO.isCustomerVisible) &&
        Objects.equals(this.name, productMVO.name) &&
        Objects.equals(this.orderDate, productMVO.orderDate) &&
        Objects.equals(this.productCharacteristic, productMVO.productCharacteristic) &&
        Objects.equals(this.productOffering, productMVO.productOffering) &&
        Objects.equals(this.productOrderItem, productMVO.productOrderItem) &&
        Objects.equals(this.product, productMVO.product) &&
        Objects.equals(this.productPrice, productMVO.productPrice) &&
        Objects.equals(this.productRelationship, productMVO.productRelationship) &&
        Objects.equals(this.productSerialNumber, productMVO.productSerialNumber) &&
        Objects.equals(this.productSpecification, productMVO.productSpecification) &&
        Objects.equals(this.productTerm, productMVO.productTerm) &&
        Objects.equals(this.realizingResource, productMVO.realizingResource) &&
        Objects.equals(this.realizingService, productMVO.realizingService) &&
        Objects.equals(this.relatedParty, productMVO.relatedParty) &&
        Objects.equals(this.place, productMVO.place) &&
        Objects.equals(this.startDate, productMVO.startDate) &&
        Objects.equals(this.status, productMVO.status) &&
        Objects.equals(this.terminationDate, productMVO.terminationDate) &&
        Objects.equals(this.intent, productMVO.intent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atType, atBaseType, atSchemaLocation, agreementItem, billingAccount, description, isBundle, isCustomerVisible, name, orderDate, productCharacteristic, productOffering, productOrderItem, product, productPrice, productRelationship, productSerialNumber, productSpecification, productTerm, realizingResource, realizingService, relatedParty, place, startDate, status, terminationDate, intent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductMVO {\n");
    sb.append("    atType: ").append(toIndentedString(atType)).append("\n");
    sb.append("    atBaseType: ").append(toIndentedString(atBaseType)).append("\n");
    sb.append("    atSchemaLocation: ").append(toIndentedString(atSchemaLocation)).append("\n");
    sb.append("    agreementItem: ").append(toIndentedString(agreementItem)).append("\n");
    sb.append("    billingAccount: ").append(toIndentedString(billingAccount)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isBundle: ").append(toIndentedString(isBundle)).append("\n");
    sb.append("    isCustomerVisible: ").append(toIndentedString(isCustomerVisible)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    orderDate: ").append(toIndentedString(orderDate)).append("\n");
    sb.append("    productCharacteristic: ").append(toIndentedString(productCharacteristic)).append("\n");
    sb.append("    productOffering: ").append(toIndentedString(productOffering)).append("\n");
    sb.append("    productOrderItem: ").append(toIndentedString(productOrderItem)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    productPrice: ").append(toIndentedString(productPrice)).append("\n");
    sb.append("    productRelationship: ").append(toIndentedString(productRelationship)).append("\n");
    sb.append("    productSerialNumber: ").append(toIndentedString(productSerialNumber)).append("\n");
    sb.append("    productSpecification: ").append(toIndentedString(productSpecification)).append("\n");
    sb.append("    productTerm: ").append(toIndentedString(productTerm)).append("\n");
    sb.append("    realizingResource: ").append(toIndentedString(realizingResource)).append("\n");
    sb.append("    realizingService: ").append(toIndentedString(realizingService)).append("\n");
    sb.append("    relatedParty: ").append(toIndentedString(relatedParty)).append("\n");
    sb.append("    place: ").append(toIndentedString(place)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    terminationDate: ").append(toIndentedString(terminationDate)).append("\n");
    sb.append("    intent: ").append(toIndentedString(intent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

