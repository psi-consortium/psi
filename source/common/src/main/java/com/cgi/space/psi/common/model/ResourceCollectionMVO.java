package com.cgi.space.psi.common.model;

import java.net.URI;
import java.util.Objects;
import com.cgi.space.psi.common.model.AttachmentOrDocumentRef;
import com.cgi.space.psi.common.model.CharacteristicMVO;
import com.cgi.space.psi.common.model.ExternalIdentifierMVO;
import com.cgi.space.psi.common.model.FeatureMVO;
import com.cgi.space.psi.common.model.IntentRefMVO;
import com.cgi.space.psi.common.model.LogicalResourceMVO;
import com.cgi.space.psi.common.model.NoteMVO;
import com.cgi.space.psi.common.model.PhysicalResourceMVO;
import com.cgi.space.psi.common.model.RelatedPartyRefOrPartyRoleRefMVO;
import com.cgi.space.psi.common.model.RelatedPlaceRefMVO;
import com.cgi.space.psi.common.model.RelatedResourceOrderItemMVO;
import com.cgi.space.psi.common.model.ResourceAdministrativeStateType;
import com.cgi.space.psi.common.model.ResourceCollectionMVO;
import com.cgi.space.psi.common.model.ResourceMVO;
import com.cgi.space.psi.common.model.ResourceOperationalStateType;
import com.cgi.space.psi.common.model.ResourceRefOrValueMVO;
import com.cgi.space.psi.common.model.ResourceRelationshipMVO;
import com.cgi.space.psi.common.model.ResourceSpecificationRefMVO;
import com.cgi.space.psi.common.model.ResourceStatusType;
import com.cgi.space.psi.common.model.ResourceUsageStateType;
import com.cgi.space.psi.common.model.TimePeriod;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.springframework.format.annotation.DateTimeFormat;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * ResourceCollectionMVO
 */
@com.fasterxml.jackson.annotation.JsonFilter(com.cgi.space.psi.common.config.DynamicJacksonFilterProvider.NAME)

@JsonIgnoreProperties(
  value = "@type", // ignore manually set @type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the @type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = LogicalResourceMVO.class, name = "LogicalResource"),
  @JsonSubTypes.Type(value = PhysicalResourceMVO.class, name = "PhysicalResource"),
  @JsonSubTypes.Type(value = ResourceMVO.class, name = "Resource"),
  @JsonSubTypes.Type(value = ResourceCollectionMVO.class, name = "ResourceCollection")
})

@JsonTypeName("ResourceCollection_MVO")
@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
public class ResourceCollectionMVO extends ResourceMVO {

  @JsonProperty("containedResource")
  @Valid
  private List<ResourceRefOrValueMVO> containedResource = null;

  public ResourceCollectionMVO containedResource(List<ResourceRefOrValueMVO> containedResource) {
    this.containedResource = containedResource;
    return this;
  }

  public ResourceCollectionMVO addContainedResourceItem(ResourceRefOrValueMVO containedResourceItem) {
    if (this.containedResource == null) {
      this.containedResource = new ArrayList<>();
    }
    this.containedResource.add(containedResourceItem);
    return this;
  }

  /**
   * The Resource members of the collection.
   * @return containedResource
  */
  @Valid 
  @Schema(name = "containedResource", description = "The Resource members of the collection.", required = false)
  public List<ResourceRefOrValueMVO> getContainedResource() {
    return containedResource;
  }

  public void setContainedResource(List<ResourceRefOrValueMVO> containedResource) {
    this.containedResource = containedResource;
  }

  public ResourceCollectionMVO atType(String atType) {
    super.setAtType(atType);
    return this;
  }

  public ResourceCollectionMVO atBaseType(String atBaseType) {
    super.setAtBaseType(atBaseType);
    return this;
  }

  public ResourceCollectionMVO atSchemaLocation(String atSchemaLocation) {
    super.setAtSchemaLocation(atSchemaLocation);
    return this;
  }

  public ResourceCollectionMVO href(URI href) {
    super.setHref(href);
    return this;
  }

  public ResourceCollectionMVO id(String id) {
    super.setId(id);
    return this;
  }

  public ResourceCollectionMVO category(String category) {
    super.setCategory(category);
    return this;
  }

  public ResourceCollectionMVO description(String description) {
    super.setDescription(description);
    return this;
  }

  public ResourceCollectionMVO name(String name) {
    super.setName(name);
    return this;
  }

  public ResourceCollectionMVO endOperatingDate(OffsetDateTime endOperatingDate) {
    super.setEndOperatingDate(endOperatingDate);
    return this;
  }

  public ResourceCollectionMVO administrativeState(ResourceAdministrativeStateType administrativeState) {
    super.setAdministrativeState(administrativeState);
    return this;
  }

  public ResourceCollectionMVO operationalState(ResourceOperationalStateType operationalState) {
    super.setOperationalState(operationalState);
    return this;
  }

  public ResourceCollectionMVO resourceStatus(ResourceStatusType resourceStatus) {
    super.setResourceStatus(resourceStatus);
    return this;
  }

  public ResourceCollectionMVO usageState(ResourceUsageStateType usageState) {
    super.setUsageState(usageState);
    return this;
  }

  public ResourceCollectionMVO validFor(TimePeriod validFor) {
    super.setValidFor(validFor);
    return this;
  }

  public ResourceCollectionMVO note(List<NoteMVO> note) {
    super.setNote(note);
    return this;
  }

  public ResourceCollectionMVO addNoteItem(NoteMVO noteItem) {
    super.addNoteItem(noteItem);
    return this;
  }

  public ResourceCollectionMVO resourceOrderItem(List<RelatedResourceOrderItemMVO> resourceOrderItem) {
    super.setResourceOrderItem(resourceOrderItem);
    return this;
  }

  public ResourceCollectionMVO addResourceOrderItemItem(RelatedResourceOrderItemMVO resourceOrderItemItem) {
    super.addResourceOrderItemItem(resourceOrderItemItem);
    return this;
  }

  public ResourceCollectionMVO place(List<RelatedPlaceRefMVO> place) {
    super.setPlace(place);
    return this;
  }

  public ResourceCollectionMVO addPlaceItem(RelatedPlaceRefMVO placeItem) {
    super.addPlaceItem(placeItem);
    return this;
  }

  public ResourceCollectionMVO relatedParty(List<RelatedPartyRefOrPartyRoleRefMVO> relatedParty) {
    super.setRelatedParty(relatedParty);
    return this;
  }

  public ResourceCollectionMVO addRelatedPartyItem(RelatedPartyRefOrPartyRoleRefMVO relatedPartyItem) {
    super.addRelatedPartyItem(relatedPartyItem);
    return this;
  }

  public ResourceCollectionMVO supportingResource(List<ResourceRefOrValueMVO> supportingResource) {
    super.setSupportingResource(supportingResource);
    return this;
  }

  public ResourceCollectionMVO addSupportingResourceItem(ResourceRefOrValueMVO supportingResourceItem) {
    super.addSupportingResourceItem(supportingResourceItem);
    return this;
  }

  public ResourceCollectionMVO resourceRelationship(List<ResourceRelationshipMVO> resourceRelationship) {
    super.setResourceRelationship(resourceRelationship);
    return this;
  }

  public ResourceCollectionMVO addResourceRelationshipItem(ResourceRelationshipMVO resourceRelationshipItem) {
    super.addResourceRelationshipItem(resourceRelationshipItem);
    return this;
  }

  public ResourceCollectionMVO resourceCharacteristic(List<CharacteristicMVO> resourceCharacteristic) {
    super.setResourceCharacteristic(resourceCharacteristic);
    return this;
  }

  public ResourceCollectionMVO addResourceCharacteristicItem(CharacteristicMVO resourceCharacteristicItem) {
    super.addResourceCharacteristicItem(resourceCharacteristicItem);
    return this;
  }

  public ResourceCollectionMVO attachment(List<AttachmentOrDocumentRef> attachment) {
    super.setAttachment(attachment);
    return this;
  }

  public ResourceCollectionMVO addAttachmentItem(AttachmentOrDocumentRef attachmentItem) {
    super.addAttachmentItem(attachmentItem);
    return this;
  }

  public ResourceCollectionMVO resourceSpecification(ResourceSpecificationRefMVO resourceSpecification) {
    super.setResourceSpecification(resourceSpecification);
    return this;
  }

  public ResourceCollectionMVO startOperatingDate(OffsetDateTime startOperatingDate) {
    super.setStartOperatingDate(startOperatingDate);
    return this;
  }

  public ResourceCollectionMVO resourceVersion(String resourceVersion) {
    super.setResourceVersion(resourceVersion);
    return this;
  }

  public ResourceCollectionMVO activationFeature(List<FeatureMVO> activationFeature) {
    super.setActivationFeature(activationFeature);
    return this;
  }

  public ResourceCollectionMVO addActivationFeatureItem(FeatureMVO activationFeatureItem) {
    super.addActivationFeatureItem(activationFeatureItem);
    return this;
  }

  public ResourceCollectionMVO intent(IntentRefMVO intent) {
    super.setIntent(intent);
    return this;
  }

  public ResourceCollectionMVO externalIdentifier(List<ExternalIdentifierMVO> externalIdentifier) {
    super.setExternalIdentifier(externalIdentifier);
    return this;
  }

  public ResourceCollectionMVO addExternalIdentifierItem(ExternalIdentifierMVO externalIdentifierItem) {
    super.addExternalIdentifierItem(externalIdentifierItem);
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceCollectionMVO resourceCollectionMVO = (ResourceCollectionMVO) o;
    return Objects.equals(this.containedResource, resourceCollectionMVO.containedResource) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(containedResource, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceCollectionMVO {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    containedResource: ").append(toIndentedString(containedResource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

