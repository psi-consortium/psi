package com.cgi.space.psi.common.model;

import java.net.URI;
import java.util.Objects;
import com.cgi.space.psi.common.model.MilestoneMVO;
import com.cgi.space.psi.common.model.ProductOrderMilestoneMVO;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import org.springframework.format.annotation.DateTimeFormat;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * MilestoneMVO
 */
@com.fasterxml.jackson.annotation.JsonFilter(com.cgi.space.psi.common.config.DynamicJacksonFilterProvider.NAME)

@JsonIgnoreProperties(
  value = "@type", // ignore manually set @type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the @type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = MilestoneMVO.class, name = "Milestone"),
  @JsonSubTypes.Type(value = ProductOrderMilestoneMVO.class, name = "ProductOrderMilestone"),
  @JsonSubTypes.Type(value = ProductOrderMilestoneMVO.class, name = "ProductOrderMilestone_MVO")
})

@JsonTypeName("Milestone_MVO")
@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
public class MilestoneMVO {

  @JsonProperty("@type")
  private String atType;

  @JsonProperty("@baseType")
  private String atBaseType;

  @JsonProperty("@schemaLocation")
  private String atSchemaLocation;

  @JsonProperty("description")
  private String description;

  @JsonProperty("id")
  private String id;

  /**
   * The milestone status
   */
  public enum StatusEnum {
    YET_TO_REACH("Yet-To-Reach"),
    
    COMPLETED("Completed"),
    
    VIOLATED("Violated");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  @JsonProperty("status")
  private StatusEnum status;

  @JsonProperty("milestoneDate")
  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private OffsetDateTime milestoneDate;

  @JsonProperty("name")
  private String name;

  @JsonProperty("message")
  private String message;

  public MilestoneMVO atType(String atType) {
    this.atType = atType;
    return this;
  }

  /**
   * When sub-classing, this defines the sub-class Extensible name
   * @return atType
  */
  @NotNull 
  @Schema(name = "@type", description = "When sub-classing, this defines the sub-class Extensible name", required = true)
  public String getAtType() {
    return atType;
  }

  public void setAtType(String atType) {
    this.atType = atType;
  }

  public MilestoneMVO atBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
    return this;
  }

  /**
   * When sub-classing, this defines the super-class
   * @return atBaseType
  */
  
  @Schema(name = "@baseType", description = "When sub-classing, this defines the super-class", required = false)
  public String getAtBaseType() {
    return atBaseType;
  }

  public void setAtBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
  }

  public MilestoneMVO atSchemaLocation(String atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
    return this;
  }

  /**
   * A URI to a JSON-Schema file that defines additional attributes and relationships
   * @return atSchemaLocation
  */
  
  @Schema(name = "@schemaLocation", description = "A URI to a JSON-Schema file that defines additional attributes and relationships", required = false)
  public String getAtSchemaLocation() {
    return atSchemaLocation;
  }

  public void setAtSchemaLocation(String atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
  }

  public MilestoneMVO description(String description) {
    this.description = description;
    return this;
  }

  /**
   * free-text description of the Milestone
   * @return description
  */
  
  @Schema(name = "description", description = "free-text description of the Milestone", required = false)
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public MilestoneMVO id(String id) {
    this.id = id;
    return this;
  }

  /**
   * identifier of the Milestone
   * @return id
  */
  
  @Schema(name = "id", description = "identifier of the Milestone", required = false)
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public MilestoneMVO status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * The milestone status
   * @return status
  */
  
  @Schema(name = "status", description = "The milestone status", required = false)
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public MilestoneMVO milestoneDate(OffsetDateTime milestoneDate) {
    this.milestoneDate = milestoneDate;
    return this;
  }

  /**
   * A date time( DateTime). The date that the milestone happens
   * @return milestoneDate
  */
  @Valid 
  @Schema(name = "milestoneDate", description = "A date time( DateTime). The date that the milestone happens", required = false)
  public OffsetDateTime getMilestoneDate() {
    return milestoneDate;
  }

  public void setMilestoneDate(OffsetDateTime milestoneDate) {
    this.milestoneDate = milestoneDate;
  }

  public MilestoneMVO name(String name) {
    this.name = name;
    return this;
  }

  /**
   * A string used to give a name to the milestone
   * @return name
  */
  
  @Schema(name = "name", description = "A string used to give a name to the milestone", required = false)
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public MilestoneMVO message(String message) {
    this.message = message;
    return this;
  }

  /**
   * A string represents the message of the milestone
   * @return message
  */
  
  @Schema(name = "message", description = "A string represents the message of the milestone", required = false)
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MilestoneMVO milestoneMVO = (MilestoneMVO) o;
    return Objects.equals(this.atType, milestoneMVO.atType) &&
        Objects.equals(this.atBaseType, milestoneMVO.atBaseType) &&
        Objects.equals(this.atSchemaLocation, milestoneMVO.atSchemaLocation) &&
        Objects.equals(this.description, milestoneMVO.description) &&
        Objects.equals(this.id, milestoneMVO.id) &&
        Objects.equals(this.status, milestoneMVO.status) &&
        Objects.equals(this.milestoneDate, milestoneMVO.milestoneDate) &&
        Objects.equals(this.name, milestoneMVO.name) &&
        Objects.equals(this.message, milestoneMVO.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atType, atBaseType, atSchemaLocation, description, id, status, milestoneDate, name, message);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MilestoneMVO {\n");
    sb.append("    atType: ").append(toIndentedString(atType)).append("\n");
    sb.append("    atBaseType: ").append(toIndentedString(atBaseType)).append("\n");
    sb.append("    atSchemaLocation: ").append(toIndentedString(atSchemaLocation)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    milestoneDate: ").append(toIndentedString(milestoneDate)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

