/* tslint:disable */
/* eslint-disable */
/**
 * Mission Management
 * ## PSID API Reference: PSID002 - Mission Management  The Mission API enables customers to create, update and delete missions. A mission is composed of one or more teams, their areas of operation and communication needs. The data can be used to issue an inquiry for matching products (see PSID001).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { CharacteristicValuePrecedence } from "./CharacteristicValuePrecedence";
import {
    CharacteristicValuePrecedenceFromJSON,
    CharacteristicValuePrecedenceFromJSONTyped,
    CharacteristicValuePrecedenceToJSON,
    CharacteristicValuePrecedenceToJSONTyped
} from "./CharacteristicValuePrecedence";

/**
 * specification of a value (number or text or an object) that can be assigned to a Characteristic.
 * @export
 * @interface InquiredCharacteristicValueSpecification
 */
export interface InquiredCharacteristicValueSpecification {
    /**
     *
     * @type {CharacteristicValuePrecedence}
     * @memberof InquiredCharacteristicValueSpecification
     */
    precedence?: CharacteristicValuePrecedence;
    /**
     * A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
     * @type {string}
     * @memberof InquiredCharacteristicValueSpecification
     */
    unitOfMeasure?: string;
    /**
     * A kind of value that the characteristic value can take on, such as numeric, text and so forth
     * @type {string}
     * @memberof InquiredCharacteristicValueSpecification
     */
    valueType?: string;
    /**
     *
     * @type {any}
     * @memberof InquiredCharacteristicValueSpecification
     */
    value?: any | null;
}

/**
 * Check if a given object implements the InquiredCharacteristicValueSpecification interface.
 */
export function instanceOfInquiredCharacteristicValueSpecification(
    value: object
): value is InquiredCharacteristicValueSpecification {
    return true;
}

export function InquiredCharacteristicValueSpecificationFromJSON(
    json: any
): InquiredCharacteristicValueSpecification {
    return InquiredCharacteristicValueSpecificationFromJSONTyped(json, false);
}

export function InquiredCharacteristicValueSpecificationFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): InquiredCharacteristicValueSpecification {
    if (json == null) {
        return json;
    }
    return {
        precedence:
            json["precedence"] == null
                ? undefined
                : CharacteristicValuePrecedenceFromJSON(json["precedence"]),
        unitOfMeasure: json["unitOfMeasure"] == null ? undefined : json["unitOfMeasure"],
        valueType: json["valueType"] == null ? undefined : json["valueType"],
        value: json["value"] == null ? undefined : json["value"]
    };
}

export function InquiredCharacteristicValueSpecificationToJSON(
    json: any
): InquiredCharacteristicValueSpecification {
    return InquiredCharacteristicValueSpecificationToJSONTyped(json, false);
}

export function InquiredCharacteristicValueSpecificationToJSONTyped(
    value?: InquiredCharacteristicValueSpecification | null,
    ignoreDiscriminator: boolean = false
): any {
    if (value == null) {
        return value;
    }

    return {
        precedence: CharacteristicValuePrecedenceToJSON(value["precedence"]),
        unitOfMeasure: value["unitOfMeasure"],
        valueType: value["valueType"],
        value: value["value"]
    };
}
