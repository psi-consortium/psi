/* tslint:disable */
/* eslint-disable */
/**
 * Mission Management
 * ## PSID API Reference: PSID002 - Mission Management  The Mission API enables customers to create, update and delete missions. A mission is composed of one or more teams, their areas of operation and communication needs. The data can be used to issue an inquiry for matching products (see PSID001).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * A period of time, either as a deadline (endDateTime only) a startDateTime only, or both
 * @export
 * @interface TimePeriod
 */
export interface TimePeriod {
    /**
     * End of the time period, using IETC-RFC-3339 format
     * @type {Date}
     * @memberof TimePeriod
     */
    endDateTime?: Date;
    /**
     * Start of the time period, using IETC-RFC-3339 format
     * @type {Date}
     * @memberof TimePeriod
     */
    startDateTime?: Date;
}

/**
 * Check if a given object implements the TimePeriod interface.
 */
export function instanceOfTimePeriod(value: object): value is TimePeriod {
    return true;
}

export function TimePeriodFromJSON(json: any): TimePeriod {
    return TimePeriodFromJSONTyped(json, false);
}

export function TimePeriodFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimePeriod {
    if (json == null) {
        return json;
    }
    return {
        endDateTime: json["endDateTime"] == null ? undefined : new Date(json["endDateTime"]),
        startDateTime: json["startDateTime"] == null ? undefined : new Date(json["startDateTime"])
    };
}

export function TimePeriodToJSON(json: any): TimePeriod {
    return TimePeriodToJSONTyped(json, false);
}

export function TimePeriodToJSONTyped(
    value?: TimePeriod | null,
    ignoreDiscriminator: boolean = false
): any {
    if (value == null) {
        return value;
    }

    return {
        endDateTime: value["endDateTime"] == null ? undefined : value["endDateTime"].toISOString(),
        startDateTime:
            value["startDateTime"] == null ? undefined : value["startDateTime"].toISOString()
    };
}
