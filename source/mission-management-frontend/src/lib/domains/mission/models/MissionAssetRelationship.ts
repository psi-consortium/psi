/* tslint:disable */
/* eslint-disable */
/**
 * Mission Management
 * ## PSID API Reference: PSID002 - Mission Management  The Mission API enables customers to create, update and delete missions. A mission is composed of one or more teams, their areas of operation and communication needs. The data can be used to issue an inquiry for matching products (see PSID001).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface MissionAssetRelationship
 */
export interface MissionAssetRelationship {
    /**
     * unique identifier
     * @type {string}
     * @memberof MissionAssetRelationship
     */
    id?: string;
    /**
     * Hyperlink reference
     * @type {string}
     * @memberof MissionAssetRelationship
     */
    href?: string;
    /**
     * Name of the related entity.
     * @type {string}
     * @memberof MissionAssetRelationship
     */
    name?: string;
    /**
     * Type of relationship between assets such as requires, exchangableTo, partOf, usedBy
     * @type {string}
     * @memberof MissionAssetRelationship
     */
    relationshipType?: string;
}

/**
 * Check if a given object implements the MissionAssetRelationship interface.
 */
export function instanceOfMissionAssetRelationship(
    value: object
): value is MissionAssetRelationship {
    return true;
}

export function MissionAssetRelationshipFromJSON(json: any): MissionAssetRelationship {
    return MissionAssetRelationshipFromJSONTyped(json, false);
}

export function MissionAssetRelationshipFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): MissionAssetRelationship {
    if (json == null) {
        return json;
    }
    return {
        id: json["id"] == null ? undefined : json["id"],
        href: json["href"] == null ? undefined : json["href"],
        name: json["name"] == null ? undefined : json["name"],
        relationshipType: json["relationshipType"] == null ? undefined : json["relationshipType"]
    };
}

export function MissionAssetRelationshipToJSON(json: any): MissionAssetRelationship {
    return MissionAssetRelationshipToJSONTyped(json, false);
}

export function MissionAssetRelationshipToJSONTyped(
    value?: MissionAssetRelationship | null,
    ignoreDiscriminator: boolean = false
): any {
    if (value == null) {
        return value;
    }

    return {
        id: value["id"],
        href: value["href"],
        name: value["name"],
        relationshipType: value["relationshipType"]
    };
}
