/* tslint:disable */
/* eslint-disable */
/**
 * API Party
 * ## TMF API Reference : TMF 632 - Party   ### Release : 19.0   The party API provides standardized mechanism for party management such as creation, update, retrieval, deletion and notification of events. Party can be an individual or an organization that has any kind of relation with the enterprise. Party is created to record individual or organization information before the assignment of any role. For example, within the context of a split billing mechanism, Party API allows creation of the individual or organization that will play the role of 3 rd payer for a given offer and, then, allows consultation or update of his information.  ### Resources - Organization - Individual - Hub  Party API performs the following operations : - Retrieve an organization or an individual - Retrieve a collection of organizations or individuals according to given criteria - Create a new organization or a new individual - Update an existing organization or an existing individual - Delete an existing organization or an existing individual - Notify events on organizatin or individual
 *
 * The version of the OpenAPI document: 4.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { TimePeriod } from "./TimePeriod";
import {
    TimePeriodFromJSON,
    TimePeriodFromJSONTyped,
    TimePeriodToJSON,
    TimePeriodToJSONTyped
} from "./TimePeriod";

/**
 * An individual might be evaluated for its worthiness and this evaluation might be based on a credit rating given by a credit agency.
 * @export
 * @interface PartyCreditProfile
 */
export interface PartyCreditProfile {
    /**
     * unique identifier
     * @type {string}
     * @memberof PartyCreditProfile
     */
    id?: string;
    /**
     * Hyperlink reference
     * @type {string}
     * @memberof PartyCreditProfile
     */
    href?: string;
    /**
     * Name of the credit agency giving the score
     * @type {string}
     * @memberof PartyCreditProfile
     */
    creditAgencyName?: string;
    /**
     * Type of the credit agency giving the score
     * @type {string}
     * @memberof PartyCreditProfile
     */
    creditAgencyType?: string;
    /**
     * Reference corresponding to the credit rating
     * @type {string}
     * @memberof PartyCreditProfile
     */
    ratingReference?: string;
    /**
     * A measure of a partyâ€™s creditworthiness calculated on the basis of a combination of factors such as their income and credit history
     * @type {number}
     * @memberof PartyCreditProfile
     */
    ratingScore?: number;
    /**
     *
     * @type {TimePeriod}
     * @memberof PartyCreditProfile
     */
    validFor?: TimePeriod;
    /**
     * When sub-classing, this defines the super-class
     * @type {string}
     * @memberof PartyCreditProfile
     */
    baseType?: string;
    /**
     * A URI to a JSON-Schema file that defines additional attributes and relationships
     * @type {string}
     * @memberof PartyCreditProfile
     */
    schemaLocation?: string;
    /**
     * When sub-classing, this defines the sub-class Extensible name
     * @type {string}
     * @memberof PartyCreditProfile
     */
    type?: string;
}

/**
 * Check if a given object implements the PartyCreditProfile interface.
 */
export function instanceOfPartyCreditProfile(value: object): value is PartyCreditProfile {
    return true;
}

export function PartyCreditProfileFromJSON(json: any): PartyCreditProfile {
    return PartyCreditProfileFromJSONTyped(json, false);
}

export function PartyCreditProfileFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): PartyCreditProfile {
    if (json == null) {
        return json;
    }
    return {
        id: json["id"] == null ? undefined : json["id"],
        href: json["href"] == null ? undefined : json["href"],
        creditAgencyName: json["creditAgencyName"] == null ? undefined : json["creditAgencyName"],
        creditAgencyType: json["creditAgencyType"] == null ? undefined : json["creditAgencyType"],
        ratingReference: json["ratingReference"] == null ? undefined : json["ratingReference"],
        ratingScore: json["ratingScore"] == null ? undefined : json["ratingScore"],
        validFor: json["validFor"] == null ? undefined : TimePeriodFromJSON(json["validFor"]),
        baseType: json["@baseType"] == null ? undefined : json["@baseType"],
        schemaLocation: json["@schemaLocation"] == null ? undefined : json["@schemaLocation"],
        type: json["@type"] == null ? undefined : json["@type"]
    };
}

export function PartyCreditProfileToJSON(json: any): PartyCreditProfile {
    return PartyCreditProfileToJSONTyped(json, false);
}

export function PartyCreditProfileToJSONTyped(
    value?: PartyCreditProfile | null,
    ignoreDiscriminator: boolean = false
): any {
    if (value == null) {
        return value;
    }

    return {
        id: value["id"],
        href: value["href"],
        creditAgencyName: value["creditAgencyName"],
        creditAgencyType: value["creditAgencyType"],
        ratingReference: value["ratingReference"],
        ratingScore: value["ratingScore"],
        validFor: TimePeriodToJSON(value["validFor"]),
        "@baseType": value["baseType"],
        "@schemaLocation": value["schemaLocation"],
        "@type": value["type"]
    };
}
