/* tslint:disable */
/* eslint-disable */
/**
 * API Party
 * ## TMF API Reference : TMF 632 - Party   ### Release : 19.0   The party API provides standardized mechanism for party management such as creation, update, retrieval, deletion and notification of events. Party can be an individual or an organization that has any kind of relation with the enterprise. Party is created to record individual or organization information before the assignment of any role. For example, within the context of a split billing mechanism, Party API allows creation of the individual or organization that will play the role of 3 rd payer for a given offer and, then, allows consultation or update of his information.  ### Resources - Organization - Individual - Hub  Party API performs the following operations : - Retrieve an organization or an individual - Retrieve a collection of organizations or individuals according to given criteria - Create a new organization or a new individual - Update an existing organization or an existing individual - Delete an existing organization or an existing individual - Notify events on organizatin or individual
 *
 * The version of the OpenAPI document: 4.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Valid values for the lifecycle state of the individual
 * @export
 */
export const IndividualStateType = {
    Initialized: "initialized",
    Validated: "validated",
    Deceased: "deceased"
} as const;
export type IndividualStateType = (typeof IndividualStateType)[keyof typeof IndividualStateType];

export function instanceOfIndividualStateType(value: any): boolean {
    for (const key in IndividualStateType) {
        if (Object.prototype.hasOwnProperty.call(IndividualStateType, key)) {
            if (IndividualStateType[key as keyof typeof IndividualStateType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function IndividualStateTypeFromJSON(json: any): IndividualStateType {
    return IndividualStateTypeFromJSONTyped(json, false);
}

export function IndividualStateTypeFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): IndividualStateType {
    return json as IndividualStateType;
}

export function IndividualStateTypeToJSON(value?: IndividualStateType | null): any {
    return value as any;
}

export function IndividualStateTypeToJSONTyped(
    value: any,
    ignoreDiscriminator: boolean
): IndividualStateType {
    return value as IndividualStateType;
}
