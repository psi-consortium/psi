/*
Mission Management

## PSID API Reference: PSID002 - Mission Management  The Mission API enables customers to create, update and delete missions. A mission is composed of one or more teams, their areas of operation and communication needs. The data can be used to issue an inquiry for matching products (see PSID001).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MissionCreate A mission of a customer. Skipped properties: id,href,lastUpdated
type MissionCreate struct {
	// Name of the mission
	Name string `json:"name"`
	// Description of the mission
	Description *string `json:"description,omitempty"`
	// Category of the mission like 'Humanitarian Aid', 'Wildfire Fighting' and so on.
	Category *string `json:"category,omitempty"`
	Timeframe *TimePeriod `json:"timeframe,omitempty"`
	Status *MissionStatusType `json:"status,omitempty"`
	Characteristic []Characteristic `json:"characteristic,omitempty"`
	// List of places where the mission is conducted.
	Place []PlaceRefOrValue `json:"place,omitempty"`
	// List of assets for this mission.
	Asset []MissionAsset `json:"asset,omitempty"`
	// Relation to other missions.
	MissionRelationship []MissionRelationship `json:"missionRelationship,omitempty"`
	// A related party defines party or party role linked to a specific entity.
	RelatedParty []RelatedParty `json:"relatedParty,omitempty"`
	// When sub-classing, this defines the super-class.
	BaseType *string `json:"@baseType,omitempty"`
	// A URI to a JSON-Schema file that defines additional attributes and relationships
	SchemaLocation *string `json:"@schemaLocation,omitempty"`
	// When sub-classing, this defines the sub-class entity name.
	Type *string `json:"@type,omitempty"`
}

// NewMissionCreate instantiates a new MissionCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMissionCreate(name string) *MissionCreate {
	this := MissionCreate{}
	this.Name = name
	return &this
}

// NewMissionCreateWithDefaults instantiates a new MissionCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMissionCreateWithDefaults() *MissionCreate {
	this := MissionCreate{}
	return &this
}

// GetName returns the Name field value
func (o *MissionCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MissionCreate) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MissionCreate) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MissionCreate) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MissionCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MissionCreate) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MissionCreate) SetDescription(v string) {
	o.Description = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *MissionCreate) GetCategory() string {
	if o == nil || isNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MissionCreate) GetCategoryOk() (*string, bool) {
	if o == nil || isNil(o.Category) {
    return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *MissionCreate) HasCategory() bool {
	if o != nil && !isNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *MissionCreate) SetCategory(v string) {
	o.Category = &v
}

// GetTimeframe returns the Timeframe field value if set, zero value otherwise.
func (o *MissionCreate) GetTimeframe() TimePeriod {
	if o == nil || isNil(o.Timeframe) {
		var ret TimePeriod
		return ret
	}
	return *o.Timeframe
}

// GetTimeframeOk returns a tuple with the Timeframe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MissionCreate) GetTimeframeOk() (*TimePeriod, bool) {
	if o == nil || isNil(o.Timeframe) {
    return nil, false
	}
	return o.Timeframe, true
}

// HasTimeframe returns a boolean if a field has been set.
func (o *MissionCreate) HasTimeframe() bool {
	if o != nil && !isNil(o.Timeframe) {
		return true
	}

	return false
}

// SetTimeframe gets a reference to the given TimePeriod and assigns it to the Timeframe field.
func (o *MissionCreate) SetTimeframe(v TimePeriod) {
	o.Timeframe = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MissionCreate) GetStatus() MissionStatusType {
	if o == nil || isNil(o.Status) {
		var ret MissionStatusType
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MissionCreate) GetStatusOk() (*MissionStatusType, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MissionCreate) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given MissionStatusType and assigns it to the Status field.
func (o *MissionCreate) SetStatus(v MissionStatusType) {
	o.Status = &v
}

// GetCharacteristic returns the Characteristic field value if set, zero value otherwise.
func (o *MissionCreate) GetCharacteristic() []Characteristic {
	if o == nil || isNil(o.Characteristic) {
		var ret []Characteristic
		return ret
	}
	return o.Characteristic
}

// GetCharacteristicOk returns a tuple with the Characteristic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MissionCreate) GetCharacteristicOk() ([]Characteristic, bool) {
	if o == nil || isNil(o.Characteristic) {
    return nil, false
	}
	return o.Characteristic, true
}

// HasCharacteristic returns a boolean if a field has been set.
func (o *MissionCreate) HasCharacteristic() bool {
	if o != nil && !isNil(o.Characteristic) {
		return true
	}

	return false
}

// SetCharacteristic gets a reference to the given []Characteristic and assigns it to the Characteristic field.
func (o *MissionCreate) SetCharacteristic(v []Characteristic) {
	o.Characteristic = v
}

// GetPlace returns the Place field value if set, zero value otherwise.
func (o *MissionCreate) GetPlace() []PlaceRefOrValue {
	if o == nil || isNil(o.Place) {
		var ret []PlaceRefOrValue
		return ret
	}
	return o.Place
}

// GetPlaceOk returns a tuple with the Place field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MissionCreate) GetPlaceOk() ([]PlaceRefOrValue, bool) {
	if o == nil || isNil(o.Place) {
    return nil, false
	}
	return o.Place, true
}

// HasPlace returns a boolean if a field has been set.
func (o *MissionCreate) HasPlace() bool {
	if o != nil && !isNil(o.Place) {
		return true
	}

	return false
}

// SetPlace gets a reference to the given []PlaceRefOrValue and assigns it to the Place field.
func (o *MissionCreate) SetPlace(v []PlaceRefOrValue) {
	o.Place = v
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *MissionCreate) GetAsset() []MissionAsset {
	if o == nil || isNil(o.Asset) {
		var ret []MissionAsset
		return ret
	}
	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MissionCreate) GetAssetOk() ([]MissionAsset, bool) {
	if o == nil || isNil(o.Asset) {
    return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *MissionCreate) HasAsset() bool {
	if o != nil && !isNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given []MissionAsset and assigns it to the Asset field.
func (o *MissionCreate) SetAsset(v []MissionAsset) {
	o.Asset = v
}

// GetMissionRelationship returns the MissionRelationship field value if set, zero value otherwise.
func (o *MissionCreate) GetMissionRelationship() []MissionRelationship {
	if o == nil || isNil(o.MissionRelationship) {
		var ret []MissionRelationship
		return ret
	}
	return o.MissionRelationship
}

// GetMissionRelationshipOk returns a tuple with the MissionRelationship field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MissionCreate) GetMissionRelationshipOk() ([]MissionRelationship, bool) {
	if o == nil || isNil(o.MissionRelationship) {
    return nil, false
	}
	return o.MissionRelationship, true
}

// HasMissionRelationship returns a boolean if a field has been set.
func (o *MissionCreate) HasMissionRelationship() bool {
	if o != nil && !isNil(o.MissionRelationship) {
		return true
	}

	return false
}

// SetMissionRelationship gets a reference to the given []MissionRelationship and assigns it to the MissionRelationship field.
func (o *MissionCreate) SetMissionRelationship(v []MissionRelationship) {
	o.MissionRelationship = v
}

// GetRelatedParty returns the RelatedParty field value if set, zero value otherwise.
func (o *MissionCreate) GetRelatedParty() []RelatedParty {
	if o == nil || isNil(o.RelatedParty) {
		var ret []RelatedParty
		return ret
	}
	return o.RelatedParty
}

// GetRelatedPartyOk returns a tuple with the RelatedParty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MissionCreate) GetRelatedPartyOk() ([]RelatedParty, bool) {
	if o == nil || isNil(o.RelatedParty) {
    return nil, false
	}
	return o.RelatedParty, true
}

// HasRelatedParty returns a boolean if a field has been set.
func (o *MissionCreate) HasRelatedParty() bool {
	if o != nil && !isNil(o.RelatedParty) {
		return true
	}

	return false
}

// SetRelatedParty gets a reference to the given []RelatedParty and assigns it to the RelatedParty field.
func (o *MissionCreate) SetRelatedParty(v []RelatedParty) {
	o.RelatedParty = v
}

// GetBaseType returns the BaseType field value if set, zero value otherwise.
func (o *MissionCreate) GetBaseType() string {
	if o == nil || isNil(o.BaseType) {
		var ret string
		return ret
	}
	return *o.BaseType
}

// GetBaseTypeOk returns a tuple with the BaseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MissionCreate) GetBaseTypeOk() (*string, bool) {
	if o == nil || isNil(o.BaseType) {
    return nil, false
	}
	return o.BaseType, true
}

// HasBaseType returns a boolean if a field has been set.
func (o *MissionCreate) HasBaseType() bool {
	if o != nil && !isNil(o.BaseType) {
		return true
	}

	return false
}

// SetBaseType gets a reference to the given string and assigns it to the BaseType field.
func (o *MissionCreate) SetBaseType(v string) {
	o.BaseType = &v
}

// GetSchemaLocation returns the SchemaLocation field value if set, zero value otherwise.
func (o *MissionCreate) GetSchemaLocation() string {
	if o == nil || isNil(o.SchemaLocation) {
		var ret string
		return ret
	}
	return *o.SchemaLocation
}

// GetSchemaLocationOk returns a tuple with the SchemaLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MissionCreate) GetSchemaLocationOk() (*string, bool) {
	if o == nil || isNil(o.SchemaLocation) {
    return nil, false
	}
	return o.SchemaLocation, true
}

// HasSchemaLocation returns a boolean if a field has been set.
func (o *MissionCreate) HasSchemaLocation() bool {
	if o != nil && !isNil(o.SchemaLocation) {
		return true
	}

	return false
}

// SetSchemaLocation gets a reference to the given string and assigns it to the SchemaLocation field.
func (o *MissionCreate) SetSchemaLocation(v string) {
	o.SchemaLocation = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MissionCreate) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MissionCreate) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MissionCreate) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MissionCreate) SetType(v string) {
	o.Type = &v
}

func (o MissionCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !isNil(o.Timeframe) {
		toSerialize["timeframe"] = o.Timeframe
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Characteristic) {
		toSerialize["characteristic"] = o.Characteristic
	}
	if !isNil(o.Place) {
		toSerialize["place"] = o.Place
	}
	if !isNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !isNil(o.MissionRelationship) {
		toSerialize["missionRelationship"] = o.MissionRelationship
	}
	if !isNil(o.RelatedParty) {
		toSerialize["relatedParty"] = o.RelatedParty
	}
	if !isNil(o.BaseType) {
		toSerialize["@baseType"] = o.BaseType
	}
	if !isNil(o.SchemaLocation) {
		toSerialize["@schemaLocation"] = o.SchemaLocation
	}
	if !isNil(o.Type) {
		toSerialize["@type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableMissionCreate struct {
	value *MissionCreate
	isSet bool
}

func (v NullableMissionCreate) Get() *MissionCreate {
	return v.value
}

func (v *NullableMissionCreate) Set(val *MissionCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableMissionCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableMissionCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMissionCreate(val *MissionCreate) *NullableMissionCreate {
	return &NullableMissionCreate{value: val, isSet: true}
}

func (v NullableMissionCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMissionCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


