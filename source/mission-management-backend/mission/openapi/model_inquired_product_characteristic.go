/*
Mission Management

## PSID API Reference: PSID002 - Mission Management  The Mission API enables customers to create, update and delete missions. A mission is composed of one or more teams, their areas of operation and communication needs. The data can be used to issue an inquiry for matching products (see PSID001).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InquiredProductCharacteristic A characteristic quality or distinctive feature of an InquiredProduct. The characteristic can take a discrete value, such as color, can take a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3).
type InquiredProductCharacteristic struct {
	// Unique ID for the characteristic
	Id string `json:"id"`
	// A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications.
	Name *string `json:"name,omitempty"`
	// Priority of this characteristic compared to others in ascending order (the most important one is 1). Multiple characteristics can be equally important. If the attribute is not set, the characteristic has lowest priority.
	Priority *float32 `json:"priority,omitempty"`
	// A kind of value that the characteristic can take on, such as numeric, text and so forth
	ValueType *string `json:"valueType,omitempty"`
	// The values of the attributes in the InquiredProductCharacteristicValue object describe the values of the attributes that the customer is requesting for the corresponding InquiredProduct.
	InquiredProductCharacteristicValue []InquiredCharacteristicValueSpecification `json:"inquiredProductCharacteristicValue"`
}

// NewInquiredProductCharacteristic instantiates a new InquiredProductCharacteristic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInquiredProductCharacteristic(id string, inquiredProductCharacteristicValue []InquiredCharacteristicValueSpecification) *InquiredProductCharacteristic {
	this := InquiredProductCharacteristic{}
	this.Id = id
	this.InquiredProductCharacteristicValue = inquiredProductCharacteristicValue
	return &this
}

// NewInquiredProductCharacteristicWithDefaults instantiates a new InquiredProductCharacteristic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInquiredProductCharacteristicWithDefaults() *InquiredProductCharacteristic {
	this := InquiredProductCharacteristic{}
	return &this
}

// GetId returns the Id field value
func (o *InquiredProductCharacteristic) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InquiredProductCharacteristic) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InquiredProductCharacteristic) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InquiredProductCharacteristic) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InquiredProductCharacteristic) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InquiredProductCharacteristic) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InquiredProductCharacteristic) SetName(v string) {
	o.Name = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *InquiredProductCharacteristic) GetPriority() float32 {
	if o == nil || isNil(o.Priority) {
		var ret float32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InquiredProductCharacteristic) GetPriorityOk() (*float32, bool) {
	if o == nil || isNil(o.Priority) {
    return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *InquiredProductCharacteristic) HasPriority() bool {
	if o != nil && !isNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given float32 and assigns it to the Priority field.
func (o *InquiredProductCharacteristic) SetPriority(v float32) {
	o.Priority = &v
}

// GetValueType returns the ValueType field value if set, zero value otherwise.
func (o *InquiredProductCharacteristic) GetValueType() string {
	if o == nil || isNil(o.ValueType) {
		var ret string
		return ret
	}
	return *o.ValueType
}

// GetValueTypeOk returns a tuple with the ValueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InquiredProductCharacteristic) GetValueTypeOk() (*string, bool) {
	if o == nil || isNil(o.ValueType) {
    return nil, false
	}
	return o.ValueType, true
}

// HasValueType returns a boolean if a field has been set.
func (o *InquiredProductCharacteristic) HasValueType() bool {
	if o != nil && !isNil(o.ValueType) {
		return true
	}

	return false
}

// SetValueType gets a reference to the given string and assigns it to the ValueType field.
func (o *InquiredProductCharacteristic) SetValueType(v string) {
	o.ValueType = &v
}

// GetInquiredProductCharacteristicValue returns the InquiredProductCharacteristicValue field value
func (o *InquiredProductCharacteristic) GetInquiredProductCharacteristicValue() []InquiredCharacteristicValueSpecification {
	if o == nil {
		var ret []InquiredCharacteristicValueSpecification
		return ret
	}

	return o.InquiredProductCharacteristicValue
}

// GetInquiredProductCharacteristicValueOk returns a tuple with the InquiredProductCharacteristicValue field value
// and a boolean to check if the value has been set.
func (o *InquiredProductCharacteristic) GetInquiredProductCharacteristicValueOk() ([]InquiredCharacteristicValueSpecification, bool) {
	if o == nil {
    return nil, false
	}
	return o.InquiredProductCharacteristicValue, true
}

// SetInquiredProductCharacteristicValue sets field value
func (o *InquiredProductCharacteristic) SetInquiredProductCharacteristicValue(v []InquiredCharacteristicValueSpecification) {
	o.InquiredProductCharacteristicValue = v
}

func (o InquiredProductCharacteristic) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !isNil(o.ValueType) {
		toSerialize["valueType"] = o.ValueType
	}
	if true {
		toSerialize["inquiredProductCharacteristicValue"] = o.InquiredProductCharacteristicValue
	}
	return json.Marshal(toSerialize)
}

type NullableInquiredProductCharacteristic struct {
	value *InquiredProductCharacteristic
	isSet bool
}

func (v NullableInquiredProductCharacteristic) Get() *InquiredProductCharacteristic {
	return v.value
}

func (v *NullableInquiredProductCharacteristic) Set(val *InquiredProductCharacteristic) {
	v.value = val
	v.isSet = true
}

func (v NullableInquiredProductCharacteristic) IsSet() bool {
	return v.isSet
}

func (v *NullableInquiredProductCharacteristic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInquiredProductCharacteristic(val *InquiredProductCharacteristic) *NullableInquiredProductCharacteristic {
	return &NullableInquiredProductCharacteristic{value: val, isSet: true}
}

func (v NullableInquiredProductCharacteristic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInquiredProductCharacteristic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


